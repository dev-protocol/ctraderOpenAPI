// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenApiCommonMessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_OpenApiCommonMessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_OpenApiCommonMessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "OpenApiCommonModelMessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OpenApiCommonMessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_OpenApiCommonMessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OpenApiCommonMessages_2eproto;
class ProtoErrorRes;
class ProtoErrorResDefaultTypeInternal;
extern ProtoErrorResDefaultTypeInternal _ProtoErrorRes_default_instance_;
class ProtoHeartbeatEvent;
class ProtoHeartbeatEventDefaultTypeInternal;
extern ProtoHeartbeatEventDefaultTypeInternal _ProtoHeartbeatEvent_default_instance_;
class ProtoMessage;
class ProtoMessageDefaultTypeInternal;
extern ProtoMessageDefaultTypeInternal _ProtoMessage_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoErrorRes* Arena::CreateMaybeMessage<::ProtoErrorRes>(Arena*);
template<> ::ProtoHeartbeatEvent* Arena::CreateMaybeMessage<::ProtoHeartbeatEvent>(Arena*);
template<> ::ProtoMessage* Arena::CreateMaybeMessage<::ProtoMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class ProtoMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessage) */ {
 public:
  inline ProtoMessage() : ProtoMessage(nullptr) {}
  virtual ~ProtoMessage();

  ProtoMessage(const ProtoMessage& from);
  ProtoMessage(ProtoMessage&& from) noexcept
    : ProtoMessage() {
    *this = ::std::move(from);
  }

  inline ProtoMessage& operator=(const ProtoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoMessage& operator=(ProtoMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoMessage& default_instance();

  static inline const ProtoMessage* internal_default_instance() {
    return reinterpret_cast<const ProtoMessage*>(
               &_ProtoMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoMessage& a, ProtoMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoMessage* New() const final {
    return CreateMaybeMessage<ProtoMessage>(nullptr);
  }

  ProtoMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoMessage& from);
  void MergeFrom(const ProtoMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessage";
  }
  protected:
  explicit ProtoMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiCommonMessages_2eproto);
    return ::descriptor_table_OpenApiCommonMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 2,
    kClientMsgIdFieldNumber = 3,
    kPayloadTypeFieldNumber = 1,
  };
  // optional bytes payload = 2;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const std::string& payload() const;
  void set_payload(const std::string& value);
  void set_payload(std::string&& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  std::string* mutable_payload();
  std::string* release_payload();
  void set_allocated_payload(std::string* payload);
  private:
  const std::string& _internal_payload() const;
  void _internal_set_payload(const std::string& value);
  std::string* _internal_mutable_payload();
  public:

  // optional string clientMsgId = 3;
  bool has_clientmsgid() const;
  private:
  bool _internal_has_clientmsgid() const;
  public:
  void clear_clientmsgid();
  const std::string& clientmsgid() const;
  void set_clientmsgid(const std::string& value);
  void set_clientmsgid(std::string&& value);
  void set_clientmsgid(const char* value);
  void set_clientmsgid(const char* value, size_t size);
  std::string* mutable_clientmsgid();
  std::string* release_clientmsgid();
  void set_allocated_clientmsgid(std::string* clientmsgid);
  private:
  const std::string& _internal_clientmsgid() const;
  void _internal_set_clientmsgid(const std::string& value);
  std::string* _internal_mutable_clientmsgid();
  public:

  // required uint32 payloadType = 1;
  bool has_payloadtype() const;
  private:
  bool _internal_has_payloadtype() const;
  public:
  void clear_payloadtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 payloadtype() const;
  void set_payloadtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_payloadtype() const;
  void _internal_set_payloadtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payload_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr clientmsgid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 payloadtype_;
  friend struct ::TableStruct_OpenApiCommonMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoErrorRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoErrorRes) */ {
 public:
  inline ProtoErrorRes() : ProtoErrorRes(nullptr) {}
  virtual ~ProtoErrorRes();

  ProtoErrorRes(const ProtoErrorRes& from);
  ProtoErrorRes(ProtoErrorRes&& from) noexcept
    : ProtoErrorRes() {
    *this = ::std::move(from);
  }

  inline ProtoErrorRes& operator=(const ProtoErrorRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoErrorRes& operator=(ProtoErrorRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoErrorRes& default_instance();

  static inline const ProtoErrorRes* internal_default_instance() {
    return reinterpret_cast<const ProtoErrorRes*>(
               &_ProtoErrorRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtoErrorRes& a, ProtoErrorRes& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoErrorRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoErrorRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoErrorRes* New() const final {
    return CreateMaybeMessage<ProtoErrorRes>(nullptr);
  }

  ProtoErrorRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoErrorRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoErrorRes& from);
  void MergeFrom(const ProtoErrorRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoErrorRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoErrorRes";
  }
  protected:
  explicit ProtoErrorRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiCommonMessages_2eproto);
    return ::descriptor_table_OpenApiCommonMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorCodeFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kMaintenanceEndTimestampFieldNumber = 4,
    kPayloadTypeFieldNumber = 1,
  };
  // required string errorCode = 2;
  bool has_errorcode() const;
  private:
  bool _internal_has_errorcode() const;
  public:
  void clear_errorcode();
  const std::string& errorcode() const;
  void set_errorcode(const std::string& value);
  void set_errorcode(std::string&& value);
  void set_errorcode(const char* value);
  void set_errorcode(const char* value, size_t size);
  std::string* mutable_errorcode();
  std::string* release_errorcode();
  void set_allocated_errorcode(std::string* errorcode);
  private:
  const std::string& _internal_errorcode() const;
  void _internal_set_errorcode(const std::string& value);
  std::string* _internal_mutable_errorcode();
  public:

  // optional string description = 3;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional uint64 maintenanceEndTimestamp = 4;
  bool has_maintenanceendtimestamp() const;
  private:
  bool _internal_has_maintenanceendtimestamp() const;
  public:
  void clear_maintenanceendtimestamp();
  ::PROTOBUF_NAMESPACE_ID::uint64 maintenanceendtimestamp() const;
  void set_maintenanceendtimestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_maintenanceendtimestamp() const;
  void _internal_set_maintenanceendtimestamp(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .ProtoPayloadType payloadType = 1 [default = ERROR_RES];
  bool has_payloadtype() const;
  private:
  bool _internal_has_payloadtype() const;
  public:
  void clear_payloadtype();
  ::ProtoPayloadType payloadtype() const;
  void set_payloadtype(::ProtoPayloadType value);
  private:
  ::ProtoPayloadType _internal_payloadtype() const;
  void _internal_set_payloadtype(::ProtoPayloadType value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoErrorRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr errorcode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 maintenanceendtimestamp_;
  int payloadtype_;
  friend struct ::TableStruct_OpenApiCommonMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoHeartbeatEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoHeartbeatEvent) */ {
 public:
  inline ProtoHeartbeatEvent() : ProtoHeartbeatEvent(nullptr) {}
  virtual ~ProtoHeartbeatEvent();

  ProtoHeartbeatEvent(const ProtoHeartbeatEvent& from);
  ProtoHeartbeatEvent(ProtoHeartbeatEvent&& from) noexcept
    : ProtoHeartbeatEvent() {
    *this = ::std::move(from);
  }

  inline ProtoHeartbeatEvent& operator=(const ProtoHeartbeatEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoHeartbeatEvent& operator=(ProtoHeartbeatEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoHeartbeatEvent& default_instance();

  static inline const ProtoHeartbeatEvent* internal_default_instance() {
    return reinterpret_cast<const ProtoHeartbeatEvent*>(
               &_ProtoHeartbeatEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProtoHeartbeatEvent& a, ProtoHeartbeatEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoHeartbeatEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoHeartbeatEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoHeartbeatEvent* New() const final {
    return CreateMaybeMessage<ProtoHeartbeatEvent>(nullptr);
  }

  ProtoHeartbeatEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoHeartbeatEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoHeartbeatEvent& from);
  void MergeFrom(const ProtoHeartbeatEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoHeartbeatEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoHeartbeatEvent";
  }
  protected:
  explicit ProtoHeartbeatEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiCommonMessages_2eproto);
    return ::descriptor_table_OpenApiCommonMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadTypeFieldNumber = 1,
  };
  // optional .ProtoPayloadType payloadType = 1 [default = HEARTBEAT_EVENT];
  bool has_payloadtype() const;
  private:
  bool _internal_has_payloadtype() const;
  public:
  void clear_payloadtype();
  ::ProtoPayloadType payloadtype() const;
  void set_payloadtype(::ProtoPayloadType value);
  private:
  ::ProtoPayloadType _internal_payloadtype() const;
  void _internal_set_payloadtype(::ProtoPayloadType value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoHeartbeatEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int payloadtype_;
  friend struct ::TableStruct_OpenApiCommonMessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoMessage

// required uint32 payloadType = 1;
inline bool ProtoMessage::_internal_has_payloadtype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoMessage::has_payloadtype() const {
  return _internal_has_payloadtype();
}
inline void ProtoMessage::clear_payloadtype() {
  payloadtype_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoMessage::_internal_payloadtype() const {
  return payloadtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoMessage::payloadtype() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.payloadType)
  return _internal_payloadtype();
}
inline void ProtoMessage::_internal_set_payloadtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  payloadtype_ = value;
}
inline void ProtoMessage::set_payloadtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_payloadtype(value);
  // @@protoc_insertion_point(field_set:ProtoMessage.payloadType)
}

// optional bytes payload = 2;
inline bool ProtoMessage::_internal_has_payload() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoMessage::has_payload() const {
  return _internal_has_payload();
}
inline void ProtoMessage::clear_payload() {
  payload_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoMessage::payload() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.payload)
  return _internal_payload();
}
inline void ProtoMessage::set_payload(const std::string& value) {
  _internal_set_payload(value);
  // @@protoc_insertion_point(field_set:ProtoMessage.payload)
}
inline std::string* ProtoMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:ProtoMessage.payload)
  return _internal_mutable_payload();
}
inline const std::string& ProtoMessage::_internal_payload() const {
  return payload_.Get();
}
inline void ProtoMessage::_internal_set_payload(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoMessage::set_payload(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessage.payload)
}
inline void ProtoMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessage.payload)
}
inline void ProtoMessage::set_payload(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.payload)
}
inline std::string* ProtoMessage::_internal_mutable_payload() {
  _has_bits_[0] |= 0x00000001u;
  return payload_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoMessage::release_payload() {
  // @@protoc_insertion_point(field_release:ProtoMessage.payload)
  if (!_internal_has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payload_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoMessage::set_allocated_payload(std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payload_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payload,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.payload)
}

// optional string clientMsgId = 3;
inline bool ProtoMessage::_internal_has_clientmsgid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoMessage::has_clientmsgid() const {
  return _internal_has_clientmsgid();
}
inline void ProtoMessage::clear_clientmsgid() {
  clientmsgid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoMessage::clientmsgid() const {
  // @@protoc_insertion_point(field_get:ProtoMessage.clientMsgId)
  return _internal_clientmsgid();
}
inline void ProtoMessage::set_clientmsgid(const std::string& value) {
  _internal_set_clientmsgid(value);
  // @@protoc_insertion_point(field_set:ProtoMessage.clientMsgId)
}
inline std::string* ProtoMessage::mutable_clientmsgid() {
  // @@protoc_insertion_point(field_mutable:ProtoMessage.clientMsgId)
  return _internal_mutable_clientmsgid();
}
inline const std::string& ProtoMessage::_internal_clientmsgid() const {
  return clientmsgid_.Get();
}
inline void ProtoMessage::_internal_set_clientmsgid(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  clientmsgid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoMessage::set_clientmsgid(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  clientmsgid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessage.clientMsgId)
}
inline void ProtoMessage::set_clientmsgid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  clientmsgid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessage.clientMsgId)
}
inline void ProtoMessage::set_clientmsgid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  clientmsgid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessage.clientMsgId)
}
inline std::string* ProtoMessage::_internal_mutable_clientmsgid() {
  _has_bits_[0] |= 0x00000002u;
  return clientmsgid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoMessage::release_clientmsgid() {
  // @@protoc_insertion_point(field_release:ProtoMessage.clientMsgId)
  if (!_internal_has_clientmsgid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return clientmsgid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoMessage::set_allocated_clientmsgid(std::string* clientmsgid) {
  if (clientmsgid != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  clientmsgid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), clientmsgid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessage.clientMsgId)
}

// -------------------------------------------------------------------

// ProtoErrorRes

// optional .ProtoPayloadType payloadType = 1 [default = ERROR_RES];
inline bool ProtoErrorRes::_internal_has_payloadtype() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoErrorRes::has_payloadtype() const {
  return _internal_has_payloadtype();
}
inline void ProtoErrorRes::clear_payloadtype() {
  payloadtype_ = 50;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::ProtoPayloadType ProtoErrorRes::_internal_payloadtype() const {
  return static_cast< ::ProtoPayloadType >(payloadtype_);
}
inline ::ProtoPayloadType ProtoErrorRes::payloadtype() const {
  // @@protoc_insertion_point(field_get:ProtoErrorRes.payloadType)
  return _internal_payloadtype();
}
inline void ProtoErrorRes::_internal_set_payloadtype(::ProtoPayloadType value) {
  assert(::ProtoPayloadType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  payloadtype_ = value;
}
inline void ProtoErrorRes::set_payloadtype(::ProtoPayloadType value) {
  _internal_set_payloadtype(value);
  // @@protoc_insertion_point(field_set:ProtoErrorRes.payloadType)
}

// required string errorCode = 2;
inline bool ProtoErrorRes::_internal_has_errorcode() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoErrorRes::has_errorcode() const {
  return _internal_has_errorcode();
}
inline void ProtoErrorRes::clear_errorcode() {
  errorcode_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoErrorRes::errorcode() const {
  // @@protoc_insertion_point(field_get:ProtoErrorRes.errorCode)
  return _internal_errorcode();
}
inline void ProtoErrorRes::set_errorcode(const std::string& value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:ProtoErrorRes.errorCode)
}
inline std::string* ProtoErrorRes::mutable_errorcode() {
  // @@protoc_insertion_point(field_mutable:ProtoErrorRes.errorCode)
  return _internal_mutable_errorcode();
}
inline const std::string& ProtoErrorRes::_internal_errorcode() const {
  return errorcode_.Get();
}
inline void ProtoErrorRes::_internal_set_errorcode(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoErrorRes::set_errorcode(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  errorcode_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoErrorRes.errorCode)
}
inline void ProtoErrorRes::set_errorcode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoErrorRes.errorCode)
}
inline void ProtoErrorRes::set_errorcode(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoErrorRes.errorCode)
}
inline std::string* ProtoErrorRes::_internal_mutable_errorcode() {
  _has_bits_[0] |= 0x00000001u;
  return errorcode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoErrorRes::release_errorcode() {
  // @@protoc_insertion_point(field_release:ProtoErrorRes.errorCode)
  if (!_internal_has_errorcode()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return errorcode_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoErrorRes::set_allocated_errorcode(std::string* errorcode) {
  if (errorcode != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  errorcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), errorcode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoErrorRes.errorCode)
}

// optional string description = 3;
inline bool ProtoErrorRes::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoErrorRes::has_description() const {
  return _internal_has_description();
}
inline void ProtoErrorRes::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoErrorRes::description() const {
  // @@protoc_insertion_point(field_get:ProtoErrorRes.description)
  return _internal_description();
}
inline void ProtoErrorRes::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:ProtoErrorRes.description)
}
inline std::string* ProtoErrorRes::mutable_description() {
  // @@protoc_insertion_point(field_mutable:ProtoErrorRes.description)
  return _internal_mutable_description();
}
inline const std::string& ProtoErrorRes::_internal_description() const {
  return description_.Get();
}
inline void ProtoErrorRes::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoErrorRes::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoErrorRes.description)
}
inline void ProtoErrorRes::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoErrorRes.description)
}
inline void ProtoErrorRes::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoErrorRes.description)
}
inline std::string* ProtoErrorRes::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoErrorRes::release_description() {
  // @@protoc_insertion_point(field_release:ProtoErrorRes.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoErrorRes::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoErrorRes.description)
}

// optional uint64 maintenanceEndTimestamp = 4;
inline bool ProtoErrorRes::_internal_has_maintenanceendtimestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoErrorRes::has_maintenanceendtimestamp() const {
  return _internal_has_maintenanceendtimestamp();
}
inline void ProtoErrorRes::clear_maintenanceendtimestamp() {
  maintenanceendtimestamp_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoErrorRes::_internal_maintenanceendtimestamp() const {
  return maintenanceendtimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoErrorRes::maintenanceendtimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoErrorRes.maintenanceEndTimestamp)
  return _internal_maintenanceendtimestamp();
}
inline void ProtoErrorRes::_internal_set_maintenanceendtimestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  maintenanceendtimestamp_ = value;
}
inline void ProtoErrorRes::set_maintenanceendtimestamp(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_maintenanceendtimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoErrorRes.maintenanceEndTimestamp)
}

// -------------------------------------------------------------------

// ProtoHeartbeatEvent

// optional .ProtoPayloadType payloadType = 1 [default = HEARTBEAT_EVENT];
inline bool ProtoHeartbeatEvent::_internal_has_payloadtype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoHeartbeatEvent::has_payloadtype() const {
  return _internal_has_payloadtype();
}
inline void ProtoHeartbeatEvent::clear_payloadtype() {
  payloadtype_ = 51;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::ProtoPayloadType ProtoHeartbeatEvent::_internal_payloadtype() const {
  return static_cast< ::ProtoPayloadType >(payloadtype_);
}
inline ::ProtoPayloadType ProtoHeartbeatEvent::payloadtype() const {
  // @@protoc_insertion_point(field_get:ProtoHeartbeatEvent.payloadType)
  return _internal_payloadtype();
}
inline void ProtoHeartbeatEvent::_internal_set_payloadtype(::ProtoPayloadType value) {
  assert(::ProtoPayloadType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  payloadtype_ = value;
}
inline void ProtoHeartbeatEvent::set_payloadtype(::ProtoPayloadType value) {
  _internal_set_payloadtype(value);
  // @@protoc_insertion_point(field_set:ProtoHeartbeatEvent.payloadType)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_OpenApiCommonMessages_2eproto
