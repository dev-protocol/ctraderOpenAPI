// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenApiModelMessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_OpenApiModelMessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_OpenApiModelMessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_OpenApiModelMessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OpenApiModelMessages_2eproto;
class ProtoOAArchivedSymbol;
class ProtoOAArchivedSymbolDefaultTypeInternal;
extern ProtoOAArchivedSymbolDefaultTypeInternal _ProtoOAArchivedSymbol_default_instance_;
class ProtoOAAsset;
class ProtoOAAssetDefaultTypeInternal;
extern ProtoOAAssetDefaultTypeInternal _ProtoOAAsset_default_instance_;
class ProtoOAAssetClass;
class ProtoOAAssetClassDefaultTypeInternal;
extern ProtoOAAssetClassDefaultTypeInternal _ProtoOAAssetClass_default_instance_;
class ProtoOABonusDepositWithdraw;
class ProtoOABonusDepositWithdrawDefaultTypeInternal;
extern ProtoOABonusDepositWithdrawDefaultTypeInternal _ProtoOABonusDepositWithdraw_default_instance_;
class ProtoOAClosePositionDetail;
class ProtoOAClosePositionDetailDefaultTypeInternal;
extern ProtoOAClosePositionDetailDefaultTypeInternal _ProtoOAClosePositionDetail_default_instance_;
class ProtoOACtidProfile;
class ProtoOACtidProfileDefaultTypeInternal;
extern ProtoOACtidProfileDefaultTypeInternal _ProtoOACtidProfile_default_instance_;
class ProtoOACtidTraderAccount;
class ProtoOACtidTraderAccountDefaultTypeInternal;
extern ProtoOACtidTraderAccountDefaultTypeInternal _ProtoOACtidTraderAccount_default_instance_;
class ProtoOADeal;
class ProtoOADealDefaultTypeInternal;
extern ProtoOADealDefaultTypeInternal _ProtoOADeal_default_instance_;
class ProtoOADepositWithdraw;
class ProtoOADepositWithdrawDefaultTypeInternal;
extern ProtoOADepositWithdrawDefaultTypeInternal _ProtoOADepositWithdraw_default_instance_;
class ProtoOADepthQuote;
class ProtoOADepthQuoteDefaultTypeInternal;
extern ProtoOADepthQuoteDefaultTypeInternal _ProtoOADepthQuote_default_instance_;
class ProtoOAExpectedMargin;
class ProtoOAExpectedMarginDefaultTypeInternal;
extern ProtoOAExpectedMarginDefaultTypeInternal _ProtoOAExpectedMargin_default_instance_;
class ProtoOAHoliday;
class ProtoOAHolidayDefaultTypeInternal;
extern ProtoOAHolidayDefaultTypeInternal _ProtoOAHoliday_default_instance_;
class ProtoOAInterval;
class ProtoOAIntervalDefaultTypeInternal;
extern ProtoOAIntervalDefaultTypeInternal _ProtoOAInterval_default_instance_;
class ProtoOALightSymbol;
class ProtoOALightSymbolDefaultTypeInternal;
extern ProtoOALightSymbolDefaultTypeInternal _ProtoOALightSymbol_default_instance_;
class ProtoOAMarginCall;
class ProtoOAMarginCallDefaultTypeInternal;
extern ProtoOAMarginCallDefaultTypeInternal _ProtoOAMarginCall_default_instance_;
class ProtoOAOrder;
class ProtoOAOrderDefaultTypeInternal;
extern ProtoOAOrderDefaultTypeInternal _ProtoOAOrder_default_instance_;
class ProtoOAPosition;
class ProtoOAPositionDefaultTypeInternal;
extern ProtoOAPositionDefaultTypeInternal _ProtoOAPosition_default_instance_;
class ProtoOASymbol;
class ProtoOASymbolDefaultTypeInternal;
extern ProtoOASymbolDefaultTypeInternal _ProtoOASymbol_default_instance_;
class ProtoOASymbolCategory;
class ProtoOASymbolCategoryDefaultTypeInternal;
extern ProtoOASymbolCategoryDefaultTypeInternal _ProtoOASymbolCategory_default_instance_;
class ProtoOATickData;
class ProtoOATickDataDefaultTypeInternal;
extern ProtoOATickDataDefaultTypeInternal _ProtoOATickData_default_instance_;
class ProtoOATradeData;
class ProtoOATradeDataDefaultTypeInternal;
extern ProtoOATradeDataDefaultTypeInternal _ProtoOATradeData_default_instance_;
class ProtoOATrader;
class ProtoOATraderDefaultTypeInternal;
extern ProtoOATraderDefaultTypeInternal _ProtoOATrader_default_instance_;
class ProtoOATrendbar;
class ProtoOATrendbarDefaultTypeInternal;
extern ProtoOATrendbarDefaultTypeInternal _ProtoOATrendbar_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoOAArchivedSymbol* Arena::CreateMaybeMessage<::ProtoOAArchivedSymbol>(Arena*);
template<> ::ProtoOAAsset* Arena::CreateMaybeMessage<::ProtoOAAsset>(Arena*);
template<> ::ProtoOAAssetClass* Arena::CreateMaybeMessage<::ProtoOAAssetClass>(Arena*);
template<> ::ProtoOABonusDepositWithdraw* Arena::CreateMaybeMessage<::ProtoOABonusDepositWithdraw>(Arena*);
template<> ::ProtoOAClosePositionDetail* Arena::CreateMaybeMessage<::ProtoOAClosePositionDetail>(Arena*);
template<> ::ProtoOACtidProfile* Arena::CreateMaybeMessage<::ProtoOACtidProfile>(Arena*);
template<> ::ProtoOACtidTraderAccount* Arena::CreateMaybeMessage<::ProtoOACtidTraderAccount>(Arena*);
template<> ::ProtoOADeal* Arena::CreateMaybeMessage<::ProtoOADeal>(Arena*);
template<> ::ProtoOADepositWithdraw* Arena::CreateMaybeMessage<::ProtoOADepositWithdraw>(Arena*);
template<> ::ProtoOADepthQuote* Arena::CreateMaybeMessage<::ProtoOADepthQuote>(Arena*);
template<> ::ProtoOAExpectedMargin* Arena::CreateMaybeMessage<::ProtoOAExpectedMargin>(Arena*);
template<> ::ProtoOAHoliday* Arena::CreateMaybeMessage<::ProtoOAHoliday>(Arena*);
template<> ::ProtoOAInterval* Arena::CreateMaybeMessage<::ProtoOAInterval>(Arena*);
template<> ::ProtoOALightSymbol* Arena::CreateMaybeMessage<::ProtoOALightSymbol>(Arena*);
template<> ::ProtoOAMarginCall* Arena::CreateMaybeMessage<::ProtoOAMarginCall>(Arena*);
template<> ::ProtoOAOrder* Arena::CreateMaybeMessage<::ProtoOAOrder>(Arena*);
template<> ::ProtoOAPosition* Arena::CreateMaybeMessage<::ProtoOAPosition>(Arena*);
template<> ::ProtoOASymbol* Arena::CreateMaybeMessage<::ProtoOASymbol>(Arena*);
template<> ::ProtoOASymbolCategory* Arena::CreateMaybeMessage<::ProtoOASymbolCategory>(Arena*);
template<> ::ProtoOATickData* Arena::CreateMaybeMessage<::ProtoOATickData>(Arena*);
template<> ::ProtoOATradeData* Arena::CreateMaybeMessage<::ProtoOATradeData>(Arena*);
template<> ::ProtoOATrader* Arena::CreateMaybeMessage<::ProtoOATrader>(Arena*);
template<> ::ProtoOATrendbar* Arena::CreateMaybeMessage<::ProtoOATrendbar>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum ProtoOAPayloadType : int {
  PROTO_OA_APPLICATION_AUTH_REQ = 2100,
  PROTO_OA_APPLICATION_AUTH_RES = 2101,
  PROTO_OA_ACCOUNT_AUTH_REQ = 2102,
  PROTO_OA_ACCOUNT_AUTH_RES = 2103,
  PROTO_OA_VERSION_REQ = 2104,
  PROTO_OA_VERSION_RES = 2105,
  PROTO_OA_NEW_ORDER_REQ = 2106,
  PROTO_OA_TRAILING_SL_CHANGED_EVENT = 2107,
  PROTO_OA_CANCEL_ORDER_REQ = 2108,
  PROTO_OA_AMEND_ORDER_REQ = 2109,
  PROTO_OA_AMEND_POSITION_SLTP_REQ = 2110,
  PROTO_OA_CLOSE_POSITION_REQ = 2111,
  PROTO_OA_ASSET_LIST_REQ = 2112,
  PROTO_OA_ASSET_LIST_RES = 2113,
  PROTO_OA_SYMBOLS_LIST_REQ = 2114,
  PROTO_OA_SYMBOLS_LIST_RES = 2115,
  PROTO_OA_SYMBOL_BY_ID_REQ = 2116,
  PROTO_OA_SYMBOL_BY_ID_RES = 2117,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ = 2118,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_RES = 2119,
  PROTO_OA_SYMBOL_CHANGED_EVENT = 2120,
  PROTO_OA_TRADER_REQ = 2121,
  PROTO_OA_TRADER_RES = 2122,
  PROTO_OA_TRADER_UPDATE_EVENT = 2123,
  PROTO_OA_RECONCILE_REQ = 2124,
  PROTO_OA_RECONCILE_RES = 2125,
  PROTO_OA_EXECUTION_EVENT = 2126,
  PROTO_OA_SUBSCRIBE_SPOTS_REQ = 2127,
  PROTO_OA_SUBSCRIBE_SPOTS_RES = 2128,
  PROTO_OA_UNSUBSCRIBE_SPOTS_REQ = 2129,
  PROTO_OA_UNSUBSCRIBE_SPOTS_RES = 2130,
  PROTO_OA_SPOT_EVENT = 2131,
  PROTO_OA_ORDER_ERROR_EVENT = 2132,
  PROTO_OA_DEAL_LIST_REQ = 2133,
  PROTO_OA_DEAL_LIST_RES = 2134,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ = 2135,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ = 2136,
  PROTO_OA_GET_TRENDBARS_REQ = 2137,
  PROTO_OA_GET_TRENDBARS_RES = 2138,
  PROTO_OA_EXPECTED_MARGIN_REQ = 2139,
  PROTO_OA_EXPECTED_MARGIN_RES = 2140,
  PROTO_OA_MARGIN_CHANGED_EVENT = 2141,
  PROTO_OA_ERROR_RES = 2142,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ = 2143,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_RES = 2144,
  PROTO_OA_GET_TICKDATA_REQ = 2145,
  PROTO_OA_GET_TICKDATA_RES = 2146,
  PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT = 2147,
  PROTO_OA_CLIENT_DISCONNECT_EVENT = 2148,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ = 2149,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES = 2150,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ = 2151,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES = 2152,
  PROTO_OA_ASSET_CLASS_LIST_REQ = 2153,
  PROTO_OA_ASSET_CLASS_LIST_RES = 2154,
  PROTO_OA_DEPTH_EVENT = 2155,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ = 2156,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES = 2157,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ = 2158,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES = 2159,
  PROTO_OA_SYMBOL_CATEGORY_REQ = 2160,
  PROTO_OA_SYMBOL_CATEGORY_RES = 2161,
  PROTO_OA_ACCOUNT_LOGOUT_REQ = 2162,
  PROTO_OA_ACCOUNT_LOGOUT_RES = 2163,
  PROTO_OA_ACCOUNT_DISCONNECT_EVENT = 2164,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES = 2165,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES = 2166,
  PROTO_OA_MARGIN_CALL_LIST_REQ = 2167,
  PROTO_OA_MARGIN_CALL_LIST_RES = 2168,
  PROTO_OA_MARGIN_CALL_UPDATE_REQ = 2169,
  PROTO_OA_MARGIN_CALL_UPDATE_RES = 2170,
  PROTO_OA_MARGIN_CALL_UPDATE_EVENT = 2171,
  PROTO_OA_MARGIN_CALL_TRIGGER_EVENT = 2172,
  PROTO_OA_REFRESH_TOKEN_REQ = 2173,
  PROTO_OA_REFRESH_TOKEN_RES = 2174
};
bool ProtoOAPayloadType_IsValid(int value);
constexpr ProtoOAPayloadType ProtoOAPayloadType_MIN = PROTO_OA_APPLICATION_AUTH_REQ;
constexpr ProtoOAPayloadType ProtoOAPayloadType_MAX = PROTO_OA_REFRESH_TOKEN_RES;
constexpr int ProtoOAPayloadType_ARRAYSIZE = ProtoOAPayloadType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAPayloadType_descriptor();
template<typename T>
inline const std::string& ProtoOAPayloadType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAPayloadType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAPayloadType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAPayloadType_descriptor(), enum_t_value);
}
inline bool ProtoOAPayloadType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAPayloadType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAPayloadType>(
    ProtoOAPayloadType_descriptor(), name, value);
}
enum ProtoOADayOfWeek : int {
  NONE = 0,
  MONDAY = 1,
  TUESDAY = 2,
  WEDNESDAY = 3,
  THURSDAY = 4,
  FRIDAY = 5,
  SATURDAY = 6,
  SUNDAY = 7
};
bool ProtoOADayOfWeek_IsValid(int value);
constexpr ProtoOADayOfWeek ProtoOADayOfWeek_MIN = NONE;
constexpr ProtoOADayOfWeek ProtoOADayOfWeek_MAX = SUNDAY;
constexpr int ProtoOADayOfWeek_ARRAYSIZE = ProtoOADayOfWeek_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOADayOfWeek_descriptor();
template<typename T>
inline const std::string& ProtoOADayOfWeek_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOADayOfWeek>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOADayOfWeek_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOADayOfWeek_descriptor(), enum_t_value);
}
inline bool ProtoOADayOfWeek_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOADayOfWeek* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOADayOfWeek>(
    ProtoOADayOfWeek_descriptor(), name, value);
}
enum ProtoOACommissionType : int {
  USD_PER_MILLION_USD = 1,
  USD_PER_LOT = 2,
  PERCENTAGE_OF_VALUE = 3,
  QUOTE_CCY_PER_LOT = 4
};
bool ProtoOACommissionType_IsValid(int value);
constexpr ProtoOACommissionType ProtoOACommissionType_MIN = USD_PER_MILLION_USD;
constexpr ProtoOACommissionType ProtoOACommissionType_MAX = QUOTE_CCY_PER_LOT;
constexpr int ProtoOACommissionType_ARRAYSIZE = ProtoOACommissionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOACommissionType_descriptor();
template<typename T>
inline const std::string& ProtoOACommissionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOACommissionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOACommissionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOACommissionType_descriptor(), enum_t_value);
}
inline bool ProtoOACommissionType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOACommissionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOACommissionType>(
    ProtoOACommissionType_descriptor(), name, value);
}
enum ProtoOASymbolDistanceType : int {
  SYMBOL_DISTANCE_IN_POINTS = 1,
  SYMBOL_DISTANCE_IN_PERCENTAGE = 2
};
bool ProtoOASymbolDistanceType_IsValid(int value);
constexpr ProtoOASymbolDistanceType ProtoOASymbolDistanceType_MIN = SYMBOL_DISTANCE_IN_POINTS;
constexpr ProtoOASymbolDistanceType ProtoOASymbolDistanceType_MAX = SYMBOL_DISTANCE_IN_PERCENTAGE;
constexpr int ProtoOASymbolDistanceType_ARRAYSIZE = ProtoOASymbolDistanceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOASymbolDistanceType_descriptor();
template<typename T>
inline const std::string& ProtoOASymbolDistanceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOASymbolDistanceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOASymbolDistanceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOASymbolDistanceType_descriptor(), enum_t_value);
}
inline bool ProtoOASymbolDistanceType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOASymbolDistanceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOASymbolDistanceType>(
    ProtoOASymbolDistanceType_descriptor(), name, value);
}
enum ProtoOAMinCommissionType : int {
  CURRENCY = 1,
  QUOTE_CURRENCY = 2
};
bool ProtoOAMinCommissionType_IsValid(int value);
constexpr ProtoOAMinCommissionType ProtoOAMinCommissionType_MIN = CURRENCY;
constexpr ProtoOAMinCommissionType ProtoOAMinCommissionType_MAX = QUOTE_CURRENCY;
constexpr int ProtoOAMinCommissionType_ARRAYSIZE = ProtoOAMinCommissionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAMinCommissionType_descriptor();
template<typename T>
inline const std::string& ProtoOAMinCommissionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAMinCommissionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAMinCommissionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAMinCommissionType_descriptor(), enum_t_value);
}
inline bool ProtoOAMinCommissionType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAMinCommissionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAMinCommissionType>(
    ProtoOAMinCommissionType_descriptor(), name, value);
}
enum ProtoOATradingMode : int {
  ENABLED = 0,
  DISABLED_WITHOUT_PENDINGS_EXECUTION = 1,
  DISABLED_WITH_PENDINGS_EXECUTION = 2,
  CLOSE_ONLY_MODE = 3
};
bool ProtoOATradingMode_IsValid(int value);
constexpr ProtoOATradingMode ProtoOATradingMode_MIN = ENABLED;
constexpr ProtoOATradingMode ProtoOATradingMode_MAX = CLOSE_ONLY_MODE;
constexpr int ProtoOATradingMode_ARRAYSIZE = ProtoOATradingMode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOATradingMode_descriptor();
template<typename T>
inline const std::string& ProtoOATradingMode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOATradingMode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOATradingMode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOATradingMode_descriptor(), enum_t_value);
}
inline bool ProtoOATradingMode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOATradingMode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOATradingMode>(
    ProtoOATradingMode_descriptor(), name, value);
}
enum ProtoOASwapCalculationType : int {
  PIPS = 0,
  PERCENTAGE = 1
};
bool ProtoOASwapCalculationType_IsValid(int value);
constexpr ProtoOASwapCalculationType ProtoOASwapCalculationType_MIN = PIPS;
constexpr ProtoOASwapCalculationType ProtoOASwapCalculationType_MAX = PERCENTAGE;
constexpr int ProtoOASwapCalculationType_ARRAYSIZE = ProtoOASwapCalculationType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOASwapCalculationType_descriptor();
template<typename T>
inline const std::string& ProtoOASwapCalculationType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOASwapCalculationType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOASwapCalculationType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOASwapCalculationType_descriptor(), enum_t_value);
}
inline bool ProtoOASwapCalculationType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOASwapCalculationType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOASwapCalculationType>(
    ProtoOASwapCalculationType_descriptor(), name, value);
}
enum ProtoOAAccessRights : int {
  FULL_ACCESS = 0,
  CLOSE_ONLY = 1,
  NO_TRADING = 2,
  NO_LOGIN = 3
};
bool ProtoOAAccessRights_IsValid(int value);
constexpr ProtoOAAccessRights ProtoOAAccessRights_MIN = FULL_ACCESS;
constexpr ProtoOAAccessRights ProtoOAAccessRights_MAX = NO_LOGIN;
constexpr int ProtoOAAccessRights_ARRAYSIZE = ProtoOAAccessRights_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAAccessRights_descriptor();
template<typename T>
inline const std::string& ProtoOAAccessRights_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAAccessRights>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAAccessRights_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAAccessRights_descriptor(), enum_t_value);
}
inline bool ProtoOAAccessRights_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAAccessRights* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAAccessRights>(
    ProtoOAAccessRights_descriptor(), name, value);
}
enum ProtoOATotalMarginCalculationType : int {
  MAX = 0,
  SUM = 1,
  NET = 2
};
bool ProtoOATotalMarginCalculationType_IsValid(int value);
constexpr ProtoOATotalMarginCalculationType ProtoOATotalMarginCalculationType_MIN = MAX;
constexpr ProtoOATotalMarginCalculationType ProtoOATotalMarginCalculationType_MAX = NET;
constexpr int ProtoOATotalMarginCalculationType_ARRAYSIZE = ProtoOATotalMarginCalculationType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOATotalMarginCalculationType_descriptor();
template<typename T>
inline const std::string& ProtoOATotalMarginCalculationType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOATotalMarginCalculationType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOATotalMarginCalculationType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOATotalMarginCalculationType_descriptor(), enum_t_value);
}
inline bool ProtoOATotalMarginCalculationType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOATotalMarginCalculationType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOATotalMarginCalculationType>(
    ProtoOATotalMarginCalculationType_descriptor(), name, value);
}
enum ProtoOAAccountType : int {
  HEDGED = 0,
  NETTED = 1,
  SPREAD_BETTING = 2
};
bool ProtoOAAccountType_IsValid(int value);
constexpr ProtoOAAccountType ProtoOAAccountType_MIN = HEDGED;
constexpr ProtoOAAccountType ProtoOAAccountType_MAX = SPREAD_BETTING;
constexpr int ProtoOAAccountType_ARRAYSIZE = ProtoOAAccountType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAAccountType_descriptor();
template<typename T>
inline const std::string& ProtoOAAccountType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAAccountType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAAccountType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAAccountType_descriptor(), enum_t_value);
}
inline bool ProtoOAAccountType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAAccountType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAAccountType>(
    ProtoOAAccountType_descriptor(), name, value);
}
enum ProtoOAPositionStatus : int {
  POSITION_STATUS_OPEN = 1,
  POSITION_STATUS_CLOSED = 2,
  POSITION_STATUS_CREATED = 3,
  POSITION_STATUS_ERROR = 4
};
bool ProtoOAPositionStatus_IsValid(int value);
constexpr ProtoOAPositionStatus ProtoOAPositionStatus_MIN = POSITION_STATUS_OPEN;
constexpr ProtoOAPositionStatus ProtoOAPositionStatus_MAX = POSITION_STATUS_ERROR;
constexpr int ProtoOAPositionStatus_ARRAYSIZE = ProtoOAPositionStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAPositionStatus_descriptor();
template<typename T>
inline const std::string& ProtoOAPositionStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAPositionStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAPositionStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAPositionStatus_descriptor(), enum_t_value);
}
inline bool ProtoOAPositionStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAPositionStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAPositionStatus>(
    ProtoOAPositionStatus_descriptor(), name, value);
}
enum ProtoOATradeSide : int {
  BUY = 1,
  SELL = 2
};
bool ProtoOATradeSide_IsValid(int value);
constexpr ProtoOATradeSide ProtoOATradeSide_MIN = BUY;
constexpr ProtoOATradeSide ProtoOATradeSide_MAX = SELL;
constexpr int ProtoOATradeSide_ARRAYSIZE = ProtoOATradeSide_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOATradeSide_descriptor();
template<typename T>
inline const std::string& ProtoOATradeSide_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOATradeSide>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOATradeSide_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOATradeSide_descriptor(), enum_t_value);
}
inline bool ProtoOATradeSide_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOATradeSide* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOATradeSide>(
    ProtoOATradeSide_descriptor(), name, value);
}
enum ProtoOAOrderType : int {
  MARKET = 1,
  LIMIT = 2,
  STOP = 3,
  STOP_LOSS_TAKE_PROFIT = 4,
  MARKET_RANGE = 5,
  STOP_LIMIT = 6
};
bool ProtoOAOrderType_IsValid(int value);
constexpr ProtoOAOrderType ProtoOAOrderType_MIN = MARKET;
constexpr ProtoOAOrderType ProtoOAOrderType_MAX = STOP_LIMIT;
constexpr int ProtoOAOrderType_ARRAYSIZE = ProtoOAOrderType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAOrderType_descriptor();
template<typename T>
inline const std::string& ProtoOAOrderType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAOrderType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAOrderType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAOrderType_descriptor(), enum_t_value);
}
inline bool ProtoOAOrderType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAOrderType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAOrderType>(
    ProtoOAOrderType_descriptor(), name, value);
}
enum ProtoOATimeInForce : int {
  GOOD_TILL_DATE = 1,
  GOOD_TILL_CANCEL = 2,
  IMMEDIATE_OR_CANCEL = 3,
  FILL_OR_KILL = 4,
  MARKET_ON_OPEN = 5
};
bool ProtoOATimeInForce_IsValid(int value);
constexpr ProtoOATimeInForce ProtoOATimeInForce_MIN = GOOD_TILL_DATE;
constexpr ProtoOATimeInForce ProtoOATimeInForce_MAX = MARKET_ON_OPEN;
constexpr int ProtoOATimeInForce_ARRAYSIZE = ProtoOATimeInForce_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOATimeInForce_descriptor();
template<typename T>
inline const std::string& ProtoOATimeInForce_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOATimeInForce>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOATimeInForce_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOATimeInForce_descriptor(), enum_t_value);
}
inline bool ProtoOATimeInForce_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOATimeInForce* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOATimeInForce>(
    ProtoOATimeInForce_descriptor(), name, value);
}
enum ProtoOAOrderStatus : int {
  ORDER_STATUS_ACCEPTED = 1,
  ORDER_STATUS_FILLED = 2,
  ORDER_STATUS_REJECTED = 3,
  ORDER_STATUS_EXPIRED = 4,
  ORDER_STATUS_CANCELLED = 5
};
bool ProtoOAOrderStatus_IsValid(int value);
constexpr ProtoOAOrderStatus ProtoOAOrderStatus_MIN = ORDER_STATUS_ACCEPTED;
constexpr ProtoOAOrderStatus ProtoOAOrderStatus_MAX = ORDER_STATUS_CANCELLED;
constexpr int ProtoOAOrderStatus_ARRAYSIZE = ProtoOAOrderStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAOrderStatus_descriptor();
template<typename T>
inline const std::string& ProtoOAOrderStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAOrderStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAOrderStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAOrderStatus_descriptor(), enum_t_value);
}
inline bool ProtoOAOrderStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAOrderStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAOrderStatus>(
    ProtoOAOrderStatus_descriptor(), name, value);
}
enum ProtoOAOrderTriggerMethod : int {
  TRADE = 1,
  OPPOSITE = 2,
  DOUBLE_TRADE = 3,
  DOUBLE_OPPOSITE = 4
};
bool ProtoOAOrderTriggerMethod_IsValid(int value);
constexpr ProtoOAOrderTriggerMethod ProtoOAOrderTriggerMethod_MIN = TRADE;
constexpr ProtoOAOrderTriggerMethod ProtoOAOrderTriggerMethod_MAX = DOUBLE_OPPOSITE;
constexpr int ProtoOAOrderTriggerMethod_ARRAYSIZE = ProtoOAOrderTriggerMethod_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAOrderTriggerMethod_descriptor();
template<typename T>
inline const std::string& ProtoOAOrderTriggerMethod_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAOrderTriggerMethod>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAOrderTriggerMethod_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAOrderTriggerMethod_descriptor(), enum_t_value);
}
inline bool ProtoOAOrderTriggerMethod_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAOrderTriggerMethod* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAOrderTriggerMethod>(
    ProtoOAOrderTriggerMethod_descriptor(), name, value);
}
enum ProtoOAExecutionType : int {
  ORDER_ACCEPTED = 2,
  ORDER_FILLED = 3,
  ORDER_REPLACED = 4,
  ORDER_CANCELLED = 5,
  ORDER_EXPIRED = 6,
  ORDER_REJECTED = 7,
  ORDER_CANCEL_REJECTED = 8,
  SWAP = 9,
  DEPOSIT_WITHDRAW = 10,
  ORDER_PARTIAL_FILL = 11,
  BONUS_DEPOSIT_WITHDRAW = 12
};
bool ProtoOAExecutionType_IsValid(int value);
constexpr ProtoOAExecutionType ProtoOAExecutionType_MIN = ORDER_ACCEPTED;
constexpr ProtoOAExecutionType ProtoOAExecutionType_MAX = BONUS_DEPOSIT_WITHDRAW;
constexpr int ProtoOAExecutionType_ARRAYSIZE = ProtoOAExecutionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAExecutionType_descriptor();
template<typename T>
inline const std::string& ProtoOAExecutionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAExecutionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAExecutionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAExecutionType_descriptor(), enum_t_value);
}
inline bool ProtoOAExecutionType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAExecutionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAExecutionType>(
    ProtoOAExecutionType_descriptor(), name, value);
}
enum ProtoOAChangeBonusType : int {
  BONUS_DEPOSIT = 0,
  BONUS_WITHDRAW = 1
};
bool ProtoOAChangeBonusType_IsValid(int value);
constexpr ProtoOAChangeBonusType ProtoOAChangeBonusType_MIN = BONUS_DEPOSIT;
constexpr ProtoOAChangeBonusType ProtoOAChangeBonusType_MAX = BONUS_WITHDRAW;
constexpr int ProtoOAChangeBonusType_ARRAYSIZE = ProtoOAChangeBonusType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAChangeBonusType_descriptor();
template<typename T>
inline const std::string& ProtoOAChangeBonusType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAChangeBonusType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAChangeBonusType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAChangeBonusType_descriptor(), enum_t_value);
}
inline bool ProtoOAChangeBonusType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAChangeBonusType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAChangeBonusType>(
    ProtoOAChangeBonusType_descriptor(), name, value);
}
enum ProtoOAChangeBalanceType : int {
  BALANCE_DEPOSIT = 0,
  BALANCE_WITHDRAW = 1,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER = 3,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER = 4,
  BALANCE_DEPOSIT_IB_COMMISSIONS = 5,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE = 6,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB = 7,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER = 8,
  BALANCE_DEPOSIT_REBATE = 9,
  BALANCE_WITHDRAW_REBATE = 10,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER = 11,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER = 12,
  BALANCE_WITHDRAW_BONUS_COMPENSATION = 13,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER = 14,
  BALANCE_DEPOSIT_DIVIDENDS = 15,
  BALANCE_WITHDRAW_DIVIDENDS = 16,
  BALANCE_WITHDRAW_GSL_CHARGE = 17,
  BALANCE_WITHDRAW_ROLLOVER = 18,
  BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS = 19,
  BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS = 20,
  BALANCE_DEPOSIT_SWAP = 21,
  BALANCE_WITHDRAW_SWAP = 22,
  BALANCE_DEPOSIT_MANAGEMENT_FEE = 27,
  BALANCE_WITHDRAW_MANAGEMENT_FEE = 28,
  BALANCE_DEPOSIT_PERFORMANCE_FEE = 29,
  BALANCE_WITHDRAW_FOR_SUBACCOUNT = 30,
  BALANCE_DEPOSIT_TO_SUBACCOUNT = 31,
  BALANCE_WITHDRAW_FROM_SUBACCOUNT = 32,
  BALANCE_DEPOSIT_FROM_SUBACCOUNT = 33,
  BALANCE_WITHDRAW_COPY_FEE = 34,
  BALANCE_WITHDRAW_INACTIVITY_FEE = 35,
  BALANCE_DEPOSIT_TRANSFER = 36,
  BALANCE_WITHDRAW_TRANSFER = 37,
  BALANCE_DEPOSIT_CONVERTED_BONUS = 38
};
bool ProtoOAChangeBalanceType_IsValid(int value);
constexpr ProtoOAChangeBalanceType ProtoOAChangeBalanceType_MIN = BALANCE_DEPOSIT;
constexpr ProtoOAChangeBalanceType ProtoOAChangeBalanceType_MAX = BALANCE_DEPOSIT_CONVERTED_BONUS;
constexpr int ProtoOAChangeBalanceType_ARRAYSIZE = ProtoOAChangeBalanceType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAChangeBalanceType_descriptor();
template<typename T>
inline const std::string& ProtoOAChangeBalanceType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAChangeBalanceType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAChangeBalanceType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAChangeBalanceType_descriptor(), enum_t_value);
}
inline bool ProtoOAChangeBalanceType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAChangeBalanceType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAChangeBalanceType>(
    ProtoOAChangeBalanceType_descriptor(), name, value);
}
enum ProtoOADealStatus : int {
  FILLED = 2,
  PARTIALLY_FILLED = 3,
  REJECTED = 4,
  INTERNALLY_REJECTED = 5,
  ERROR = 6,
  MISSED = 7
};
bool ProtoOADealStatus_IsValid(int value);
constexpr ProtoOADealStatus ProtoOADealStatus_MIN = FILLED;
constexpr ProtoOADealStatus ProtoOADealStatus_MAX = MISSED;
constexpr int ProtoOADealStatus_ARRAYSIZE = ProtoOADealStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOADealStatus_descriptor();
template<typename T>
inline const std::string& ProtoOADealStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOADealStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOADealStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOADealStatus_descriptor(), enum_t_value);
}
inline bool ProtoOADealStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOADealStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOADealStatus>(
    ProtoOADealStatus_descriptor(), name, value);
}
enum ProtoOATrendbarPeriod : int {
  M1 = 1,
  M2 = 2,
  M3 = 3,
  M4 = 4,
  M5 = 5,
  M10 = 6,
  M15 = 7,
  M30 = 8,
  H1 = 9,
  H4 = 10,
  H12 = 11,
  D1 = 12,
  W1 = 13,
  MN1 = 14
};
bool ProtoOATrendbarPeriod_IsValid(int value);
constexpr ProtoOATrendbarPeriod ProtoOATrendbarPeriod_MIN = M1;
constexpr ProtoOATrendbarPeriod ProtoOATrendbarPeriod_MAX = MN1;
constexpr int ProtoOATrendbarPeriod_ARRAYSIZE = ProtoOATrendbarPeriod_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOATrendbarPeriod_descriptor();
template<typename T>
inline const std::string& ProtoOATrendbarPeriod_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOATrendbarPeriod>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOATrendbarPeriod_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOATrendbarPeriod_descriptor(), enum_t_value);
}
inline bool ProtoOATrendbarPeriod_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOATrendbarPeriod* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOATrendbarPeriod>(
    ProtoOATrendbarPeriod_descriptor(), name, value);
}
enum ProtoOAQuoteType : int {
  BID = 1,
  ASK = 2
};
bool ProtoOAQuoteType_IsValid(int value);
constexpr ProtoOAQuoteType ProtoOAQuoteType_MIN = BID;
constexpr ProtoOAQuoteType ProtoOAQuoteType_MAX = ASK;
constexpr int ProtoOAQuoteType_ARRAYSIZE = ProtoOAQuoteType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAQuoteType_descriptor();
template<typename T>
inline const std::string& ProtoOAQuoteType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAQuoteType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAQuoteType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAQuoteType_descriptor(), enum_t_value);
}
inline bool ProtoOAQuoteType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAQuoteType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAQuoteType>(
    ProtoOAQuoteType_descriptor(), name, value);
}
enum ProtoOAClientPermissionScope : int {
  SCOPE_VIEW = 0,
  SCOPE_TRADE = 1
};
bool ProtoOAClientPermissionScope_IsValid(int value);
constexpr ProtoOAClientPermissionScope ProtoOAClientPermissionScope_MIN = SCOPE_VIEW;
constexpr ProtoOAClientPermissionScope ProtoOAClientPermissionScope_MAX = SCOPE_TRADE;
constexpr int ProtoOAClientPermissionScope_ARRAYSIZE = ProtoOAClientPermissionScope_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAClientPermissionScope_descriptor();
template<typename T>
inline const std::string& ProtoOAClientPermissionScope_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAClientPermissionScope>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAClientPermissionScope_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAClientPermissionScope_descriptor(), enum_t_value);
}
inline bool ProtoOAClientPermissionScope_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAClientPermissionScope* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAClientPermissionScope>(
    ProtoOAClientPermissionScope_descriptor(), name, value);
}
enum ProtoOANotificationType : int {
  MARGIN_LEVEL_THRESHOLD_1 = 61,
  MARGIN_LEVEL_THRESHOLD_2 = 62,
  MARGIN_LEVEL_THRESHOLD_3 = 63
};
bool ProtoOANotificationType_IsValid(int value);
constexpr ProtoOANotificationType ProtoOANotificationType_MIN = MARGIN_LEVEL_THRESHOLD_1;
constexpr ProtoOANotificationType ProtoOANotificationType_MAX = MARGIN_LEVEL_THRESHOLD_3;
constexpr int ProtoOANotificationType_ARRAYSIZE = ProtoOANotificationType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOANotificationType_descriptor();
template<typename T>
inline const std::string& ProtoOANotificationType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOANotificationType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOANotificationType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOANotificationType_descriptor(), enum_t_value);
}
inline bool ProtoOANotificationType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOANotificationType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOANotificationType>(
    ProtoOANotificationType_descriptor(), name, value);
}
enum ProtoOAErrorCode : int {
  OA_AUTH_TOKEN_EXPIRED = 1,
  ACCOUNT_NOT_AUTHORIZED = 2,
  ALREADY_LOGGED_IN = 14,
  CH_CLIENT_AUTH_FAILURE = 101,
  CH_CLIENT_NOT_AUTHENTICATED = 102,
  CH_CLIENT_ALREADY_AUTHENTICATED = 103,
  CH_ACCESS_TOKEN_INVALID = 104,
  CH_SERVER_NOT_REACHABLE = 105,
  CH_CTID_TRADER_ACCOUNT_NOT_FOUND = 106,
  CH_OA_CLIENT_NOT_FOUND = 107,
  REQUEST_FREQUENCY_EXCEEDED = 108,
  SERVER_IS_UNDER_MAINTENANCE = 109,
  CHANNEL_IS_BLOCKED = 110,
  CONNECTIONS_LIMIT_EXCEEDED = 67,
  WORSE_GSL_NOT_ALLOWED = 68,
  SYMBOL_HAS_HOLIDAY = 69,
  NOT_SUBSCRIBED_TO_SPOTS = 112,
  ALREADY_SUBSCRIBED = 113,
  SYMBOL_NOT_FOUND = 114,
  UNKNOWN_SYMBOL = 115,
  INCORRECT_BOUNDARIES = 35,
  NO_QUOTES = 117,
  NOT_ENOUGH_MONEY = 118,
  MAX_EXPOSURE_REACHED = 119,
  POSITION_NOT_FOUND = 120,
  ORDER_NOT_FOUND = 121,
  POSITION_NOT_OPEN = 122,
  POSITION_LOCKED = 123,
  TOO_MANY_POSITIONS = 124,
  TRADING_BAD_VOLUME = 125,
  TRADING_BAD_STOPS = 126,
  TRADING_BAD_PRICES = 127,
  TRADING_BAD_STAKE = 128,
  PROTECTION_IS_TOO_CLOSE_TO_MARKET = 129,
  TRADING_BAD_EXPIRATION_DATE = 130,
  PENDING_EXECUTION = 131,
  TRADING_DISABLED = 132,
  TRADING_NOT_ALLOWED = 133,
  UNABLE_TO_CANCEL_ORDER = 134,
  UNABLE_TO_AMEND_ORDER = 135,
  SHORT_SELLING_NOT_ALLOWED = 136
};
bool ProtoOAErrorCode_IsValid(int value);
constexpr ProtoOAErrorCode ProtoOAErrorCode_MIN = OA_AUTH_TOKEN_EXPIRED;
constexpr ProtoOAErrorCode ProtoOAErrorCode_MAX = SHORT_SELLING_NOT_ALLOWED;
constexpr int ProtoOAErrorCode_ARRAYSIZE = ProtoOAErrorCode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOAErrorCode_descriptor();
template<typename T>
inline const std::string& ProtoOAErrorCode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOAErrorCode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOAErrorCode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOAErrorCode_descriptor(), enum_t_value);
}
inline bool ProtoOAErrorCode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOAErrorCode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOAErrorCode>(
    ProtoOAErrorCode_descriptor(), name, value);
}
enum ProtoOALimitedRiskMarginCalculationStrategy : int {
  ACCORDING_TO_LEVERAGE = 0,
  ACCORDING_TO_GSL = 1,
  ACCORDING_TO_GSL_AND_LEVERAGE = 2
};
bool ProtoOALimitedRiskMarginCalculationStrategy_IsValid(int value);
constexpr ProtoOALimitedRiskMarginCalculationStrategy ProtoOALimitedRiskMarginCalculationStrategy_MIN = ACCORDING_TO_LEVERAGE;
constexpr ProtoOALimitedRiskMarginCalculationStrategy ProtoOALimitedRiskMarginCalculationStrategy_MAX = ACCORDING_TO_GSL_AND_LEVERAGE;
constexpr int ProtoOALimitedRiskMarginCalculationStrategy_ARRAYSIZE = ProtoOALimitedRiskMarginCalculationStrategy_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProtoOALimitedRiskMarginCalculationStrategy_descriptor();
template<typename T>
inline const std::string& ProtoOALimitedRiskMarginCalculationStrategy_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ProtoOALimitedRiskMarginCalculationStrategy>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ProtoOALimitedRiskMarginCalculationStrategy_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ProtoOALimitedRiskMarginCalculationStrategy_descriptor(), enum_t_value);
}
inline bool ProtoOALimitedRiskMarginCalculationStrategy_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ProtoOALimitedRiskMarginCalculationStrategy* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ProtoOALimitedRiskMarginCalculationStrategy>(
    ProtoOALimitedRiskMarginCalculationStrategy_descriptor(), name, value);
}
// ===================================================================

class ProtoOAAsset PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAAsset) */ {
 public:
  inline ProtoOAAsset() : ProtoOAAsset(nullptr) {}
  virtual ~ProtoOAAsset();

  ProtoOAAsset(const ProtoOAAsset& from);
  ProtoOAAsset(ProtoOAAsset&& from) noexcept
    : ProtoOAAsset() {
    *this = ::std::move(from);
  }

  inline ProtoOAAsset& operator=(const ProtoOAAsset& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAAsset& operator=(ProtoOAAsset&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAAsset& default_instance();

  static inline const ProtoOAAsset* internal_default_instance() {
    return reinterpret_cast<const ProtoOAAsset*>(
               &_ProtoOAAsset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProtoOAAsset& a, ProtoOAAsset& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAAsset* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAAsset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAAsset* New() const final {
    return CreateMaybeMessage<ProtoOAAsset>(nullptr);
  }

  ProtoOAAsset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAAsset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAAsset& from);
  void MergeFrom(const ProtoOAAsset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAAsset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAAsset";
  }
  protected:
  explicit ProtoOAAsset(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDisplayNameFieldNumber = 3,
    kAssetIdFieldNumber = 1,
    kDigitsFieldNumber = 4,
  };
  // required string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string displayName = 3;
  bool has_displayname() const;
  private:
  bool _internal_has_displayname() const;
  public:
  void clear_displayname();
  const std::string& displayname() const;
  void set_displayname(const std::string& value);
  void set_displayname(std::string&& value);
  void set_displayname(const char* value);
  void set_displayname(const char* value, size_t size);
  std::string* mutable_displayname();
  std::string* release_displayname();
  void set_allocated_displayname(std::string* displayname);
  private:
  const std::string& _internal_displayname() const;
  void _internal_set_displayname(const std::string& value);
  std::string* _internal_mutable_displayname();
  public:

  // required int64 assetId = 1;
  bool has_assetid() const;
  private:
  bool _internal_has_assetid() const;
  public:
  void clear_assetid();
  ::PROTOBUF_NAMESPACE_ID::int64 assetid() const;
  void set_assetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_assetid() const;
  void _internal_set_assetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 digits = 4;
  bool has_digits() const;
  private:
  bool _internal_has_digits() const;
  public:
  void clear_digits();
  ::PROTOBUF_NAMESPACE_ID::int32 digits() const;
  void set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_digits() const;
  void _internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAAsset)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr displayname_;
  ::PROTOBUF_NAMESPACE_ID::int64 assetid_;
  ::PROTOBUF_NAMESPACE_ID::int32 digits_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOASymbol PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOASymbol) */ {
 public:
  inline ProtoOASymbol() : ProtoOASymbol(nullptr) {}
  virtual ~ProtoOASymbol();

  ProtoOASymbol(const ProtoOASymbol& from);
  ProtoOASymbol(ProtoOASymbol&& from) noexcept
    : ProtoOASymbol() {
    *this = ::std::move(from);
  }

  inline ProtoOASymbol& operator=(const ProtoOASymbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOASymbol& operator=(ProtoOASymbol&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOASymbol& default_instance();

  static inline const ProtoOASymbol* internal_default_instance() {
    return reinterpret_cast<const ProtoOASymbol*>(
               &_ProtoOASymbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProtoOASymbol& a, ProtoOASymbol& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOASymbol* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOASymbol* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOASymbol* New() const final {
    return CreateMaybeMessage<ProtoOASymbol>(nullptr);
  }

  ProtoOASymbol* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOASymbol>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOASymbol& from);
  void MergeFrom(const ProtoOASymbol& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOASymbol* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOASymbol";
  }
  protected:
  explicit ProtoOASymbol(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScheduleFieldNumber = 13,
    kHolidayFieldNumber = 33,
    kMinCommissionAssetFieldNumber = 23,
    kScheduleTimeZoneFieldNumber = 26,
    kSymbolIdFieldNumber = 1,
    kDigitsFieldNumber = 2,
    kPipPositionFieldNumber = 3,
    kSwapLongFieldNumber = 7,
    kSwapShortFieldNumber = 8,
    kEnableShortSellingFieldNumber = 4,
    kGuaranteedStopLossFieldNumber = 5,
    kSlDistanceFieldNumber = 16,
    kMaxVolumeFieldNumber = 9,
    kMinVolumeFieldNumber = 10,
    kStepVolumeFieldNumber = 11,
    kMaxExposureFieldNumber = 12,
    kCommissionFieldNumber = 14,
    kTpDistanceFieldNumber = 17,
    kGslDistanceFieldNumber = 18,
    kGslChargeFieldNumber = 19,
    kMinCommissionFieldNumber = 21,
    kRolloverCommissionFieldNumber = 24,
    kSkipRolloverDaysFieldNumber = 25,
    kTradingModeFieldNumber = 27,
    kLotSizeFieldNumber = 30,
    kPreciseTradingCommissionRateFieldNumber = 31,
    kPreciseMinCommissionFieldNumber = 32,
    kSwapCalculationTypeFieldNumber = 29,
    kRolloverCommission3DaysFieldNumber = 28,
    kSwapRollover3DaysFieldNumber = 6,
    kCommissionTypeFieldNumber = 15,
    kDistanceSetInFieldNumber = 20,
    kMinCommissionTypeFieldNumber = 22,
  };
  // repeated .ProtoOAInterval schedule = 13;
  int schedule_size() const;
  private:
  int _internal_schedule_size() const;
  public:
  void clear_schedule();
  ::ProtoOAInterval* mutable_schedule(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAInterval >*
      mutable_schedule();
  private:
  const ::ProtoOAInterval& _internal_schedule(int index) const;
  ::ProtoOAInterval* _internal_add_schedule();
  public:
  const ::ProtoOAInterval& schedule(int index) const;
  ::ProtoOAInterval* add_schedule();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAInterval >&
      schedule() const;

  // repeated .ProtoOAHoliday holiday = 33;
  int holiday_size() const;
  private:
  int _internal_holiday_size() const;
  public:
  void clear_holiday();
  ::ProtoOAHoliday* mutable_holiday(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAHoliday >*
      mutable_holiday();
  private:
  const ::ProtoOAHoliday& _internal_holiday(int index) const;
  ::ProtoOAHoliday* _internal_add_holiday();
  public:
  const ::ProtoOAHoliday& holiday(int index) const;
  ::ProtoOAHoliday* add_holiday();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAHoliday >&
      holiday() const;

  // optional string minCommissionAsset = 23 [default = "USD"];
  bool has_mincommissionasset() const;
  private:
  bool _internal_has_mincommissionasset() const;
  public:
  void clear_mincommissionasset();
  const std::string& mincommissionasset() const;
  void set_mincommissionasset(const std::string& value);
  void set_mincommissionasset(std::string&& value);
  void set_mincommissionasset(const char* value);
  void set_mincommissionasset(const char* value, size_t size);
  std::string* mutable_mincommissionasset();
  std::string* release_mincommissionasset();
  void set_allocated_mincommissionasset(std::string* mincommissionasset);
  private:
  const std::string& _internal_mincommissionasset() const;
  void _internal_set_mincommissionasset(const std::string& value);
  std::string* _internal_mutable_mincommissionasset();
  public:

  // optional string scheduleTimeZone = 26;
  bool has_scheduletimezone() const;
  private:
  bool _internal_has_scheduletimezone() const;
  public:
  void clear_scheduletimezone();
  const std::string& scheduletimezone() const;
  void set_scheduletimezone(const std::string& value);
  void set_scheduletimezone(std::string&& value);
  void set_scheduletimezone(const char* value);
  void set_scheduletimezone(const char* value, size_t size);
  std::string* mutable_scheduletimezone();
  std::string* release_scheduletimezone();
  void set_allocated_scheduletimezone(std::string* scheduletimezone);
  private:
  const std::string& _internal_scheduletimezone() const;
  void _internal_set_scheduletimezone(const std::string& value);
  std::string* _internal_mutable_scheduletimezone();
  public:

  // required int64 symbolId = 1;
  bool has_symbolid() const;
  private:
  bool _internal_has_symbolid() const;
  public:
  void clear_symbolid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid() const;
  void set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolid() const;
  void _internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int32 digits = 2;
  bool has_digits() const;
  private:
  bool _internal_has_digits() const;
  public:
  void clear_digits();
  ::PROTOBUF_NAMESPACE_ID::int32 digits() const;
  void set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_digits() const;
  void _internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 pipPosition = 3;
  bool has_pipposition() const;
  private:
  bool _internal_has_pipposition() const;
  public:
  void clear_pipposition();
  ::PROTOBUF_NAMESPACE_ID::int32 pipposition() const;
  void set_pipposition(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pipposition() const;
  void _internal_set_pipposition(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional double swapLong = 7;
  bool has_swaplong() const;
  private:
  bool _internal_has_swaplong() const;
  public:
  void clear_swaplong();
  double swaplong() const;
  void set_swaplong(double value);
  private:
  double _internal_swaplong() const;
  void _internal_set_swaplong(double value);
  public:

  // optional double swapShort = 8;
  bool has_swapshort() const;
  private:
  bool _internal_has_swapshort() const;
  public:
  void clear_swapshort();
  double swapshort() const;
  void set_swapshort(double value);
  private:
  double _internal_swapshort() const;
  void _internal_set_swapshort(double value);
  public:

  // optional bool enableShortSelling = 4;
  bool has_enableshortselling() const;
  private:
  bool _internal_has_enableshortselling() const;
  public:
  void clear_enableshortselling();
  bool enableshortselling() const;
  void set_enableshortselling(bool value);
  private:
  bool _internal_enableshortselling() const;
  void _internal_set_enableshortselling(bool value);
  public:

  // optional bool guaranteedStopLoss = 5;
  bool has_guaranteedstoploss() const;
  private:
  bool _internal_has_guaranteedstoploss() const;
  public:
  void clear_guaranteedstoploss();
  bool guaranteedstoploss() const;
  void set_guaranteedstoploss(bool value);
  private:
  bool _internal_guaranteedstoploss() const;
  void _internal_set_guaranteedstoploss(bool value);
  public:

  // optional uint32 slDistance = 16;
  bool has_sldistance() const;
  private:
  bool _internal_has_sldistance() const;
  public:
  void clear_sldistance();
  ::PROTOBUF_NAMESPACE_ID::uint32 sldistance() const;
  void set_sldistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_sldistance() const;
  void _internal_set_sldistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int64 maxVolume = 9;
  bool has_maxvolume() const;
  private:
  bool _internal_has_maxvolume() const;
  public:
  void clear_maxvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 maxvolume() const;
  void set_maxvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_maxvolume() const;
  void _internal_set_maxvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 minVolume = 10;
  bool has_minvolume() const;
  private:
  bool _internal_has_minvolume() const;
  public:
  void clear_minvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 minvolume() const;
  void set_minvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_minvolume() const;
  void _internal_set_minvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 stepVolume = 11;
  bool has_stepvolume() const;
  private:
  bool _internal_has_stepvolume() const;
  public:
  void clear_stepvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 stepvolume() const;
  void set_stepvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_stepvolume() const;
  void _internal_set_stepvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional uint64 maxExposure = 12;
  bool has_maxexposure() const;
  private:
  bool _internal_has_maxexposure() const;
  public:
  void clear_maxexposure();
  ::PROTOBUF_NAMESPACE_ID::uint64 maxexposure() const;
  void set_maxexposure(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_maxexposure() const;
  void _internal_set_maxexposure(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int64 commission = 14 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_commission() const;
  private:
  bool _internal_has_commission() const;
  public:
  PROTOBUF_DEPRECATED void clear_commission();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int64 commission() const;
  PROTOBUF_DEPRECATED void set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_commission() const;
  void _internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional uint32 tpDistance = 17;
  bool has_tpdistance() const;
  private:
  bool _internal_has_tpdistance() const;
  public:
  void clear_tpdistance();
  ::PROTOBUF_NAMESPACE_ID::uint32 tpdistance() const;
  void set_tpdistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tpdistance() const;
  void _internal_set_tpdistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gslDistance = 18;
  bool has_gsldistance() const;
  private:
  bool _internal_has_gsldistance() const;
  public:
  void clear_gsldistance();
  ::PROTOBUF_NAMESPACE_ID::uint32 gsldistance() const;
  void set_gsldistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gsldistance() const;
  void _internal_set_gsldistance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int64 gslCharge = 19;
  bool has_gslcharge() const;
  private:
  bool _internal_has_gslcharge() const;
  public:
  void clear_gslcharge();
  ::PROTOBUF_NAMESPACE_ID::int64 gslcharge() const;
  void set_gslcharge(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_gslcharge() const;
  void _internal_set_gslcharge(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 minCommission = 21 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_mincommission() const;
  private:
  bool _internal_has_mincommission() const;
  public:
  PROTOBUF_DEPRECATED void clear_mincommission();
  PROTOBUF_DEPRECATED ::PROTOBUF_NAMESPACE_ID::int64 mincommission() const;
  PROTOBUF_DEPRECATED void set_mincommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_mincommission() const;
  void _internal_set_mincommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 rolloverCommission = 24;
  bool has_rollovercommission() const;
  private:
  bool _internal_has_rollovercommission() const;
  public:
  void clear_rollovercommission();
  ::PROTOBUF_NAMESPACE_ID::int64 rollovercommission() const;
  void set_rollovercommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_rollovercommission() const;
  void _internal_set_rollovercommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 skipRolloverDays = 25;
  bool has_skiprolloverdays() const;
  private:
  bool _internal_has_skiprolloverdays() const;
  public:
  void clear_skiprolloverdays();
  ::PROTOBUF_NAMESPACE_ID::int32 skiprolloverdays() const;
  void set_skiprolloverdays(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_skiprolloverdays() const;
  void _internal_set_skiprolloverdays(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .ProtoOATradingMode tradingMode = 27 [default = ENABLED];
  bool has_tradingmode() const;
  private:
  bool _internal_has_tradingmode() const;
  public:
  void clear_tradingmode();
  ::ProtoOATradingMode tradingmode() const;
  void set_tradingmode(::ProtoOATradingMode value);
  private:
  ::ProtoOATradingMode _internal_tradingmode() const;
  void _internal_set_tradingmode(::ProtoOATradingMode value);
  public:

  // optional int64 lotSize = 30;
  bool has_lotsize() const;
  private:
  bool _internal_has_lotsize() const;
  public:
  void clear_lotsize();
  ::PROTOBUF_NAMESPACE_ID::int64 lotsize() const;
  void set_lotsize(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_lotsize() const;
  void _internal_set_lotsize(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 preciseTradingCommissionRate = 31;
  bool has_precisetradingcommissionrate() const;
  private:
  bool _internal_has_precisetradingcommissionrate() const;
  public:
  void clear_precisetradingcommissionrate();
  ::PROTOBUF_NAMESPACE_ID::int64 precisetradingcommissionrate() const;
  void set_precisetradingcommissionrate(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_precisetradingcommissionrate() const;
  void _internal_set_precisetradingcommissionrate(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 preciseMinCommission = 32;
  bool has_precisemincommission() const;
  private:
  bool _internal_has_precisemincommission() const;
  public:
  void clear_precisemincommission();
  ::PROTOBUF_NAMESPACE_ID::int64 precisemincommission() const;
  void set_precisemincommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_precisemincommission() const;
  void _internal_set_precisemincommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional .ProtoOASwapCalculationType swapCalculationType = 29 [default = PIPS];
  bool has_swapcalculationtype() const;
  private:
  bool _internal_has_swapcalculationtype() const;
  public:
  void clear_swapcalculationtype();
  ::ProtoOASwapCalculationType swapcalculationtype() const;
  void set_swapcalculationtype(::ProtoOASwapCalculationType value);
  private:
  ::ProtoOASwapCalculationType _internal_swapcalculationtype() const;
  void _internal_set_swapcalculationtype(::ProtoOASwapCalculationType value);
  public:

  // optional .ProtoOADayOfWeek rolloverCommission3Days = 28 [default = MONDAY];
  bool has_rollovercommission3days() const;
  private:
  bool _internal_has_rollovercommission3days() const;
  public:
  void clear_rollovercommission3days();
  ::ProtoOADayOfWeek rollovercommission3days() const;
  void set_rollovercommission3days(::ProtoOADayOfWeek value);
  private:
  ::ProtoOADayOfWeek _internal_rollovercommission3days() const;
  void _internal_set_rollovercommission3days(::ProtoOADayOfWeek value);
  public:

  // optional .ProtoOADayOfWeek swapRollover3Days = 6 [default = MONDAY];
  bool has_swaprollover3days() const;
  private:
  bool _internal_has_swaprollover3days() const;
  public:
  void clear_swaprollover3days();
  ::ProtoOADayOfWeek swaprollover3days() const;
  void set_swaprollover3days(::ProtoOADayOfWeek value);
  private:
  ::ProtoOADayOfWeek _internal_swaprollover3days() const;
  void _internal_set_swaprollover3days(::ProtoOADayOfWeek value);
  public:

  // optional .ProtoOACommissionType commissionType = 15 [default = USD_PER_MILLION_USD];
  bool has_commissiontype() const;
  private:
  bool _internal_has_commissiontype() const;
  public:
  void clear_commissiontype();
  ::ProtoOACommissionType commissiontype() const;
  void set_commissiontype(::ProtoOACommissionType value);
  private:
  ::ProtoOACommissionType _internal_commissiontype() const;
  void _internal_set_commissiontype(::ProtoOACommissionType value);
  public:

  // optional .ProtoOASymbolDistanceType distanceSetIn = 20 [default = SYMBOL_DISTANCE_IN_POINTS];
  bool has_distancesetin() const;
  private:
  bool _internal_has_distancesetin() const;
  public:
  void clear_distancesetin();
  ::ProtoOASymbolDistanceType distancesetin() const;
  void set_distancesetin(::ProtoOASymbolDistanceType value);
  private:
  ::ProtoOASymbolDistanceType _internal_distancesetin() const;
  void _internal_set_distancesetin(::ProtoOASymbolDistanceType value);
  public:

  // optional .ProtoOAMinCommissionType minCommissionType = 22 [default = CURRENCY];
  bool has_mincommissiontype() const;
  private:
  bool _internal_has_mincommissiontype() const;
  public:
  void clear_mincommissiontype();
  ::ProtoOAMinCommissionType mincommissiontype() const;
  void set_mincommissiontype(::ProtoOAMinCommissionType value);
  private:
  ::ProtoOAMinCommissionType _internal_mincommissiontype() const;
  void _internal_set_mincommissiontype(::ProtoOAMinCommissionType value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOASymbol)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAInterval > schedule_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAHoliday > holiday_;
  static const ::PROTOBUF_NAMESPACE_ID::internal::LazyString _i_give_permission_to_break_this_code_default_mincommissionasset_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mincommissionasset_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr scheduletimezone_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid_;
  ::PROTOBUF_NAMESPACE_ID::int32 digits_;
  ::PROTOBUF_NAMESPACE_ID::int32 pipposition_;
  double swaplong_;
  double swapshort_;
  bool enableshortselling_;
  bool guaranteedstoploss_;
  ::PROTOBUF_NAMESPACE_ID::uint32 sldistance_;
  ::PROTOBUF_NAMESPACE_ID::int64 maxvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 minvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 stepvolume_;
  ::PROTOBUF_NAMESPACE_ID::uint64 maxexposure_;
  ::PROTOBUF_NAMESPACE_ID::int64 commission_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tpdistance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gsldistance_;
  ::PROTOBUF_NAMESPACE_ID::int64 gslcharge_;
  ::PROTOBUF_NAMESPACE_ID::int64 mincommission_;
  ::PROTOBUF_NAMESPACE_ID::int64 rollovercommission_;
  ::PROTOBUF_NAMESPACE_ID::int32 skiprolloverdays_;
  int tradingmode_;
  ::PROTOBUF_NAMESPACE_ID::int64 lotsize_;
  ::PROTOBUF_NAMESPACE_ID::int64 precisetradingcommissionrate_;
  ::PROTOBUF_NAMESPACE_ID::int64 precisemincommission_;
  int swapcalculationtype_;
  int rollovercommission3days_;
  int swaprollover3days_;
  int commissiontype_;
  int distancesetin_;
  int mincommissiontype_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOALightSymbol PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOALightSymbol) */ {
 public:
  inline ProtoOALightSymbol() : ProtoOALightSymbol(nullptr) {}
  virtual ~ProtoOALightSymbol();

  ProtoOALightSymbol(const ProtoOALightSymbol& from);
  ProtoOALightSymbol(ProtoOALightSymbol&& from) noexcept
    : ProtoOALightSymbol() {
    *this = ::std::move(from);
  }

  inline ProtoOALightSymbol& operator=(const ProtoOALightSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOALightSymbol& operator=(ProtoOALightSymbol&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOALightSymbol& default_instance();

  static inline const ProtoOALightSymbol* internal_default_instance() {
    return reinterpret_cast<const ProtoOALightSymbol*>(
               &_ProtoOALightSymbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProtoOALightSymbol& a, ProtoOALightSymbol& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOALightSymbol* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOALightSymbol* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOALightSymbol* New() const final {
    return CreateMaybeMessage<ProtoOALightSymbol>(nullptr);
  }

  ProtoOALightSymbol* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOALightSymbol>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOALightSymbol& from);
  void MergeFrom(const ProtoOALightSymbol& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOALightSymbol* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOALightSymbol";
  }
  protected:
  explicit ProtoOALightSymbol(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSymbolNameFieldNumber = 2,
    kDescriptionFieldNumber = 7,
    kSymbolIdFieldNumber = 1,
    kBaseAssetIdFieldNumber = 4,
    kQuoteAssetIdFieldNumber = 5,
    kSymbolCategoryIdFieldNumber = 6,
    kEnabledFieldNumber = 3,
  };
  // optional string symbolName = 2;
  bool has_symbolname() const;
  private:
  bool _internal_has_symbolname() const;
  public:
  void clear_symbolname();
  const std::string& symbolname() const;
  void set_symbolname(const std::string& value);
  void set_symbolname(std::string&& value);
  void set_symbolname(const char* value);
  void set_symbolname(const char* value, size_t size);
  std::string* mutable_symbolname();
  std::string* release_symbolname();
  void set_allocated_symbolname(std::string* symbolname);
  private:
  const std::string& _internal_symbolname() const;
  void _internal_set_symbolname(const std::string& value);
  std::string* _internal_mutable_symbolname();
  public:

  // optional string description = 7;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // required int64 symbolId = 1;
  bool has_symbolid() const;
  private:
  bool _internal_has_symbolid() const;
  public:
  void clear_symbolid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid() const;
  void set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolid() const;
  void _internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 baseAssetId = 4;
  bool has_baseassetid() const;
  private:
  bool _internal_has_baseassetid() const;
  public:
  void clear_baseassetid();
  ::PROTOBUF_NAMESPACE_ID::int64 baseassetid() const;
  void set_baseassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_baseassetid() const;
  void _internal_set_baseassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 quoteAssetId = 5;
  bool has_quoteassetid() const;
  private:
  bool _internal_has_quoteassetid() const;
  public:
  void clear_quoteassetid();
  ::PROTOBUF_NAMESPACE_ID::int64 quoteassetid() const;
  void set_quoteassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_quoteassetid() const;
  void _internal_set_quoteassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 symbolCategoryId = 6;
  bool has_symbolcategoryid() const;
  private:
  bool _internal_has_symbolcategoryid() const;
  public:
  void clear_symbolcategoryid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolcategoryid() const;
  void set_symbolcategoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolcategoryid() const;
  void _internal_set_symbolcategoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool enabled = 3;
  bool has_enabled() const;
  private:
  bool _internal_has_enabled() const;
  public:
  void clear_enabled();
  bool enabled() const;
  void set_enabled(bool value);
  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOALightSymbol)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr symbolname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid_;
  ::PROTOBUF_NAMESPACE_ID::int64 baseassetid_;
  ::PROTOBUF_NAMESPACE_ID::int64 quoteassetid_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolcategoryid_;
  bool enabled_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAArchivedSymbol PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAArchivedSymbol) */ {
 public:
  inline ProtoOAArchivedSymbol() : ProtoOAArchivedSymbol(nullptr) {}
  virtual ~ProtoOAArchivedSymbol();

  ProtoOAArchivedSymbol(const ProtoOAArchivedSymbol& from);
  ProtoOAArchivedSymbol(ProtoOAArchivedSymbol&& from) noexcept
    : ProtoOAArchivedSymbol() {
    *this = ::std::move(from);
  }

  inline ProtoOAArchivedSymbol& operator=(const ProtoOAArchivedSymbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAArchivedSymbol& operator=(ProtoOAArchivedSymbol&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAArchivedSymbol& default_instance();

  static inline const ProtoOAArchivedSymbol* internal_default_instance() {
    return reinterpret_cast<const ProtoOAArchivedSymbol*>(
               &_ProtoOAArchivedSymbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ProtoOAArchivedSymbol& a, ProtoOAArchivedSymbol& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAArchivedSymbol* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAArchivedSymbol* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAArchivedSymbol* New() const final {
    return CreateMaybeMessage<ProtoOAArchivedSymbol>(nullptr);
  }

  ProtoOAArchivedSymbol* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAArchivedSymbol>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAArchivedSymbol& from);
  void MergeFrom(const ProtoOAArchivedSymbol& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAArchivedSymbol* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAArchivedSymbol";
  }
  protected:
  explicit ProtoOAArchivedSymbol(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 4,
    kSymbolIdFieldNumber = 1,
    kUtcLastUpdateTimestampFieldNumber = 3,
  };
  // required string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string description = 4;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // required int64 symbolId = 1;
  bool has_symbolid() const;
  private:
  bool _internal_has_symbolid() const;
  public:
  void clear_symbolid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid() const;
  void set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolid() const;
  void _internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 utcLastUpdateTimestamp = 3;
  bool has_utclastupdatetimestamp() const;
  private:
  bool _internal_has_utclastupdatetimestamp() const;
  public:
  void clear_utclastupdatetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp() const;
  void set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_utclastupdatetimestamp() const;
  void _internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAArchivedSymbol)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid_;
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOASymbolCategory PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOASymbolCategory) */ {
 public:
  inline ProtoOASymbolCategory() : ProtoOASymbolCategory(nullptr) {}
  virtual ~ProtoOASymbolCategory();

  ProtoOASymbolCategory(const ProtoOASymbolCategory& from);
  ProtoOASymbolCategory(ProtoOASymbolCategory&& from) noexcept
    : ProtoOASymbolCategory() {
    *this = ::std::move(from);
  }

  inline ProtoOASymbolCategory& operator=(const ProtoOASymbolCategory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOASymbolCategory& operator=(ProtoOASymbolCategory&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOASymbolCategory& default_instance();

  static inline const ProtoOASymbolCategory* internal_default_instance() {
    return reinterpret_cast<const ProtoOASymbolCategory*>(
               &_ProtoOASymbolCategory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ProtoOASymbolCategory& a, ProtoOASymbolCategory& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOASymbolCategory* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOASymbolCategory* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOASymbolCategory* New() const final {
    return CreateMaybeMessage<ProtoOASymbolCategory>(nullptr);
  }

  ProtoOASymbolCategory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOASymbolCategory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOASymbolCategory& from);
  void MergeFrom(const ProtoOASymbolCategory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOASymbolCategory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOASymbolCategory";
  }
  protected:
  explicit ProtoOASymbolCategory(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIdFieldNumber = 1,
    kAssetClassIdFieldNumber = 2,
  };
  // required string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // required int64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 assetClassId = 2;
  bool has_assetclassid() const;
  private:
  bool _internal_has_assetclassid() const;
  public:
  void clear_assetclassid();
  ::PROTOBUF_NAMESPACE_ID::int64 assetclassid() const;
  void set_assetclassid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_assetclassid() const;
  void _internal_set_assetclassid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOASymbolCategory)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  ::PROTOBUF_NAMESPACE_ID::int64 assetclassid_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAInterval PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAInterval) */ {
 public:
  inline ProtoOAInterval() : ProtoOAInterval(nullptr) {}
  virtual ~ProtoOAInterval();

  ProtoOAInterval(const ProtoOAInterval& from);
  ProtoOAInterval(ProtoOAInterval&& from) noexcept
    : ProtoOAInterval() {
    *this = ::std::move(from);
  }

  inline ProtoOAInterval& operator=(const ProtoOAInterval& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAInterval& operator=(ProtoOAInterval&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAInterval& default_instance();

  static inline const ProtoOAInterval* internal_default_instance() {
    return reinterpret_cast<const ProtoOAInterval*>(
               &_ProtoOAInterval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ProtoOAInterval& a, ProtoOAInterval& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAInterval* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAInterval* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAInterval* New() const final {
    return CreateMaybeMessage<ProtoOAInterval>(nullptr);
  }

  ProtoOAInterval* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAInterval>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAInterval& from);
  void MergeFrom(const ProtoOAInterval& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAInterval* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAInterval";
  }
  protected:
  explicit ProtoOAInterval(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartSecondFieldNumber = 3,
    kEndSecondFieldNumber = 4,
  };
  // required uint32 startSecond = 3;
  bool has_startsecond() const;
  private:
  bool _internal_has_startsecond() const;
  public:
  void clear_startsecond();
  ::PROTOBUF_NAMESPACE_ID::uint32 startsecond() const;
  void set_startsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_startsecond() const;
  void _internal_set_startsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 endSecond = 4;
  bool has_endsecond() const;
  private:
  bool _internal_has_endsecond() const;
  public:
  void clear_endsecond();
  ::PROTOBUF_NAMESPACE_ID::uint32 endsecond() const;
  void set_endsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_endsecond() const;
  void _internal_set_endsecond(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAInterval)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 startsecond_;
  ::PROTOBUF_NAMESPACE_ID::uint32 endsecond_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOATrader PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOATrader) */ {
 public:
  inline ProtoOATrader() : ProtoOATrader(nullptr) {}
  virtual ~ProtoOATrader();

  ProtoOATrader(const ProtoOATrader& from);
  ProtoOATrader(ProtoOATrader&& from) noexcept
    : ProtoOATrader() {
    *this = ::std::move(from);
  }

  inline ProtoOATrader& operator=(const ProtoOATrader& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOATrader& operator=(ProtoOATrader&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOATrader& default_instance();

  static inline const ProtoOATrader* internal_default_instance() {
    return reinterpret_cast<const ProtoOATrader*>(
               &_ProtoOATrader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ProtoOATrader& a, ProtoOATrader& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOATrader* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOATrader* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOATrader* New() const final {
    return CreateMaybeMessage<ProtoOATrader>(nullptr);
  }

  ProtoOATrader* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOATrader>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOATrader& from);
  void MergeFrom(const ProtoOATrader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOATrader* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOATrader";
  }
  protected:
  explicit ProtoOATrader(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBrokerNameFieldNumber = 16,
    kCtidTraderAccountIdFieldNumber = 1,
    kBalanceFieldNumber = 2,
    kBalanceVersionFieldNumber = 3,
    kManagerBonusFieldNumber = 4,
    kIbBonusFieldNumber = 5,
    kNonWithdrawableBonusFieldNumber = 6,
    kDepositAssetIdFieldNumber = 8,
    kAccessRightsFieldNumber = 7,
    kLeverageInCentsFieldNumber = 10,
    kTotalMarginCalculationTypeFieldNumber = 11,
    kMaxLeverageFieldNumber = 12,
    kSwapFreeFieldNumber = 9,
    kFrenchRiskFieldNumber = 13,
    kIsLimitedRiskFieldNumber = 18,
    kAccountTypeFieldNumber = 15,
    kTraderLoginFieldNumber = 14,
    kRegistrationTimestampFieldNumber = 17,
    kLimitedRiskMarginCalculationStrategyFieldNumber = 19,
    kMoneyDigitsFieldNumber = 20,
  };
  // optional string brokerName = 16;
  bool has_brokername() const;
  private:
  bool _internal_has_brokername() const;
  public:
  void clear_brokername();
  const std::string& brokername() const;
  void set_brokername(const std::string& value);
  void set_brokername(std::string&& value);
  void set_brokername(const char* value);
  void set_brokername(const char* value, size_t size);
  std::string* mutable_brokername();
  std::string* release_brokername();
  void set_allocated_brokername(std::string* brokername);
  private:
  const std::string& _internal_brokername() const;
  void _internal_set_brokername(const std::string& value);
  std::string* _internal_mutable_brokername();
  public:

  // required int64 ctidTraderAccountId = 1;
  bool has_ctidtraderaccountid() const;
  private:
  bool _internal_has_ctidtraderaccountid() const;
  public:
  void clear_ctidtraderaccountid();
  ::PROTOBUF_NAMESPACE_ID::int64 ctidtraderaccountid() const;
  void set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ctidtraderaccountid() const;
  void _internal_set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 balance = 2;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::int64 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 balanceVersion = 3;
  bool has_balanceversion() const;
  private:
  bool _internal_has_balanceversion() const;
  public:
  void clear_balanceversion();
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion() const;
  void set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balanceversion() const;
  void _internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 managerBonus = 4;
  bool has_managerbonus() const;
  private:
  bool _internal_has_managerbonus() const;
  public:
  void clear_managerbonus();
  ::PROTOBUF_NAMESPACE_ID::int64 managerbonus() const;
  void set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_managerbonus() const;
  void _internal_set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 ibBonus = 5;
  bool has_ibbonus() const;
  private:
  bool _internal_has_ibbonus() const;
  public:
  void clear_ibbonus();
  ::PROTOBUF_NAMESPACE_ID::int64 ibbonus() const;
  void set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ibbonus() const;
  void _internal_set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 nonWithdrawableBonus = 6;
  bool has_nonwithdrawablebonus() const;
  private:
  bool _internal_has_nonwithdrawablebonus() const;
  public:
  void clear_nonwithdrawablebonus();
  ::PROTOBUF_NAMESPACE_ID::int64 nonwithdrawablebonus() const;
  void set_nonwithdrawablebonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_nonwithdrawablebonus() const;
  void _internal_set_nonwithdrawablebonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 depositAssetId = 8;
  bool has_depositassetid() const;
  private:
  bool _internal_has_depositassetid() const;
  public:
  void clear_depositassetid();
  ::PROTOBUF_NAMESPACE_ID::int64 depositassetid() const;
  void set_depositassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_depositassetid() const;
  void _internal_set_depositassetid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional .ProtoOAAccessRights accessRights = 7 [default = FULL_ACCESS];
  bool has_accessrights() const;
  private:
  bool _internal_has_accessrights() const;
  public:
  void clear_accessrights();
  ::ProtoOAAccessRights accessrights() const;
  void set_accessrights(::ProtoOAAccessRights value);
  private:
  ::ProtoOAAccessRights _internal_accessrights() const;
  void _internal_set_accessrights(::ProtoOAAccessRights value);
  public:

  // optional uint32 leverageInCents = 10;
  bool has_leverageincents() const;
  private:
  bool _internal_has_leverageincents() const;
  public:
  void clear_leverageincents();
  ::PROTOBUF_NAMESPACE_ID::uint32 leverageincents() const;
  void set_leverageincents(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_leverageincents() const;
  void _internal_set_leverageincents(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ProtoOATotalMarginCalculationType totalMarginCalculationType = 11;
  bool has_totalmargincalculationtype() const;
  private:
  bool _internal_has_totalmargincalculationtype() const;
  public:
  void clear_totalmargincalculationtype();
  ::ProtoOATotalMarginCalculationType totalmargincalculationtype() const;
  void set_totalmargincalculationtype(::ProtoOATotalMarginCalculationType value);
  private:
  ::ProtoOATotalMarginCalculationType _internal_totalmargincalculationtype() const;
  void _internal_set_totalmargincalculationtype(::ProtoOATotalMarginCalculationType value);
  public:

  // optional uint32 maxLeverage = 12;
  bool has_maxleverage() const;
  private:
  bool _internal_has_maxleverage() const;
  public:
  void clear_maxleverage();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxleverage() const;
  void set_maxleverage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxleverage() const;
  void _internal_set_maxleverage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool swapFree = 9;
  bool has_swapfree() const;
  private:
  bool _internal_has_swapfree() const;
  public:
  void clear_swapfree();
  bool swapfree() const;
  void set_swapfree(bool value);
  private:
  bool _internal_swapfree() const;
  void _internal_set_swapfree(bool value);
  public:

  // optional bool frenchRisk = 13 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_frenchrisk() const;
  private:
  bool _internal_has_frenchrisk() const;
  public:
  PROTOBUF_DEPRECATED void clear_frenchrisk();
  PROTOBUF_DEPRECATED bool frenchrisk() const;
  PROTOBUF_DEPRECATED void set_frenchrisk(bool value);
  private:
  bool _internal_frenchrisk() const;
  void _internal_set_frenchrisk(bool value);
  public:

  // optional bool isLimitedRisk = 18;
  bool has_islimitedrisk() const;
  private:
  bool _internal_has_islimitedrisk() const;
  public:
  void clear_islimitedrisk();
  bool islimitedrisk() const;
  void set_islimitedrisk(bool value);
  private:
  bool _internal_islimitedrisk() const;
  void _internal_set_islimitedrisk(bool value);
  public:

  // optional .ProtoOAAccountType accountType = 15 [default = HEDGED];
  bool has_accounttype() const;
  private:
  bool _internal_has_accounttype() const;
  public:
  void clear_accounttype();
  ::ProtoOAAccountType accounttype() const;
  void set_accounttype(::ProtoOAAccountType value);
  private:
  ::ProtoOAAccountType _internal_accounttype() const;
  void _internal_set_accounttype(::ProtoOAAccountType value);
  public:

  // optional int64 traderLogin = 14;
  bool has_traderlogin() const;
  private:
  bool _internal_has_traderlogin() const;
  public:
  void clear_traderlogin();
  ::PROTOBUF_NAMESPACE_ID::int64 traderlogin() const;
  void set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_traderlogin() const;
  void _internal_set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 registrationTimestamp = 17;
  bool has_registrationtimestamp() const;
  private:
  bool _internal_has_registrationtimestamp() const;
  public:
  void clear_registrationtimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 registrationtimestamp() const;
  void set_registrationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_registrationtimestamp() const;
  void _internal_set_registrationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional .ProtoOALimitedRiskMarginCalculationStrategy limitedRiskMarginCalculationStrategy = 19 [default = ACCORDING_TO_LEVERAGE];
  bool has_limitedriskmargincalculationstrategy() const;
  private:
  bool _internal_has_limitedriskmargincalculationstrategy() const;
  public:
  void clear_limitedriskmargincalculationstrategy();
  ::ProtoOALimitedRiskMarginCalculationStrategy limitedriskmargincalculationstrategy() const;
  void set_limitedriskmargincalculationstrategy(::ProtoOALimitedRiskMarginCalculationStrategy value);
  private:
  ::ProtoOALimitedRiskMarginCalculationStrategy _internal_limitedriskmargincalculationstrategy() const;
  void _internal_set_limitedriskmargincalculationstrategy(::ProtoOALimitedRiskMarginCalculationStrategy value);
  public:

  // optional uint32 moneyDigits = 20;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOATrader)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr brokername_;
  ::PROTOBUF_NAMESPACE_ID::int64 ctidtraderaccountid_;
  ::PROTOBUF_NAMESPACE_ID::int64 balance_;
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion_;
  ::PROTOBUF_NAMESPACE_ID::int64 managerbonus_;
  ::PROTOBUF_NAMESPACE_ID::int64 ibbonus_;
  ::PROTOBUF_NAMESPACE_ID::int64 nonwithdrawablebonus_;
  ::PROTOBUF_NAMESPACE_ID::int64 depositassetid_;
  int accessrights_;
  ::PROTOBUF_NAMESPACE_ID::uint32 leverageincents_;
  int totalmargincalculationtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxleverage_;
  bool swapfree_;
  bool frenchrisk_;
  bool islimitedrisk_;
  int accounttype_;
  ::PROTOBUF_NAMESPACE_ID::int64 traderlogin_;
  ::PROTOBUF_NAMESPACE_ID::int64 registrationtimestamp_;
  int limitedriskmargincalculationstrategy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAPosition PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAPosition) */ {
 public:
  inline ProtoOAPosition() : ProtoOAPosition(nullptr) {}
  virtual ~ProtoOAPosition();

  ProtoOAPosition(const ProtoOAPosition& from);
  ProtoOAPosition(ProtoOAPosition&& from) noexcept
    : ProtoOAPosition() {
    *this = ::std::move(from);
  }

  inline ProtoOAPosition& operator=(const ProtoOAPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAPosition& operator=(ProtoOAPosition&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAPosition& default_instance();

  static inline const ProtoOAPosition* internal_default_instance() {
    return reinterpret_cast<const ProtoOAPosition*>(
               &_ProtoOAPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ProtoOAPosition& a, ProtoOAPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAPosition* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAPosition* New() const final {
    return CreateMaybeMessage<ProtoOAPosition>(nullptr);
  }

  ProtoOAPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAPosition& from);
  void MergeFrom(const ProtoOAPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAPosition";
  }
  protected:
  explicit ProtoOAPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTradeDataFieldNumber = 2,
    kPositionIdFieldNumber = 1,
    kSwapFieldNumber = 4,
    kPriceFieldNumber = 5,
    kStopLossFieldNumber = 6,
    kTakeProfitFieldNumber = 7,
    kUtcLastUpdateTimestampFieldNumber = 8,
    kCommissionFieldNumber = 9,
    kMarginRateFieldNumber = 10,
    kMirroringCommissionFieldNumber = 11,
    kUsedMarginFieldNumber = 13,
    kGuaranteedStopLossFieldNumber = 12,
    kMoneyDigitsFieldNumber = 15,
    kPositionStatusFieldNumber = 3,
    kStopLossTriggerMethodFieldNumber = 14,
  };
  // required .ProtoOATradeData tradeData = 2;
  bool has_tradedata() const;
  private:
  bool _internal_has_tradedata() const;
  public:
  void clear_tradedata();
  const ::ProtoOATradeData& tradedata() const;
  ::ProtoOATradeData* release_tradedata();
  ::ProtoOATradeData* mutable_tradedata();
  void set_allocated_tradedata(::ProtoOATradeData* tradedata);
  private:
  const ::ProtoOATradeData& _internal_tradedata() const;
  ::ProtoOATradeData* _internal_mutable_tradedata();
  public:
  void unsafe_arena_set_allocated_tradedata(
      ::ProtoOATradeData* tradedata);
  ::ProtoOATradeData* unsafe_arena_release_tradedata();

  // required int64 positionId = 1;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::int64 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 swap = 4;
  bool has_swap() const;
  private:
  bool _internal_has_swap() const;
  public:
  void clear_swap();
  ::PROTOBUF_NAMESPACE_ID::int64 swap() const;
  void set_swap(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_swap() const;
  void _internal_set_swap(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double price = 5;
  bool has_price() const;
  private:
  bool _internal_has_price() const;
  public:
  void clear_price();
  double price() const;
  void set_price(double value);
  private:
  double _internal_price() const;
  void _internal_set_price(double value);
  public:

  // optional double stopLoss = 6;
  bool has_stoploss() const;
  private:
  bool _internal_has_stoploss() const;
  public:
  void clear_stoploss();
  double stoploss() const;
  void set_stoploss(double value);
  private:
  double _internal_stoploss() const;
  void _internal_set_stoploss(double value);
  public:

  // optional double takeProfit = 7;
  bool has_takeprofit() const;
  private:
  bool _internal_has_takeprofit() const;
  public:
  void clear_takeprofit();
  double takeprofit() const;
  void set_takeprofit(double value);
  private:
  double _internal_takeprofit() const;
  void _internal_set_takeprofit(double value);
  public:

  // optional int64 utcLastUpdateTimestamp = 8;
  bool has_utclastupdatetimestamp() const;
  private:
  bool _internal_has_utclastupdatetimestamp() const;
  public:
  void clear_utclastupdatetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp() const;
  void set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_utclastupdatetimestamp() const;
  void _internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 commission = 9;
  bool has_commission() const;
  private:
  bool _internal_has_commission() const;
  public:
  void clear_commission();
  ::PROTOBUF_NAMESPACE_ID::int64 commission() const;
  void set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_commission() const;
  void _internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double marginRate = 10;
  bool has_marginrate() const;
  private:
  bool _internal_has_marginrate() const;
  public:
  void clear_marginrate();
  double marginrate() const;
  void set_marginrate(double value);
  private:
  double _internal_marginrate() const;
  void _internal_set_marginrate(double value);
  public:

  // optional int64 mirroringCommission = 11;
  bool has_mirroringcommission() const;
  private:
  bool _internal_has_mirroringcommission() const;
  public:
  void clear_mirroringcommission();
  ::PROTOBUF_NAMESPACE_ID::int64 mirroringcommission() const;
  void set_mirroringcommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_mirroringcommission() const;
  void _internal_set_mirroringcommission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional uint64 usedMargin = 13;
  bool has_usedmargin() const;
  private:
  bool _internal_has_usedmargin() const;
  public:
  void clear_usedmargin();
  ::PROTOBUF_NAMESPACE_ID::uint64 usedmargin() const;
  void set_usedmargin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_usedmargin() const;
  void _internal_set_usedmargin(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional bool guaranteedStopLoss = 12;
  bool has_guaranteedstoploss() const;
  private:
  bool _internal_has_guaranteedstoploss() const;
  public:
  void clear_guaranteedstoploss();
  bool guaranteedstoploss() const;
  void set_guaranteedstoploss(bool value);
  private:
  bool _internal_guaranteedstoploss() const;
  void _internal_set_guaranteedstoploss(bool value);
  public:

  // optional uint32 moneyDigits = 15;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .ProtoOAPositionStatus positionStatus = 3;
  bool has_positionstatus() const;
  private:
  bool _internal_has_positionstatus() const;
  public:
  void clear_positionstatus();
  ::ProtoOAPositionStatus positionstatus() const;
  void set_positionstatus(::ProtoOAPositionStatus value);
  private:
  ::ProtoOAPositionStatus _internal_positionstatus() const;
  void _internal_set_positionstatus(::ProtoOAPositionStatus value);
  public:

  // optional .ProtoOAOrderTriggerMethod stopLossTriggerMethod = 14 [default = TRADE];
  bool has_stoplosstriggermethod() const;
  private:
  bool _internal_has_stoplosstriggermethod() const;
  public:
  void clear_stoplosstriggermethod();
  ::ProtoOAOrderTriggerMethod stoplosstriggermethod() const;
  void set_stoplosstriggermethod(::ProtoOAOrderTriggerMethod value);
  private:
  ::ProtoOAOrderTriggerMethod _internal_stoplosstriggermethod() const;
  void _internal_set_stoplosstriggermethod(::ProtoOAOrderTriggerMethod value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAPosition)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ProtoOATradeData* tradedata_;
  ::PROTOBUF_NAMESPACE_ID::int64 positionid_;
  ::PROTOBUF_NAMESPACE_ID::int64 swap_;
  double price_;
  double stoploss_;
  double takeprofit_;
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 commission_;
  double marginrate_;
  ::PROTOBUF_NAMESPACE_ID::int64 mirroringcommission_;
  ::PROTOBUF_NAMESPACE_ID::uint64 usedmargin_;
  bool guaranteedstoploss_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  int positionstatus_;
  int stoplosstriggermethod_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOATradeData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOATradeData) */ {
 public:
  inline ProtoOATradeData() : ProtoOATradeData(nullptr) {}
  virtual ~ProtoOATradeData();

  ProtoOATradeData(const ProtoOATradeData& from);
  ProtoOATradeData(ProtoOATradeData&& from) noexcept
    : ProtoOATradeData() {
    *this = ::std::move(from);
  }

  inline ProtoOATradeData& operator=(const ProtoOATradeData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOATradeData& operator=(ProtoOATradeData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOATradeData& default_instance();

  static inline const ProtoOATradeData* internal_default_instance() {
    return reinterpret_cast<const ProtoOATradeData*>(
               &_ProtoOATradeData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ProtoOATradeData& a, ProtoOATradeData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOATradeData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOATradeData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOATradeData* New() const final {
    return CreateMaybeMessage<ProtoOATradeData>(nullptr);
  }

  ProtoOATradeData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOATradeData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOATradeData& from);
  void MergeFrom(const ProtoOATradeData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOATradeData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOATradeData";
  }
  protected:
  explicit ProtoOATradeData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLabelFieldNumber = 5,
    kCommentFieldNumber = 7,
    kSymbolIdFieldNumber = 1,
    kVolumeFieldNumber = 2,
    kOpenTimestampFieldNumber = 4,
    kGuaranteedStopLossFieldNumber = 6,
    kTradeSideFieldNumber = 3,
  };
  // optional string label = 5;
  bool has_label() const;
  private:
  bool _internal_has_label() const;
  public:
  void clear_label();
  const std::string& label() const;
  void set_label(const std::string& value);
  void set_label(std::string&& value);
  void set_label(const char* value);
  void set_label(const char* value, size_t size);
  std::string* mutable_label();
  std::string* release_label();
  void set_allocated_label(std::string* label);
  private:
  const std::string& _internal_label() const;
  void _internal_set_label(const std::string& value);
  std::string* _internal_mutable_label();
  public:

  // optional string comment = 7;
  bool has_comment() const;
  private:
  bool _internal_has_comment() const;
  public:
  void clear_comment();
  const std::string& comment() const;
  void set_comment(const std::string& value);
  void set_comment(std::string&& value);
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  std::string* mutable_comment();
  std::string* release_comment();
  void set_allocated_comment(std::string* comment);
  private:
  const std::string& _internal_comment() const;
  void _internal_set_comment(const std::string& value);
  std::string* _internal_mutable_comment();
  public:

  // required int64 symbolId = 1;
  bool has_symbolid() const;
  private:
  bool _internal_has_symbolid() const;
  public:
  void clear_symbolid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid() const;
  void set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolid() const;
  void _internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 volume = 2;
  bool has_volume() const;
  private:
  bool _internal_has_volume() const;
  public:
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 openTimestamp = 4;
  bool has_opentimestamp() const;
  private:
  bool _internal_has_opentimestamp() const;
  public:
  void clear_opentimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 opentimestamp() const;
  void set_opentimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_opentimestamp() const;
  void _internal_set_opentimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool guaranteedStopLoss = 6;
  bool has_guaranteedstoploss() const;
  private:
  bool _internal_has_guaranteedstoploss() const;
  public:
  void clear_guaranteedstoploss();
  bool guaranteedstoploss() const;
  void set_guaranteedstoploss(bool value);
  private:
  bool _internal_guaranteedstoploss() const;
  void _internal_set_guaranteedstoploss(bool value);
  public:

  // required .ProtoOATradeSide tradeSide = 3;
  bool has_tradeside() const;
  private:
  bool _internal_has_tradeside() const;
  public:
  void clear_tradeside();
  ::ProtoOATradeSide tradeside() const;
  void set_tradeside(::ProtoOATradeSide value);
  private:
  ::ProtoOATradeSide _internal_tradeside() const;
  void _internal_set_tradeside(::ProtoOATradeSide value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOATradeData)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr label_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr comment_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 opentimestamp_;
  bool guaranteedstoploss_;
  int tradeside_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAOrder PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAOrder) */ {
 public:
  inline ProtoOAOrder() : ProtoOAOrder(nullptr) {}
  virtual ~ProtoOAOrder();

  ProtoOAOrder(const ProtoOAOrder& from);
  ProtoOAOrder(ProtoOAOrder&& from) noexcept
    : ProtoOAOrder() {
    *this = ::std::move(from);
  }

  inline ProtoOAOrder& operator=(const ProtoOAOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAOrder& operator=(ProtoOAOrder&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAOrder& default_instance();

  static inline const ProtoOAOrder* internal_default_instance() {
    return reinterpret_cast<const ProtoOAOrder*>(
               &_ProtoOAOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ProtoOAOrder& a, ProtoOAOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAOrder* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAOrder* New() const final {
    return CreateMaybeMessage<ProtoOAOrder>(nullptr);
  }

  ProtoOAOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAOrder>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAOrder& from);
  void MergeFrom(const ProtoOAOrder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAOrder* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAOrder";
  }
  protected:
  explicit ProtoOAOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClientOrderIdFieldNumber = 17,
    kTradeDataFieldNumber = 2,
    kOrderIdFieldNumber = 1,
    kExpirationTimestampFieldNumber = 6,
    kExecutionPriceFieldNumber = 7,
    kExecutedVolumeFieldNumber = 8,
    kUtcLastUpdateTimestampFieldNumber = 9,
    kBaseSlippagePriceFieldNumber = 10,
    kSlippageInPointsFieldNumber = 11,
    kLimitPriceFieldNumber = 13,
    kStopPriceFieldNumber = 14,
    kStopLossFieldNumber = 15,
    kTakeProfitFieldNumber = 16,
    kPositionIdFieldNumber = 19,
    kRelativeStopLossFieldNumber = 20,
    kRelativeTakeProfitFieldNumber = 21,
    kClosingOrderFieldNumber = 12,
    kIsStopOutFieldNumber = 22,
    kTrailingStopLossFieldNumber = 23,
    kOrderTypeFieldNumber = 3,
    kOrderStatusFieldNumber = 4,
    kTimeInForceFieldNumber = 18,
    kStopTriggerMethodFieldNumber = 24,
  };
  // optional string clientOrderId = 17;
  bool has_clientorderid() const;
  private:
  bool _internal_has_clientorderid() const;
  public:
  void clear_clientorderid();
  const std::string& clientorderid() const;
  void set_clientorderid(const std::string& value);
  void set_clientorderid(std::string&& value);
  void set_clientorderid(const char* value);
  void set_clientorderid(const char* value, size_t size);
  std::string* mutable_clientorderid();
  std::string* release_clientorderid();
  void set_allocated_clientorderid(std::string* clientorderid);
  private:
  const std::string& _internal_clientorderid() const;
  void _internal_set_clientorderid(const std::string& value);
  std::string* _internal_mutable_clientorderid();
  public:

  // required .ProtoOATradeData tradeData = 2;
  bool has_tradedata() const;
  private:
  bool _internal_has_tradedata() const;
  public:
  void clear_tradedata();
  const ::ProtoOATradeData& tradedata() const;
  ::ProtoOATradeData* release_tradedata();
  ::ProtoOATradeData* mutable_tradedata();
  void set_allocated_tradedata(::ProtoOATradeData* tradedata);
  private:
  const ::ProtoOATradeData& _internal_tradedata() const;
  ::ProtoOATradeData* _internal_mutable_tradedata();
  public:
  void unsafe_arena_set_allocated_tradedata(
      ::ProtoOATradeData* tradedata);
  ::ProtoOATradeData* unsafe_arena_release_tradedata();

  // required int64 orderId = 1;
  bool has_orderid() const;
  private:
  bool _internal_has_orderid() const;
  public:
  void clear_orderid();
  ::PROTOBUF_NAMESPACE_ID::int64 orderid() const;
  void set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_orderid() const;
  void _internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 expirationTimestamp = 6;
  bool has_expirationtimestamp() const;
  private:
  bool _internal_has_expirationtimestamp() const;
  public:
  void clear_expirationtimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 expirationtimestamp() const;
  void set_expirationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_expirationtimestamp() const;
  void _internal_set_expirationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double executionPrice = 7;
  bool has_executionprice() const;
  private:
  bool _internal_has_executionprice() const;
  public:
  void clear_executionprice();
  double executionprice() const;
  void set_executionprice(double value);
  private:
  double _internal_executionprice() const;
  void _internal_set_executionprice(double value);
  public:

  // optional int64 executedVolume = 8;
  bool has_executedvolume() const;
  private:
  bool _internal_has_executedvolume() const;
  public:
  void clear_executedvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 executedvolume() const;
  void set_executedvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_executedvolume() const;
  void _internal_set_executedvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 utcLastUpdateTimestamp = 9;
  bool has_utclastupdatetimestamp() const;
  private:
  bool _internal_has_utclastupdatetimestamp() const;
  public:
  void clear_utclastupdatetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp() const;
  void set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_utclastupdatetimestamp() const;
  void _internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double baseSlippagePrice = 10;
  bool has_baseslippageprice() const;
  private:
  bool _internal_has_baseslippageprice() const;
  public:
  void clear_baseslippageprice();
  double baseslippageprice() const;
  void set_baseslippageprice(double value);
  private:
  double _internal_baseslippageprice() const;
  void _internal_set_baseslippageprice(double value);
  public:

  // optional int64 slippageInPoints = 11;
  bool has_slippageinpoints() const;
  private:
  bool _internal_has_slippageinpoints() const;
  public:
  void clear_slippageinpoints();
  ::PROTOBUF_NAMESPACE_ID::int64 slippageinpoints() const;
  void set_slippageinpoints(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_slippageinpoints() const;
  void _internal_set_slippageinpoints(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double limitPrice = 13;
  bool has_limitprice() const;
  private:
  bool _internal_has_limitprice() const;
  public:
  void clear_limitprice();
  double limitprice() const;
  void set_limitprice(double value);
  private:
  double _internal_limitprice() const;
  void _internal_set_limitprice(double value);
  public:

  // optional double stopPrice = 14;
  bool has_stopprice() const;
  private:
  bool _internal_has_stopprice() const;
  public:
  void clear_stopprice();
  double stopprice() const;
  void set_stopprice(double value);
  private:
  double _internal_stopprice() const;
  void _internal_set_stopprice(double value);
  public:

  // optional double stopLoss = 15;
  bool has_stoploss() const;
  private:
  bool _internal_has_stoploss() const;
  public:
  void clear_stoploss();
  double stoploss() const;
  void set_stoploss(double value);
  private:
  double _internal_stoploss() const;
  void _internal_set_stoploss(double value);
  public:

  // optional double takeProfit = 16;
  bool has_takeprofit() const;
  private:
  bool _internal_has_takeprofit() const;
  public:
  void clear_takeprofit();
  double takeprofit() const;
  void set_takeprofit(double value);
  private:
  double _internal_takeprofit() const;
  void _internal_set_takeprofit(double value);
  public:

  // optional int64 positionId = 19;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::int64 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 relativeStopLoss = 20;
  bool has_relativestoploss() const;
  private:
  bool _internal_has_relativestoploss() const;
  public:
  void clear_relativestoploss();
  ::PROTOBUF_NAMESPACE_ID::int64 relativestoploss() const;
  void set_relativestoploss(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_relativestoploss() const;
  void _internal_set_relativestoploss(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 relativeTakeProfit = 21;
  bool has_relativetakeprofit() const;
  private:
  bool _internal_has_relativetakeprofit() const;
  public:
  void clear_relativetakeprofit();
  ::PROTOBUF_NAMESPACE_ID::int64 relativetakeprofit() const;
  void set_relativetakeprofit(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_relativetakeprofit() const;
  void _internal_set_relativetakeprofit(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool closingOrder = 12;
  bool has_closingorder() const;
  private:
  bool _internal_has_closingorder() const;
  public:
  void clear_closingorder();
  bool closingorder() const;
  void set_closingorder(bool value);
  private:
  bool _internal_closingorder() const;
  void _internal_set_closingorder(bool value);
  public:

  // optional bool isStopOut = 22;
  bool has_isstopout() const;
  private:
  bool _internal_has_isstopout() const;
  public:
  void clear_isstopout();
  bool isstopout() const;
  void set_isstopout(bool value);
  private:
  bool _internal_isstopout() const;
  void _internal_set_isstopout(bool value);
  public:

  // optional bool trailingStopLoss = 23;
  bool has_trailingstoploss() const;
  private:
  bool _internal_has_trailingstoploss() const;
  public:
  void clear_trailingstoploss();
  bool trailingstoploss() const;
  void set_trailingstoploss(bool value);
  private:
  bool _internal_trailingstoploss() const;
  void _internal_set_trailingstoploss(bool value);
  public:

  // required .ProtoOAOrderType orderType = 3;
  bool has_ordertype() const;
  private:
  bool _internal_has_ordertype() const;
  public:
  void clear_ordertype();
  ::ProtoOAOrderType ordertype() const;
  void set_ordertype(::ProtoOAOrderType value);
  private:
  ::ProtoOAOrderType _internal_ordertype() const;
  void _internal_set_ordertype(::ProtoOAOrderType value);
  public:

  // required .ProtoOAOrderStatus orderStatus = 4;
  bool has_orderstatus() const;
  private:
  bool _internal_has_orderstatus() const;
  public:
  void clear_orderstatus();
  ::ProtoOAOrderStatus orderstatus() const;
  void set_orderstatus(::ProtoOAOrderStatus value);
  private:
  ::ProtoOAOrderStatus _internal_orderstatus() const;
  void _internal_set_orderstatus(::ProtoOAOrderStatus value);
  public:

  // optional .ProtoOATimeInForce timeInForce = 18 [default = IMMEDIATE_OR_CANCEL];
  bool has_timeinforce() const;
  private:
  bool _internal_has_timeinforce() const;
  public:
  void clear_timeinforce();
  ::ProtoOATimeInForce timeinforce() const;
  void set_timeinforce(::ProtoOATimeInForce value);
  private:
  ::ProtoOATimeInForce _internal_timeinforce() const;
  void _internal_set_timeinforce(::ProtoOATimeInForce value);
  public:

  // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 24 [default = TRADE];
  bool has_stoptriggermethod() const;
  private:
  bool _internal_has_stoptriggermethod() const;
  public:
  void clear_stoptriggermethod();
  ::ProtoOAOrderTriggerMethod stoptriggermethod() const;
  void set_stoptriggermethod(::ProtoOAOrderTriggerMethod value);
  private:
  ::ProtoOAOrderTriggerMethod _internal_stoptriggermethod() const;
  void _internal_set_stoptriggermethod(::ProtoOAOrderTriggerMethod value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAOrder)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr clientorderid_;
  ::ProtoOATradeData* tradedata_;
  ::PROTOBUF_NAMESPACE_ID::int64 orderid_;
  ::PROTOBUF_NAMESPACE_ID::int64 expirationtimestamp_;
  double executionprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 executedvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp_;
  double baseslippageprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 slippageinpoints_;
  double limitprice_;
  double stopprice_;
  double stoploss_;
  double takeprofit_;
  ::PROTOBUF_NAMESPACE_ID::int64 positionid_;
  ::PROTOBUF_NAMESPACE_ID::int64 relativestoploss_;
  ::PROTOBUF_NAMESPACE_ID::int64 relativetakeprofit_;
  bool closingorder_;
  bool isstopout_;
  bool trailingstoploss_;
  int ordertype_;
  int orderstatus_;
  int timeinforce_;
  int stoptriggermethod_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOABonusDepositWithdraw PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOABonusDepositWithdraw) */ {
 public:
  inline ProtoOABonusDepositWithdraw() : ProtoOABonusDepositWithdraw(nullptr) {}
  virtual ~ProtoOABonusDepositWithdraw();

  ProtoOABonusDepositWithdraw(const ProtoOABonusDepositWithdraw& from);
  ProtoOABonusDepositWithdraw(ProtoOABonusDepositWithdraw&& from) noexcept
    : ProtoOABonusDepositWithdraw() {
    *this = ::std::move(from);
  }

  inline ProtoOABonusDepositWithdraw& operator=(const ProtoOABonusDepositWithdraw& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOABonusDepositWithdraw& operator=(ProtoOABonusDepositWithdraw&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOABonusDepositWithdraw& default_instance();

  static inline const ProtoOABonusDepositWithdraw* internal_default_instance() {
    return reinterpret_cast<const ProtoOABonusDepositWithdraw*>(
               &_ProtoOABonusDepositWithdraw_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ProtoOABonusDepositWithdraw& a, ProtoOABonusDepositWithdraw& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOABonusDepositWithdraw* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOABonusDepositWithdraw* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOABonusDepositWithdraw* New() const final {
    return CreateMaybeMessage<ProtoOABonusDepositWithdraw>(nullptr);
  }

  ProtoOABonusDepositWithdraw* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOABonusDepositWithdraw>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOABonusDepositWithdraw& from);
  void MergeFrom(const ProtoOABonusDepositWithdraw& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOABonusDepositWithdraw* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOABonusDepositWithdraw";
  }
  protected:
  explicit ProtoOABonusDepositWithdraw(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalNoteFieldNumber = 8,
    kBonusHistoryIdFieldNumber = 2,
    kManagerBonusFieldNumber = 3,
    kManagerDeltaFieldNumber = 4,
    kIbBonusFieldNumber = 5,
    kOperationTypeFieldNumber = 1,
    kMoneyDigitsFieldNumber = 10,
    kIbDeltaFieldNumber = 6,
    kChangeBonusTimestampFieldNumber = 7,
    kIntroducingBrokerIdFieldNumber = 9,
  };
  // optional string externalNote = 8;
  bool has_externalnote() const;
  private:
  bool _internal_has_externalnote() const;
  public:
  void clear_externalnote();
  const std::string& externalnote() const;
  void set_externalnote(const std::string& value);
  void set_externalnote(std::string&& value);
  void set_externalnote(const char* value);
  void set_externalnote(const char* value, size_t size);
  std::string* mutable_externalnote();
  std::string* release_externalnote();
  void set_allocated_externalnote(std::string* externalnote);
  private:
  const std::string& _internal_externalnote() const;
  void _internal_set_externalnote(const std::string& value);
  std::string* _internal_mutable_externalnote();
  public:

  // required int64 bonusHistoryId = 2;
  bool has_bonushistoryid() const;
  private:
  bool _internal_has_bonushistoryid() const;
  public:
  void clear_bonushistoryid();
  ::PROTOBUF_NAMESPACE_ID::int64 bonushistoryid() const;
  void set_bonushistoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_bonushistoryid() const;
  void _internal_set_bonushistoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 managerBonus = 3;
  bool has_managerbonus() const;
  private:
  bool _internal_has_managerbonus() const;
  public:
  void clear_managerbonus();
  ::PROTOBUF_NAMESPACE_ID::int64 managerbonus() const;
  void set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_managerbonus() const;
  void _internal_set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 managerDelta = 4;
  bool has_managerdelta() const;
  private:
  bool _internal_has_managerdelta() const;
  public:
  void clear_managerdelta();
  ::PROTOBUF_NAMESPACE_ID::int64 managerdelta() const;
  void set_managerdelta(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_managerdelta() const;
  void _internal_set_managerdelta(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 ibBonus = 5;
  bool has_ibbonus() const;
  private:
  bool _internal_has_ibbonus() const;
  public:
  void clear_ibbonus();
  ::PROTOBUF_NAMESPACE_ID::int64 ibbonus() const;
  void set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ibbonus() const;
  void _internal_set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required .ProtoOAChangeBonusType operationType = 1;
  bool has_operationtype() const;
  private:
  bool _internal_has_operationtype() const;
  public:
  void clear_operationtype();
  ::ProtoOAChangeBonusType operationtype() const;
  void set_operationtype(::ProtoOAChangeBonusType value);
  private:
  ::ProtoOAChangeBonusType _internal_operationtype() const;
  void _internal_set_operationtype(::ProtoOAChangeBonusType value);
  public:

  // optional uint32 moneyDigits = 10;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required int64 ibDelta = 6;
  bool has_ibdelta() const;
  private:
  bool _internal_has_ibdelta() const;
  public:
  void clear_ibdelta();
  ::PROTOBUF_NAMESPACE_ID::int64 ibdelta() const;
  void set_ibdelta(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_ibdelta() const;
  void _internal_set_ibdelta(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 changeBonusTimestamp = 7;
  bool has_changebonustimestamp() const;
  private:
  bool _internal_has_changebonustimestamp() const;
  public:
  void clear_changebonustimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 changebonustimestamp() const;
  void set_changebonustimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_changebonustimestamp() const;
  void _internal_set_changebonustimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 introducingBrokerId = 9;
  bool has_introducingbrokerid() const;
  private:
  bool _internal_has_introducingbrokerid() const;
  public:
  void clear_introducingbrokerid();
  ::PROTOBUF_NAMESPACE_ID::int64 introducingbrokerid() const;
  void set_introducingbrokerid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_introducingbrokerid() const;
  void _internal_set_introducingbrokerid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOABonusDepositWithdraw)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr externalnote_;
  ::PROTOBUF_NAMESPACE_ID::int64 bonushistoryid_;
  ::PROTOBUF_NAMESPACE_ID::int64 managerbonus_;
  ::PROTOBUF_NAMESPACE_ID::int64 managerdelta_;
  ::PROTOBUF_NAMESPACE_ID::int64 ibbonus_;
  int operationtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  ::PROTOBUF_NAMESPACE_ID::int64 ibdelta_;
  ::PROTOBUF_NAMESPACE_ID::int64 changebonustimestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 introducingbrokerid_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOADepositWithdraw PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOADepositWithdraw) */ {
 public:
  inline ProtoOADepositWithdraw() : ProtoOADepositWithdraw(nullptr) {}
  virtual ~ProtoOADepositWithdraw();

  ProtoOADepositWithdraw(const ProtoOADepositWithdraw& from);
  ProtoOADepositWithdraw(ProtoOADepositWithdraw&& from) noexcept
    : ProtoOADepositWithdraw() {
    *this = ::std::move(from);
  }

  inline ProtoOADepositWithdraw& operator=(const ProtoOADepositWithdraw& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOADepositWithdraw& operator=(ProtoOADepositWithdraw&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOADepositWithdraw& default_instance();

  static inline const ProtoOADepositWithdraw* internal_default_instance() {
    return reinterpret_cast<const ProtoOADepositWithdraw*>(
               &_ProtoOADepositWithdraw_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ProtoOADepositWithdraw& a, ProtoOADepositWithdraw& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOADepositWithdraw* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOADepositWithdraw* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOADepositWithdraw* New() const final {
    return CreateMaybeMessage<ProtoOADepositWithdraw>(nullptr);
  }

  ProtoOADepositWithdraw* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOADepositWithdraw>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOADepositWithdraw& from);
  void MergeFrom(const ProtoOADepositWithdraw& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOADepositWithdraw* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOADepositWithdraw";
  }
  protected:
  explicit ProtoOADepositWithdraw(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExternalNoteFieldNumber = 6,
    kBalanceHistoryIdFieldNumber = 2,
    kBalanceFieldNumber = 3,
    kDeltaFieldNumber = 4,
    kChangeBalanceTimestampFieldNumber = 5,
    kOperationTypeFieldNumber = 1,
    kMoneyDigitsFieldNumber = 9,
    kBalanceVersionFieldNumber = 7,
    kEquityFieldNumber = 8,
  };
  // optional string externalNote = 6;
  bool has_externalnote() const;
  private:
  bool _internal_has_externalnote() const;
  public:
  void clear_externalnote();
  const std::string& externalnote() const;
  void set_externalnote(const std::string& value);
  void set_externalnote(std::string&& value);
  void set_externalnote(const char* value);
  void set_externalnote(const char* value, size_t size);
  std::string* mutable_externalnote();
  std::string* release_externalnote();
  void set_allocated_externalnote(std::string* externalnote);
  private:
  const std::string& _internal_externalnote() const;
  void _internal_set_externalnote(const std::string& value);
  std::string* _internal_mutable_externalnote();
  public:

  // required int64 balanceHistoryId = 2;
  bool has_balancehistoryid() const;
  private:
  bool _internal_has_balancehistoryid() const;
  public:
  void clear_balancehistoryid();
  ::PROTOBUF_NAMESPACE_ID::int64 balancehistoryid() const;
  void set_balancehistoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balancehistoryid() const;
  void _internal_set_balancehistoryid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 balance = 3;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::int64 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 delta = 4;
  bool has_delta() const;
  private:
  bool _internal_has_delta() const;
  public:
  void clear_delta();
  ::PROTOBUF_NAMESPACE_ID::int64 delta() const;
  void set_delta(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_delta() const;
  void _internal_set_delta(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 changeBalanceTimestamp = 5;
  bool has_changebalancetimestamp() const;
  private:
  bool _internal_has_changebalancetimestamp() const;
  public:
  void clear_changebalancetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 changebalancetimestamp() const;
  void set_changebalancetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_changebalancetimestamp() const;
  void _internal_set_changebalancetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required .ProtoOAChangeBalanceType operationType = 1;
  bool has_operationtype() const;
  private:
  bool _internal_has_operationtype() const;
  public:
  void clear_operationtype();
  ::ProtoOAChangeBalanceType operationtype() const;
  void set_operationtype(::ProtoOAChangeBalanceType value);
  private:
  ::ProtoOAChangeBalanceType _internal_operationtype() const;
  void _internal_set_operationtype(::ProtoOAChangeBalanceType value);
  public:

  // optional uint32 moneyDigits = 9;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int64 balanceVersion = 7;
  bool has_balanceversion() const;
  private:
  bool _internal_has_balanceversion() const;
  public:
  void clear_balanceversion();
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion() const;
  void set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balanceversion() const;
  void _internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 equity = 8;
  bool has_equity() const;
  private:
  bool _internal_has_equity() const;
  public:
  void clear_equity();
  ::PROTOBUF_NAMESPACE_ID::int64 equity() const;
  void set_equity(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_equity() const;
  void _internal_set_equity(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOADepositWithdraw)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr externalnote_;
  ::PROTOBUF_NAMESPACE_ID::int64 balancehistoryid_;
  ::PROTOBUF_NAMESPACE_ID::int64 balance_;
  ::PROTOBUF_NAMESPACE_ID::int64 delta_;
  ::PROTOBUF_NAMESPACE_ID::int64 changebalancetimestamp_;
  int operationtype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion_;
  ::PROTOBUF_NAMESPACE_ID::int64 equity_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOADeal PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOADeal) */ {
 public:
  inline ProtoOADeal() : ProtoOADeal(nullptr) {}
  virtual ~ProtoOADeal();

  ProtoOADeal(const ProtoOADeal& from);
  ProtoOADeal(ProtoOADeal&& from) noexcept
    : ProtoOADeal() {
    *this = ::std::move(from);
  }

  inline ProtoOADeal& operator=(const ProtoOADeal& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOADeal& operator=(ProtoOADeal&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOADeal& default_instance();

  static inline const ProtoOADeal* internal_default_instance() {
    return reinterpret_cast<const ProtoOADeal*>(
               &_ProtoOADeal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ProtoOADeal& a, ProtoOADeal& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOADeal* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOADeal* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOADeal* New() const final {
    return CreateMaybeMessage<ProtoOADeal>(nullptr);
  }

  ProtoOADeal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOADeal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOADeal& from);
  void MergeFrom(const ProtoOADeal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOADeal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOADeal";
  }
  protected:
  explicit ProtoOADeal(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClosePositionDetailFieldNumber = 16,
    kDealIdFieldNumber = 1,
    kOrderIdFieldNumber = 2,
    kPositionIdFieldNumber = 3,
    kVolumeFieldNumber = 4,
    kFilledVolumeFieldNumber = 5,
    kSymbolIdFieldNumber = 6,
    kCreateTimestampFieldNumber = 7,
    kExecutionTimestampFieldNumber = 8,
    kUtcLastUpdateTimestampFieldNumber = 9,
    kExecutionPriceFieldNumber = 10,
    kMarginRateFieldNumber = 13,
    kCommissionFieldNumber = 14,
    kBaseToUsdConversionRateFieldNumber = 15,
    kMoneyDigitsFieldNumber = 17,
    kTradeSideFieldNumber = 11,
    kDealStatusFieldNumber = 12,
  };
  // optional .ProtoOAClosePositionDetail closePositionDetail = 16;
  bool has_closepositiondetail() const;
  private:
  bool _internal_has_closepositiondetail() const;
  public:
  void clear_closepositiondetail();
  const ::ProtoOAClosePositionDetail& closepositiondetail() const;
  ::ProtoOAClosePositionDetail* release_closepositiondetail();
  ::ProtoOAClosePositionDetail* mutable_closepositiondetail();
  void set_allocated_closepositiondetail(::ProtoOAClosePositionDetail* closepositiondetail);
  private:
  const ::ProtoOAClosePositionDetail& _internal_closepositiondetail() const;
  ::ProtoOAClosePositionDetail* _internal_mutable_closepositiondetail();
  public:
  void unsafe_arena_set_allocated_closepositiondetail(
      ::ProtoOAClosePositionDetail* closepositiondetail);
  ::ProtoOAClosePositionDetail* unsafe_arena_release_closepositiondetail();

  // required int64 dealId = 1;
  bool has_dealid() const;
  private:
  bool _internal_has_dealid() const;
  public:
  void clear_dealid();
  ::PROTOBUF_NAMESPACE_ID::int64 dealid() const;
  void set_dealid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_dealid() const;
  void _internal_set_dealid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 orderId = 2;
  bool has_orderid() const;
  private:
  bool _internal_has_orderid() const;
  public:
  void clear_orderid();
  ::PROTOBUF_NAMESPACE_ID::int64 orderid() const;
  void set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_orderid() const;
  void _internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 positionId = 3;
  bool has_positionid() const;
  private:
  bool _internal_has_positionid() const;
  public:
  void clear_positionid();
  ::PROTOBUF_NAMESPACE_ID::int64 positionid() const;
  void set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_positionid() const;
  void _internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 volume = 4;
  bool has_volume() const;
  private:
  bool _internal_has_volume() const;
  public:
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 filledVolume = 5;
  bool has_filledvolume() const;
  private:
  bool _internal_has_filledvolume() const;
  public:
  void clear_filledvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 filledvolume() const;
  void set_filledvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_filledvolume() const;
  void _internal_set_filledvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 symbolId = 6;
  bool has_symbolid() const;
  private:
  bool _internal_has_symbolid() const;
  public:
  void clear_symbolid();
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid() const;
  void set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_symbolid() const;
  void _internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 createTimestamp = 7;
  bool has_createtimestamp() const;
  private:
  bool _internal_has_createtimestamp() const;
  public:
  void clear_createtimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 createtimestamp() const;
  void set_createtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_createtimestamp() const;
  void _internal_set_createtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 executionTimestamp = 8;
  bool has_executiontimestamp() const;
  private:
  bool _internal_has_executiontimestamp() const;
  public:
  void clear_executiontimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 executiontimestamp() const;
  void set_executiontimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_executiontimestamp() const;
  void _internal_set_executiontimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 utcLastUpdateTimestamp = 9;
  bool has_utclastupdatetimestamp() const;
  private:
  bool _internal_has_utclastupdatetimestamp() const;
  public:
  void clear_utclastupdatetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp() const;
  void set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_utclastupdatetimestamp() const;
  void _internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double executionPrice = 10;
  bool has_executionprice() const;
  private:
  bool _internal_has_executionprice() const;
  public:
  void clear_executionprice();
  double executionprice() const;
  void set_executionprice(double value);
  private:
  double _internal_executionprice() const;
  void _internal_set_executionprice(double value);
  public:

  // optional double marginRate = 13;
  bool has_marginrate() const;
  private:
  bool _internal_has_marginrate() const;
  public:
  void clear_marginrate();
  double marginrate() const;
  void set_marginrate(double value);
  private:
  double _internal_marginrate() const;
  void _internal_set_marginrate(double value);
  public:

  // optional int64 commission = 14;
  bool has_commission() const;
  private:
  bool _internal_has_commission() const;
  public:
  void clear_commission();
  ::PROTOBUF_NAMESPACE_ID::int64 commission() const;
  void set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_commission() const;
  void _internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double baseToUsdConversionRate = 15;
  bool has_basetousdconversionrate() const;
  private:
  bool _internal_has_basetousdconversionrate() const;
  public:
  void clear_basetousdconversionrate();
  double basetousdconversionrate() const;
  void set_basetousdconversionrate(double value);
  private:
  double _internal_basetousdconversionrate() const;
  void _internal_set_basetousdconversionrate(double value);
  public:

  // optional uint32 moneyDigits = 17;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required .ProtoOATradeSide tradeSide = 11;
  bool has_tradeside() const;
  private:
  bool _internal_has_tradeside() const;
  public:
  void clear_tradeside();
  ::ProtoOATradeSide tradeside() const;
  void set_tradeside(::ProtoOATradeSide value);
  private:
  ::ProtoOATradeSide _internal_tradeside() const;
  void _internal_set_tradeside(::ProtoOATradeSide value);
  public:

  // required .ProtoOADealStatus dealStatus = 12;
  bool has_dealstatus() const;
  private:
  bool _internal_has_dealstatus() const;
  public:
  void clear_dealstatus();
  ::ProtoOADealStatus dealstatus() const;
  void set_dealstatus(::ProtoOADealStatus value);
  private:
  ::ProtoOADealStatus _internal_dealstatus() const;
  void _internal_set_dealstatus(::ProtoOADealStatus value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOADeal)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::ProtoOAClosePositionDetail* closepositiondetail_;
  ::PROTOBUF_NAMESPACE_ID::int64 dealid_;
  ::PROTOBUF_NAMESPACE_ID::int64 orderid_;
  ::PROTOBUF_NAMESPACE_ID::int64 positionid_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 filledvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 symbolid_;
  ::PROTOBUF_NAMESPACE_ID::int64 createtimestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 executiontimestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp_;
  double executionprice_;
  double marginrate_;
  ::PROTOBUF_NAMESPACE_ID::int64 commission_;
  double basetousdconversionrate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  int tradeside_;
  int dealstatus_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAClosePositionDetail PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAClosePositionDetail) */ {
 public:
  inline ProtoOAClosePositionDetail() : ProtoOAClosePositionDetail(nullptr) {}
  virtual ~ProtoOAClosePositionDetail();

  ProtoOAClosePositionDetail(const ProtoOAClosePositionDetail& from);
  ProtoOAClosePositionDetail(ProtoOAClosePositionDetail&& from) noexcept
    : ProtoOAClosePositionDetail() {
    *this = ::std::move(from);
  }

  inline ProtoOAClosePositionDetail& operator=(const ProtoOAClosePositionDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAClosePositionDetail& operator=(ProtoOAClosePositionDetail&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAClosePositionDetail& default_instance();

  static inline const ProtoOAClosePositionDetail* internal_default_instance() {
    return reinterpret_cast<const ProtoOAClosePositionDetail*>(
               &_ProtoOAClosePositionDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ProtoOAClosePositionDetail& a, ProtoOAClosePositionDetail& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAClosePositionDetail* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAClosePositionDetail* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAClosePositionDetail* New() const final {
    return CreateMaybeMessage<ProtoOAClosePositionDetail>(nullptr);
  }

  ProtoOAClosePositionDetail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAClosePositionDetail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAClosePositionDetail& from);
  void MergeFrom(const ProtoOAClosePositionDetail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAClosePositionDetail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAClosePositionDetail";
  }
  protected:
  explicit ProtoOAClosePositionDetail(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntryPriceFieldNumber = 1,
    kGrossProfitFieldNumber = 2,
    kSwapFieldNumber = 3,
    kCommissionFieldNumber = 4,
    kBalanceFieldNumber = 5,
    kQuoteToDepositConversionRateFieldNumber = 6,
    kClosedVolumeFieldNumber = 7,
    kBalanceVersionFieldNumber = 8,
    kMoneyDigitsFieldNumber = 9,
  };
  // required double entryPrice = 1;
  bool has_entryprice() const;
  private:
  bool _internal_has_entryprice() const;
  public:
  void clear_entryprice();
  double entryprice() const;
  void set_entryprice(double value);
  private:
  double _internal_entryprice() const;
  void _internal_set_entryprice(double value);
  public:

  // required int64 grossProfit = 2;
  bool has_grossprofit() const;
  private:
  bool _internal_has_grossprofit() const;
  public:
  void clear_grossprofit();
  ::PROTOBUF_NAMESPACE_ID::int64 grossprofit() const;
  void set_grossprofit(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_grossprofit() const;
  void _internal_set_grossprofit(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 swap = 3;
  bool has_swap() const;
  private:
  bool _internal_has_swap() const;
  public:
  void clear_swap();
  ::PROTOBUF_NAMESPACE_ID::int64 swap() const;
  void set_swap(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_swap() const;
  void _internal_set_swap(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 commission = 4;
  bool has_commission() const;
  private:
  bool _internal_has_commission() const;
  public:
  void clear_commission();
  ::PROTOBUF_NAMESPACE_ID::int64 commission() const;
  void set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_commission() const;
  void _internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 balance = 5;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::int64 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional double quoteToDepositConversionRate = 6;
  bool has_quotetodepositconversionrate() const;
  private:
  bool _internal_has_quotetodepositconversionrate() const;
  public:
  void clear_quotetodepositconversionrate();
  double quotetodepositconversionrate() const;
  void set_quotetodepositconversionrate(double value);
  private:
  double _internal_quotetodepositconversionrate() const;
  void _internal_set_quotetodepositconversionrate(double value);
  public:

  // optional int64 closedVolume = 7;
  bool has_closedvolume() const;
  private:
  bool _internal_has_closedvolume() const;
  public:
  void clear_closedvolume();
  ::PROTOBUF_NAMESPACE_ID::int64 closedvolume() const;
  void set_closedvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_closedvolume() const;
  void _internal_set_closedvolume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 balanceVersion = 8;
  bool has_balanceversion() const;
  private:
  bool _internal_has_balanceversion() const;
  public:
  void clear_balanceversion();
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion() const;
  void set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_balanceversion() const;
  void _internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional uint32 moneyDigits = 9;
  bool has_moneydigits() const;
  private:
  bool _internal_has_moneydigits() const;
  public:
  void clear_moneydigits();
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits() const;
  void set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_moneydigits() const;
  void _internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAClosePositionDetail)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double entryprice_;
  ::PROTOBUF_NAMESPACE_ID::int64 grossprofit_;
  ::PROTOBUF_NAMESPACE_ID::int64 swap_;
  ::PROTOBUF_NAMESPACE_ID::int64 commission_;
  ::PROTOBUF_NAMESPACE_ID::int64 balance_;
  double quotetodepositconversionrate_;
  ::PROTOBUF_NAMESPACE_ID::int64 closedvolume_;
  ::PROTOBUF_NAMESPACE_ID::int64 balanceversion_;
  ::PROTOBUF_NAMESPACE_ID::uint32 moneydigits_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOATrendbar PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOATrendbar) */ {
 public:
  inline ProtoOATrendbar() : ProtoOATrendbar(nullptr) {}
  virtual ~ProtoOATrendbar();

  ProtoOATrendbar(const ProtoOATrendbar& from);
  ProtoOATrendbar(ProtoOATrendbar&& from) noexcept
    : ProtoOATrendbar() {
    *this = ::std::move(from);
  }

  inline ProtoOATrendbar& operator=(const ProtoOATrendbar& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOATrendbar& operator=(ProtoOATrendbar&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOATrendbar& default_instance();

  static inline const ProtoOATrendbar* internal_default_instance() {
    return reinterpret_cast<const ProtoOATrendbar*>(
               &_ProtoOATrendbar_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ProtoOATrendbar& a, ProtoOATrendbar& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOATrendbar* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOATrendbar* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOATrendbar* New() const final {
    return CreateMaybeMessage<ProtoOATrendbar>(nullptr);
  }

  ProtoOATrendbar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOATrendbar>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOATrendbar& from);
  void MergeFrom(const ProtoOATrendbar& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOATrendbar* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOATrendbar";
  }
  protected:
  explicit ProtoOATrendbar(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVolumeFieldNumber = 3,
    kLowFieldNumber = 5,
    kDeltaOpenFieldNumber = 6,
    kDeltaCloseFieldNumber = 7,
    kDeltaHighFieldNumber = 8,
    kUtcTimestampInMinutesFieldNumber = 9,
    kPeriodFieldNumber = 4,
  };
  // required int64 volume = 3;
  bool has_volume() const;
  private:
  bool _internal_has_volume() const;
  public:
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int64 low = 5;
  bool has_low() const;
  private:
  bool _internal_has_low() const;
  public:
  void clear_low();
  ::PROTOBUF_NAMESPACE_ID::int64 low() const;
  void set_low(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_low() const;
  void _internal_set_low(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional uint64 deltaOpen = 6;
  bool has_deltaopen() const;
  private:
  bool _internal_has_deltaopen() const;
  public:
  void clear_deltaopen();
  ::PROTOBUF_NAMESPACE_ID::uint64 deltaopen() const;
  void set_deltaopen(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_deltaopen() const;
  void _internal_set_deltaopen(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 deltaClose = 7;
  bool has_deltaclose() const;
  private:
  bool _internal_has_deltaclose() const;
  public:
  void clear_deltaclose();
  ::PROTOBUF_NAMESPACE_ID::uint64 deltaclose() const;
  void set_deltaclose(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_deltaclose() const;
  void _internal_set_deltaclose(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 deltaHigh = 8;
  bool has_deltahigh() const;
  private:
  bool _internal_has_deltahigh() const;
  public:
  void clear_deltahigh();
  ::PROTOBUF_NAMESPACE_ID::uint64 deltahigh() const;
  void set_deltahigh(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_deltahigh() const;
  void _internal_set_deltahigh(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 utcTimestampInMinutes = 9;
  bool has_utctimestampinminutes() const;
  private:
  bool _internal_has_utctimestampinminutes() const;
  public:
  void clear_utctimestampinminutes();
  ::PROTOBUF_NAMESPACE_ID::uint32 utctimestampinminutes() const;
  void set_utctimestampinminutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_utctimestampinminutes() const;
  void _internal_set_utctimestampinminutes(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ProtoOATrendbarPeriod period = 4 [default = M1];
  bool has_period() const;
  private:
  bool _internal_has_period() const;
  public:
  void clear_period();
  ::ProtoOATrendbarPeriod period() const;
  void set_period(::ProtoOATrendbarPeriod value);
  private:
  ::ProtoOATrendbarPeriod _internal_period() const;
  void _internal_set_period(::ProtoOATrendbarPeriod value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOATrendbar)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 low_;
  ::PROTOBUF_NAMESPACE_ID::uint64 deltaopen_;
  ::PROTOBUF_NAMESPACE_ID::uint64 deltaclose_;
  ::PROTOBUF_NAMESPACE_ID::uint64 deltahigh_;
  ::PROTOBUF_NAMESPACE_ID::uint32 utctimestampinminutes_;
  int period_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAExpectedMargin PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAExpectedMargin) */ {
 public:
  inline ProtoOAExpectedMargin() : ProtoOAExpectedMargin(nullptr) {}
  virtual ~ProtoOAExpectedMargin();

  ProtoOAExpectedMargin(const ProtoOAExpectedMargin& from);
  ProtoOAExpectedMargin(ProtoOAExpectedMargin&& from) noexcept
    : ProtoOAExpectedMargin() {
    *this = ::std::move(from);
  }

  inline ProtoOAExpectedMargin& operator=(const ProtoOAExpectedMargin& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAExpectedMargin& operator=(ProtoOAExpectedMargin&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAExpectedMargin& default_instance();

  static inline const ProtoOAExpectedMargin* internal_default_instance() {
    return reinterpret_cast<const ProtoOAExpectedMargin*>(
               &_ProtoOAExpectedMargin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ProtoOAExpectedMargin& a, ProtoOAExpectedMargin& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAExpectedMargin* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAExpectedMargin* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAExpectedMargin* New() const final {
    return CreateMaybeMessage<ProtoOAExpectedMargin>(nullptr);
  }

  ProtoOAExpectedMargin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAExpectedMargin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAExpectedMargin& from);
  void MergeFrom(const ProtoOAExpectedMargin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAExpectedMargin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAExpectedMargin";
  }
  protected:
  explicit ProtoOAExpectedMargin(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVolumeFieldNumber = 1,
    kBuyMarginFieldNumber = 2,
    kSellMarginFieldNumber = 3,
  };
  // required int64 volume = 1;
  bool has_volume() const;
  private:
  bool _internal_has_volume() const;
  public:
  void clear_volume();
  ::PROTOBUF_NAMESPACE_ID::int64 volume() const;
  void set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_volume() const;
  void _internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 buyMargin = 2;
  bool has_buymargin() const;
  private:
  bool _internal_has_buymargin() const;
  public:
  void clear_buymargin();
  ::PROTOBUF_NAMESPACE_ID::int64 buymargin() const;
  void set_buymargin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_buymargin() const;
  void _internal_set_buymargin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 sellMargin = 3;
  bool has_sellmargin() const;
  private:
  bool _internal_has_sellmargin() const;
  public:
  void clear_sellmargin();
  ::PROTOBUF_NAMESPACE_ID::int64 sellmargin() const;
  void set_sellmargin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_sellmargin() const;
  void _internal_set_sellmargin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAExpectedMargin)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 volume_;
  ::PROTOBUF_NAMESPACE_ID::int64 buymargin_;
  ::PROTOBUF_NAMESPACE_ID::int64 sellmargin_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOATickData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOATickData) */ {
 public:
  inline ProtoOATickData() : ProtoOATickData(nullptr) {}
  virtual ~ProtoOATickData();

  ProtoOATickData(const ProtoOATickData& from);
  ProtoOATickData(ProtoOATickData&& from) noexcept
    : ProtoOATickData() {
    *this = ::std::move(from);
  }

  inline ProtoOATickData& operator=(const ProtoOATickData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOATickData& operator=(ProtoOATickData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOATickData& default_instance();

  static inline const ProtoOATickData* internal_default_instance() {
    return reinterpret_cast<const ProtoOATickData*>(
               &_ProtoOATickData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ProtoOATickData& a, ProtoOATickData& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOATickData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOATickData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOATickData* New() const final {
    return CreateMaybeMessage<ProtoOATickData>(nullptr);
  }

  ProtoOATickData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOATickData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOATickData& from);
  void MergeFrom(const ProtoOATickData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOATickData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOATickData";
  }
  protected:
  explicit ProtoOATickData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampFieldNumber = 1,
    kTickFieldNumber = 2,
  };
  // required int64 timestamp = 1;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 tick = 2;
  bool has_tick() const;
  private:
  bool _internal_has_tick() const;
  public:
  void clear_tick();
  ::PROTOBUF_NAMESPACE_ID::int64 tick() const;
  void set_tick(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_tick() const;
  void _internal_set_tick(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOATickData)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int64 tick_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOACtidProfile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOACtidProfile) */ {
 public:
  inline ProtoOACtidProfile() : ProtoOACtidProfile(nullptr) {}
  virtual ~ProtoOACtidProfile();

  ProtoOACtidProfile(const ProtoOACtidProfile& from);
  ProtoOACtidProfile(ProtoOACtidProfile&& from) noexcept
    : ProtoOACtidProfile() {
    *this = ::std::move(from);
  }

  inline ProtoOACtidProfile& operator=(const ProtoOACtidProfile& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOACtidProfile& operator=(ProtoOACtidProfile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOACtidProfile& default_instance();

  static inline const ProtoOACtidProfile* internal_default_instance() {
    return reinterpret_cast<const ProtoOACtidProfile*>(
               &_ProtoOACtidProfile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ProtoOACtidProfile& a, ProtoOACtidProfile& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOACtidProfile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOACtidProfile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOACtidProfile* New() const final {
    return CreateMaybeMessage<ProtoOACtidProfile>(nullptr);
  }

  ProtoOACtidProfile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOACtidProfile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOACtidProfile& from);
  void MergeFrom(const ProtoOACtidProfile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOACtidProfile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOACtidProfile";
  }
  protected:
  explicit ProtoOACtidProfile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserIdFieldNumber = 1,
  };
  // required int64 userId = 1;
  bool has_userid() const;
  private:
  bool _internal_has_userid() const;
  public:
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::int64 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOACtidProfile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int64 userid_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOACtidTraderAccount PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOACtidTraderAccount) */ {
 public:
  inline ProtoOACtidTraderAccount() : ProtoOACtidTraderAccount(nullptr) {}
  virtual ~ProtoOACtidTraderAccount();

  ProtoOACtidTraderAccount(const ProtoOACtidTraderAccount& from);
  ProtoOACtidTraderAccount(ProtoOACtidTraderAccount&& from) noexcept
    : ProtoOACtidTraderAccount() {
    *this = ::std::move(from);
  }

  inline ProtoOACtidTraderAccount& operator=(const ProtoOACtidTraderAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOACtidTraderAccount& operator=(ProtoOACtidTraderAccount&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOACtidTraderAccount& default_instance();

  static inline const ProtoOACtidTraderAccount* internal_default_instance() {
    return reinterpret_cast<const ProtoOACtidTraderAccount*>(
               &_ProtoOACtidTraderAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ProtoOACtidTraderAccount& a, ProtoOACtidTraderAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOACtidTraderAccount* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOACtidTraderAccount* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOACtidTraderAccount* New() const final {
    return CreateMaybeMessage<ProtoOACtidTraderAccount>(nullptr);
  }

  ProtoOACtidTraderAccount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOACtidTraderAccount>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOACtidTraderAccount& from);
  void MergeFrom(const ProtoOACtidTraderAccount& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOACtidTraderAccount* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOACtidTraderAccount";
  }
  protected:
  explicit ProtoOACtidTraderAccount(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCtidTraderAccountIdFieldNumber = 1,
    kTraderLoginFieldNumber = 3,
    kIsLiveFieldNumber = 2,
  };
  // required uint64 ctidTraderAccountId = 1;
  bool has_ctidtraderaccountid() const;
  private:
  bool _internal_has_ctidtraderaccountid() const;
  public:
  void clear_ctidtraderaccountid();
  ::PROTOBUF_NAMESPACE_ID::uint64 ctidtraderaccountid() const;
  void set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ctidtraderaccountid() const;
  void _internal_set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int64 traderLogin = 3;
  bool has_traderlogin() const;
  private:
  bool _internal_has_traderlogin() const;
  public:
  void clear_traderlogin();
  ::PROTOBUF_NAMESPACE_ID::int64 traderlogin() const;
  void set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_traderlogin() const;
  void _internal_set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool isLive = 2;
  bool has_islive() const;
  private:
  bool _internal_has_islive() const;
  public:
  void clear_islive();
  bool islive() const;
  void set_islive(bool value);
  private:
  bool _internal_islive() const;
  void _internal_set_islive(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOACtidTraderAccount)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 ctidtraderaccountid_;
  ::PROTOBUF_NAMESPACE_ID::int64 traderlogin_;
  bool islive_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAAssetClass PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAAssetClass) */ {
 public:
  inline ProtoOAAssetClass() : ProtoOAAssetClass(nullptr) {}
  virtual ~ProtoOAAssetClass();

  ProtoOAAssetClass(const ProtoOAAssetClass& from);
  ProtoOAAssetClass(ProtoOAAssetClass&& from) noexcept
    : ProtoOAAssetClass() {
    *this = ::std::move(from);
  }

  inline ProtoOAAssetClass& operator=(const ProtoOAAssetClass& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAAssetClass& operator=(ProtoOAAssetClass&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAAssetClass& default_instance();

  static inline const ProtoOAAssetClass* internal_default_instance() {
    return reinterpret_cast<const ProtoOAAssetClass*>(
               &_ProtoOAAssetClass_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ProtoOAAssetClass& a, ProtoOAAssetClass& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAAssetClass* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAAssetClass* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAAssetClass* New() const final {
    return CreateMaybeMessage<ProtoOAAssetClass>(nullptr);
  }

  ProtoOAAssetClass* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAAssetClass>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAAssetClass& from);
  void MergeFrom(const ProtoOAAssetClass& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAAssetClass* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAAssetClass";
  }
  protected:
  explicit ProtoOAAssetClass(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAAssetClass)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOADepthQuote PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOADepthQuote) */ {
 public:
  inline ProtoOADepthQuote() : ProtoOADepthQuote(nullptr) {}
  virtual ~ProtoOADepthQuote();

  ProtoOADepthQuote(const ProtoOADepthQuote& from);
  ProtoOADepthQuote(ProtoOADepthQuote&& from) noexcept
    : ProtoOADepthQuote() {
    *this = ::std::move(from);
  }

  inline ProtoOADepthQuote& operator=(const ProtoOADepthQuote& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOADepthQuote& operator=(ProtoOADepthQuote&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOADepthQuote& default_instance();

  static inline const ProtoOADepthQuote* internal_default_instance() {
    return reinterpret_cast<const ProtoOADepthQuote*>(
               &_ProtoOADepthQuote_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ProtoOADepthQuote& a, ProtoOADepthQuote& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOADepthQuote* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOADepthQuote* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOADepthQuote* New() const final {
    return CreateMaybeMessage<ProtoOADepthQuote>(nullptr);
  }

  ProtoOADepthQuote* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOADepthQuote>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOADepthQuote& from);
  void MergeFrom(const ProtoOADepthQuote& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOADepthQuote* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOADepthQuote";
  }
  protected:
  explicit ProtoOADepthQuote(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kSizeFieldNumber = 3,
    kBidFieldNumber = 4,
    kAskFieldNumber = 5,
  };
  // required uint64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required uint64 size = 3;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint64 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 bid = 4;
  bool has_bid() const;
  private:
  bool _internal_has_bid() const;
  public:
  void clear_bid();
  ::PROTOBUF_NAMESPACE_ID::uint64 bid() const;
  void set_bid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_bid() const;
  void _internal_set_bid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint64 ask = 5;
  bool has_ask() const;
  private:
  bool _internal_has_ask() const;
  public:
  void clear_ask();
  ::PROTOBUF_NAMESPACE_ID::uint64 ask() const;
  void set_ask(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ask() const;
  void _internal_set_ask(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOADepthQuote)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 bid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 ask_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAMarginCall PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAMarginCall) */ {
 public:
  inline ProtoOAMarginCall() : ProtoOAMarginCall(nullptr) {}
  virtual ~ProtoOAMarginCall();

  ProtoOAMarginCall(const ProtoOAMarginCall& from);
  ProtoOAMarginCall(ProtoOAMarginCall&& from) noexcept
    : ProtoOAMarginCall() {
    *this = ::std::move(from);
  }

  inline ProtoOAMarginCall& operator=(const ProtoOAMarginCall& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAMarginCall& operator=(ProtoOAMarginCall&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAMarginCall& default_instance();

  static inline const ProtoOAMarginCall* internal_default_instance() {
    return reinterpret_cast<const ProtoOAMarginCall*>(
               &_ProtoOAMarginCall_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ProtoOAMarginCall& a, ProtoOAMarginCall& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAMarginCall* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAMarginCall* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAMarginCall* New() const final {
    return CreateMaybeMessage<ProtoOAMarginCall>(nullptr);
  }

  ProtoOAMarginCall* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAMarginCall>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAMarginCall& from);
  void MergeFrom(const ProtoOAMarginCall& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAMarginCall* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAMarginCall";
  }
  protected:
  explicit ProtoOAMarginCall(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMarginLevelThresholdFieldNumber = 2,
    kUtcLastUpdateTimestampFieldNumber = 3,
    kMarginCallTypeFieldNumber = 1,
  };
  // required double marginLevelThreshold = 2;
  bool has_marginlevelthreshold() const;
  private:
  bool _internal_has_marginlevelthreshold() const;
  public:
  void clear_marginlevelthreshold();
  double marginlevelthreshold() const;
  void set_marginlevelthreshold(double value);
  private:
  double _internal_marginlevelthreshold() const;
  void _internal_set_marginlevelthreshold(double value);
  public:

  // optional int64 utcLastUpdateTimestamp = 3;
  bool has_utclastupdatetimestamp() const;
  private:
  bool _internal_has_utclastupdatetimestamp() const;
  public:
  void clear_utclastupdatetimestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp() const;
  void set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_utclastupdatetimestamp() const;
  void _internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required .ProtoOANotificationType marginCallType = 1;
  bool has_margincalltype() const;
  private:
  bool _internal_has_margincalltype() const;
  public:
  void clear_margincalltype();
  ::ProtoOANotificationType margincalltype() const;
  void set_margincalltype(::ProtoOANotificationType value);
  private:
  ::ProtoOANotificationType _internal_margincalltype() const;
  void _internal_set_margincalltype(::ProtoOANotificationType value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAMarginCall)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double marginlevelthreshold_;
  ::PROTOBUF_NAMESPACE_ID::int64 utclastupdatetimestamp_;
  int margincalltype_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// -------------------------------------------------------------------

class ProtoOAHoliday PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoOAHoliday) */ {
 public:
  inline ProtoOAHoliday() : ProtoOAHoliday(nullptr) {}
  virtual ~ProtoOAHoliday();

  ProtoOAHoliday(const ProtoOAHoliday& from);
  ProtoOAHoliday(ProtoOAHoliday&& from) noexcept
    : ProtoOAHoliday() {
    *this = ::std::move(from);
  }

  inline ProtoOAHoliday& operator=(const ProtoOAHoliday& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProtoOAHoliday& operator=(ProtoOAHoliday&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProtoOAHoliday& default_instance();

  static inline const ProtoOAHoliday* internal_default_instance() {
    return reinterpret_cast<const ProtoOAHoliday*>(
               &_ProtoOAHoliday_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ProtoOAHoliday& a, ProtoOAHoliday& b) {
    a.Swap(&b);
  }
  inline void Swap(ProtoOAHoliday* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProtoOAHoliday* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProtoOAHoliday* New() const final {
    return CreateMaybeMessage<ProtoOAHoliday>(nullptr);
  }

  ProtoOAHoliday* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProtoOAHoliday>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProtoOAHoliday& from);
  void MergeFrom(const ProtoOAHoliday& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtoOAHoliday* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoOAHoliday";
  }
  protected:
  explicit ProtoOAHoliday(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_OpenApiModelMessages_2eproto);
    return ::descriptor_table_OpenApiModelMessages_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kScheduleTimeZoneFieldNumber = 4,
    kHolidayIdFieldNumber = 1,
    kHolidayDateFieldNumber = 5,
    kIsRecurringFieldNumber = 6,
    kStartSecondFieldNumber = 7,
    kEndSecondFieldNumber = 8,
  };
  // required string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string description = 3;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // required string scheduleTimeZone = 4;
  bool has_scheduletimezone() const;
  private:
  bool _internal_has_scheduletimezone() const;
  public:
  void clear_scheduletimezone();
  const std::string& scheduletimezone() const;
  void set_scheduletimezone(const std::string& value);
  void set_scheduletimezone(std::string&& value);
  void set_scheduletimezone(const char* value);
  void set_scheduletimezone(const char* value, size_t size);
  std::string* mutable_scheduletimezone();
  std::string* release_scheduletimezone();
  void set_allocated_scheduletimezone(std::string* scheduletimezone);
  private:
  const std::string& _internal_scheduletimezone() const;
  void _internal_set_scheduletimezone(const std::string& value);
  std::string* _internal_mutable_scheduletimezone();
  public:

  // required int64 holidayId = 1;
  bool has_holidayid() const;
  private:
  bool _internal_has_holidayid() const;
  public:
  void clear_holidayid();
  ::PROTOBUF_NAMESPACE_ID::int64 holidayid() const;
  void set_holidayid(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_holidayid() const;
  void _internal_set_holidayid(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required int64 holidayDate = 5;
  bool has_holidaydate() const;
  private:
  bool _internal_has_holidaydate() const;
  public:
  void clear_holidaydate();
  ::PROTOBUF_NAMESPACE_ID::int64 holidaydate() const;
  void set_holidaydate(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_holidaydate() const;
  void _internal_set_holidaydate(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // required bool isRecurring = 6;
  bool has_isrecurring() const;
  private:
  bool _internal_has_isrecurring() const;
  public:
  void clear_isrecurring();
  bool isrecurring() const;
  void set_isrecurring(bool value);
  private:
  bool _internal_isrecurring() const;
  void _internal_set_isrecurring(bool value);
  public:

  // optional int32 startSecond = 7;
  bool has_startsecond() const;
  private:
  bool _internal_has_startsecond() const;
  public:
  void clear_startsecond();
  ::PROTOBUF_NAMESPACE_ID::int32 startsecond() const;
  void set_startsecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_startsecond() const;
  void _internal_set_startsecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 endSecond = 8;
  bool has_endsecond() const;
  private:
  bool _internal_has_endsecond() const;
  public:
  void clear_endsecond();
  ::PROTOBUF_NAMESPACE_ID::int32 endsecond() const;
  void set_endsecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_endsecond() const;
  void _internal_set_endsecond(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoOAHoliday)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr scheduletimezone_;
  ::PROTOBUF_NAMESPACE_ID::int64 holidayid_;
  ::PROTOBUF_NAMESPACE_ID::int64 holidaydate_;
  bool isrecurring_;
  ::PROTOBUF_NAMESPACE_ID::int32 startsecond_;
  ::PROTOBUF_NAMESPACE_ID::int32 endsecond_;
  friend struct ::TableStruct_OpenApiModelMessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoOAAsset

// required int64 assetId = 1;
inline bool ProtoOAAsset::_internal_has_assetid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAAsset::has_assetid() const {
  return _internal_has_assetid();
}
inline void ProtoOAAsset::clear_assetid() {
  assetid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAAsset::_internal_assetid() const {
  return assetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAAsset::assetid() const {
  // @@protoc_insertion_point(field_get:ProtoOAAsset.assetId)
  return _internal_assetid();
}
inline void ProtoOAAsset::_internal_set_assetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  assetid_ = value;
}
inline void ProtoOAAsset::set_assetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_assetid(value);
  // @@protoc_insertion_point(field_set:ProtoOAAsset.assetId)
}

// required string name = 2;
inline bool ProtoOAAsset::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAAsset::has_name() const {
  return _internal_has_name();
}
inline void ProtoOAAsset::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOAAsset::name() const {
  // @@protoc_insertion_point(field_get:ProtoOAAsset.name)
  return _internal_name();
}
inline void ProtoOAAsset::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoOAAsset.name)
}
inline std::string* ProtoOAAsset::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoOAAsset.name)
  return _internal_mutable_name();
}
inline const std::string& ProtoOAAsset::_internal_name() const {
  return name_.Get();
}
inline void ProtoOAAsset::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAAsset::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAAsset.name)
}
inline void ProtoOAAsset::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAAsset.name)
}
inline void ProtoOAAsset::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAAsset.name)
}
inline std::string* ProtoOAAsset::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAAsset::release_name() {
  // @@protoc_insertion_point(field_release:ProtoOAAsset.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAAsset::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAAsset.name)
}

// optional string displayName = 3;
inline bool ProtoOAAsset::_internal_has_displayname() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAAsset::has_displayname() const {
  return _internal_has_displayname();
}
inline void ProtoOAAsset::clear_displayname() {
  displayname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOAAsset::displayname() const {
  // @@protoc_insertion_point(field_get:ProtoOAAsset.displayName)
  return _internal_displayname();
}
inline void ProtoOAAsset::set_displayname(const std::string& value) {
  _internal_set_displayname(value);
  // @@protoc_insertion_point(field_set:ProtoOAAsset.displayName)
}
inline std::string* ProtoOAAsset::mutable_displayname() {
  // @@protoc_insertion_point(field_mutable:ProtoOAAsset.displayName)
  return _internal_mutable_displayname();
}
inline const std::string& ProtoOAAsset::_internal_displayname() const {
  return displayname_.Get();
}
inline void ProtoOAAsset::_internal_set_displayname(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAAsset::set_displayname(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  displayname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAAsset.displayName)
}
inline void ProtoOAAsset::set_displayname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAAsset.displayName)
}
inline void ProtoOAAsset::set_displayname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  displayname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAAsset.displayName)
}
inline std::string* ProtoOAAsset::_internal_mutable_displayname() {
  _has_bits_[0] |= 0x00000002u;
  return displayname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAAsset::release_displayname() {
  // @@protoc_insertion_point(field_release:ProtoOAAsset.displayName)
  if (!_internal_has_displayname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return displayname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAAsset::set_allocated_displayname(std::string* displayname) {
  if (displayname != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  displayname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), displayname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAAsset.displayName)
}

// optional int32 digits = 4;
inline bool ProtoOAAsset::_internal_has_digits() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAAsset::has_digits() const {
  return _internal_has_digits();
}
inline void ProtoOAAsset::clear_digits() {
  digits_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAAsset::_internal_digits() const {
  return digits_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAAsset::digits() const {
  // @@protoc_insertion_point(field_get:ProtoOAAsset.digits)
  return _internal_digits();
}
inline void ProtoOAAsset::_internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  digits_ = value;
}
inline void ProtoOAAsset::set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_digits(value);
  // @@protoc_insertion_point(field_set:ProtoOAAsset.digits)
}

// -------------------------------------------------------------------

// ProtoOASymbol

// required int64 symbolId = 1;
inline bool ProtoOASymbol::_internal_has_symbolid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_symbolid() const {
  return _internal_has_symbolid();
}
inline void ProtoOASymbol::clear_symbolid() {
  symbolid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_symbolid() const {
  return symbolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::symbolid() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.symbolId)
  return _internal_symbolid();
}
inline void ProtoOASymbol::_internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  symbolid_ = value;
}
inline void ProtoOASymbol::set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolid(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.symbolId)
}

// required int32 digits = 2;
inline bool ProtoOASymbol::_internal_has_digits() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_digits() const {
  return _internal_has_digits();
}
inline void ProtoOASymbol::clear_digits() {
  digits_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::_internal_digits() const {
  return digits_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::digits() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.digits)
  return _internal_digits();
}
inline void ProtoOASymbol::_internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  digits_ = value;
}
inline void ProtoOASymbol::set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_digits(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.digits)
}

// required int32 pipPosition = 3;
inline bool ProtoOASymbol::_internal_has_pipposition() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_pipposition() const {
  return _internal_has_pipposition();
}
inline void ProtoOASymbol::clear_pipposition() {
  pipposition_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::_internal_pipposition() const {
  return pipposition_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::pipposition() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.pipPosition)
  return _internal_pipposition();
}
inline void ProtoOASymbol::_internal_set_pipposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  pipposition_ = value;
}
inline void ProtoOASymbol::set_pipposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pipposition(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.pipPosition)
}

// optional bool enableShortSelling = 4;
inline bool ProtoOASymbol::_internal_has_enableshortselling() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_enableshortselling() const {
  return _internal_has_enableshortselling();
}
inline void ProtoOASymbol::clear_enableshortselling() {
  enableshortselling_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool ProtoOASymbol::_internal_enableshortselling() const {
  return enableshortselling_;
}
inline bool ProtoOASymbol::enableshortselling() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.enableShortSelling)
  return _internal_enableshortselling();
}
inline void ProtoOASymbol::_internal_set_enableshortselling(bool value) {
  _has_bits_[0] |= 0x00000080u;
  enableshortselling_ = value;
}
inline void ProtoOASymbol::set_enableshortselling(bool value) {
  _internal_set_enableshortselling(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.enableShortSelling)
}

// optional bool guaranteedStopLoss = 5;
inline bool ProtoOASymbol::_internal_has_guaranteedstoploss() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_guaranteedstoploss() const {
  return _internal_has_guaranteedstoploss();
}
inline void ProtoOASymbol::clear_guaranteedstoploss() {
  guaranteedstoploss_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool ProtoOASymbol::_internal_guaranteedstoploss() const {
  return guaranteedstoploss_;
}
inline bool ProtoOASymbol::guaranteedstoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.guaranteedStopLoss)
  return _internal_guaranteedstoploss();
}
inline void ProtoOASymbol::_internal_set_guaranteedstoploss(bool value) {
  _has_bits_[0] |= 0x00000100u;
  guaranteedstoploss_ = value;
}
inline void ProtoOASymbol::set_guaranteedstoploss(bool value) {
  _internal_set_guaranteedstoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.guaranteedStopLoss)
}

// optional .ProtoOADayOfWeek swapRollover3Days = 6 [default = MONDAY];
inline bool ProtoOASymbol::_internal_has_swaprollover3days() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_swaprollover3days() const {
  return _internal_has_swaprollover3days();
}
inline void ProtoOASymbol::clear_swaprollover3days() {
  swaprollover3days_ = 1;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::ProtoOADayOfWeek ProtoOASymbol::_internal_swaprollover3days() const {
  return static_cast< ::ProtoOADayOfWeek >(swaprollover3days_);
}
inline ::ProtoOADayOfWeek ProtoOASymbol::swaprollover3days() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.swapRollover3Days)
  return _internal_swaprollover3days();
}
inline void ProtoOASymbol::_internal_set_swaprollover3days(::ProtoOADayOfWeek value) {
  assert(::ProtoOADayOfWeek_IsValid(value));
  _has_bits_[0] |= 0x08000000u;
  swaprollover3days_ = value;
}
inline void ProtoOASymbol::set_swaprollover3days(::ProtoOADayOfWeek value) {
  _internal_set_swaprollover3days(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.swapRollover3Days)
}

// optional double swapLong = 7;
inline bool ProtoOASymbol::_internal_has_swaplong() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_swaplong() const {
  return _internal_has_swaplong();
}
inline void ProtoOASymbol::clear_swaplong() {
  swaplong_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ProtoOASymbol::_internal_swaplong() const {
  return swaplong_;
}
inline double ProtoOASymbol::swaplong() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.swapLong)
  return _internal_swaplong();
}
inline void ProtoOASymbol::_internal_set_swaplong(double value) {
  _has_bits_[0] |= 0x00000020u;
  swaplong_ = value;
}
inline void ProtoOASymbol::set_swaplong(double value) {
  _internal_set_swaplong(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.swapLong)
}

// optional double swapShort = 8;
inline bool ProtoOASymbol::_internal_has_swapshort() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_swapshort() const {
  return _internal_has_swapshort();
}
inline void ProtoOASymbol::clear_swapshort() {
  swapshort_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double ProtoOASymbol::_internal_swapshort() const {
  return swapshort_;
}
inline double ProtoOASymbol::swapshort() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.swapShort)
  return _internal_swapshort();
}
inline void ProtoOASymbol::_internal_set_swapshort(double value) {
  _has_bits_[0] |= 0x00000040u;
  swapshort_ = value;
}
inline void ProtoOASymbol::set_swapshort(double value) {
  _internal_set_swapshort(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.swapShort)
}

// optional int64 maxVolume = 9;
inline bool ProtoOASymbol::_internal_has_maxvolume() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_maxvolume() const {
  return _internal_has_maxvolume();
}
inline void ProtoOASymbol::clear_maxvolume() {
  maxvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_maxvolume() const {
  return maxvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::maxvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.maxVolume)
  return _internal_maxvolume();
}
inline void ProtoOASymbol::_internal_set_maxvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000400u;
  maxvolume_ = value;
}
inline void ProtoOASymbol::set_maxvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_maxvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.maxVolume)
}

// optional int64 minVolume = 10;
inline bool ProtoOASymbol::_internal_has_minvolume() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_minvolume() const {
  return _internal_has_minvolume();
}
inline void ProtoOASymbol::clear_minvolume() {
  minvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_minvolume() const {
  return minvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::minvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.minVolume)
  return _internal_minvolume();
}
inline void ProtoOASymbol::_internal_set_minvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000800u;
  minvolume_ = value;
}
inline void ProtoOASymbol::set_minvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_minvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.minVolume)
}

// optional int64 stepVolume = 11;
inline bool ProtoOASymbol::_internal_has_stepvolume() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_stepvolume() const {
  return _internal_has_stepvolume();
}
inline void ProtoOASymbol::clear_stepvolume() {
  stepvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_stepvolume() const {
  return stepvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::stepvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.stepVolume)
  return _internal_stepvolume();
}
inline void ProtoOASymbol::_internal_set_stepvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  stepvolume_ = value;
}
inline void ProtoOASymbol::set_stepvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_stepvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.stepVolume)
}

// optional uint64 maxExposure = 12;
inline bool ProtoOASymbol::_internal_has_maxexposure() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_maxexposure() const {
  return _internal_has_maxexposure();
}
inline void ProtoOASymbol::clear_maxexposure() {
  maxexposure_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOASymbol::_internal_maxexposure() const {
  return maxexposure_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOASymbol::maxexposure() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.maxExposure)
  return _internal_maxexposure();
}
inline void ProtoOASymbol::_internal_set_maxexposure(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00002000u;
  maxexposure_ = value;
}
inline void ProtoOASymbol::set_maxexposure(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_maxexposure(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.maxExposure)
}

// repeated .ProtoOAInterval schedule = 13;
inline int ProtoOASymbol::_internal_schedule_size() const {
  return schedule_.size();
}
inline int ProtoOASymbol::schedule_size() const {
  return _internal_schedule_size();
}
inline void ProtoOASymbol::clear_schedule() {
  schedule_.Clear();
}
inline ::ProtoOAInterval* ProtoOASymbol::mutable_schedule(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOASymbol.schedule)
  return schedule_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAInterval >*
ProtoOASymbol::mutable_schedule() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOASymbol.schedule)
  return &schedule_;
}
inline const ::ProtoOAInterval& ProtoOASymbol::_internal_schedule(int index) const {
  return schedule_.Get(index);
}
inline const ::ProtoOAInterval& ProtoOASymbol::schedule(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.schedule)
  return _internal_schedule(index);
}
inline ::ProtoOAInterval* ProtoOASymbol::_internal_add_schedule() {
  return schedule_.Add();
}
inline ::ProtoOAInterval* ProtoOASymbol::add_schedule() {
  // @@protoc_insertion_point(field_add:ProtoOASymbol.schedule)
  return _internal_add_schedule();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAInterval >&
ProtoOASymbol::schedule() const {
  // @@protoc_insertion_point(field_list:ProtoOASymbol.schedule)
  return schedule_;
}

// optional int64 commission = 14 [deprecated = true];
inline bool ProtoOASymbol::_internal_has_commission() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_commission() const {
  return _internal_has_commission();
}
inline void ProtoOASymbol::clear_commission() {
  commission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_commission() const {
  return commission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::commission() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.commission)
  return _internal_commission();
}
inline void ProtoOASymbol::_internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00004000u;
  commission_ = value;
}
inline void ProtoOASymbol::set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_commission(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.commission)
}

// optional .ProtoOACommissionType commissionType = 15 [default = USD_PER_MILLION_USD];
inline bool ProtoOASymbol::_internal_has_commissiontype() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_commissiontype() const {
  return _internal_has_commissiontype();
}
inline void ProtoOASymbol::clear_commissiontype() {
  commissiontype_ = 1;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::ProtoOACommissionType ProtoOASymbol::_internal_commissiontype() const {
  return static_cast< ::ProtoOACommissionType >(commissiontype_);
}
inline ::ProtoOACommissionType ProtoOASymbol::commissiontype() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.commissionType)
  return _internal_commissiontype();
}
inline void ProtoOASymbol::_internal_set_commissiontype(::ProtoOACommissionType value) {
  assert(::ProtoOACommissionType_IsValid(value));
  _has_bits_[0] |= 0x10000000u;
  commissiontype_ = value;
}
inline void ProtoOASymbol::set_commissiontype(::ProtoOACommissionType value) {
  _internal_set_commissiontype(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.commissionType)
}

// optional uint32 slDistance = 16;
inline bool ProtoOASymbol::_internal_has_sldistance() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_sldistance() const {
  return _internal_has_sldistance();
}
inline void ProtoOASymbol::clear_sldistance() {
  sldistance_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::_internal_sldistance() const {
  return sldistance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::sldistance() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.slDistance)
  return _internal_sldistance();
}
inline void ProtoOASymbol::_internal_set_sldistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  sldistance_ = value;
}
inline void ProtoOASymbol::set_sldistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_sldistance(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.slDistance)
}

// optional uint32 tpDistance = 17;
inline bool ProtoOASymbol::_internal_has_tpdistance() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_tpdistance() const {
  return _internal_has_tpdistance();
}
inline void ProtoOASymbol::clear_tpdistance() {
  tpdistance_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::_internal_tpdistance() const {
  return tpdistance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::tpdistance() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.tpDistance)
  return _internal_tpdistance();
}
inline void ProtoOASymbol::_internal_set_tpdistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  tpdistance_ = value;
}
inline void ProtoOASymbol::set_tpdistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tpdistance(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.tpDistance)
}

// optional uint32 gslDistance = 18;
inline bool ProtoOASymbol::_internal_has_gsldistance() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_gsldistance() const {
  return _internal_has_gsldistance();
}
inline void ProtoOASymbol::clear_gsldistance() {
  gsldistance_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::_internal_gsldistance() const {
  return gsldistance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOASymbol::gsldistance() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.gslDistance)
  return _internal_gsldistance();
}
inline void ProtoOASymbol::_internal_set_gsldistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  gsldistance_ = value;
}
inline void ProtoOASymbol::set_gsldistance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gsldistance(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.gslDistance)
}

// optional int64 gslCharge = 19;
inline bool ProtoOASymbol::_internal_has_gslcharge() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_gslcharge() const {
  return _internal_has_gslcharge();
}
inline void ProtoOASymbol::clear_gslcharge() {
  gslcharge_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_gslcharge() const {
  return gslcharge_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::gslcharge() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.gslCharge)
  return _internal_gslcharge();
}
inline void ProtoOASymbol::_internal_set_gslcharge(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00020000u;
  gslcharge_ = value;
}
inline void ProtoOASymbol::set_gslcharge(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_gslcharge(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.gslCharge)
}

// optional .ProtoOASymbolDistanceType distanceSetIn = 20 [default = SYMBOL_DISTANCE_IN_POINTS];
inline bool ProtoOASymbol::_internal_has_distancesetin() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_distancesetin() const {
  return _internal_has_distancesetin();
}
inline void ProtoOASymbol::clear_distancesetin() {
  distancesetin_ = 1;
  _has_bits_[0] &= ~0x20000000u;
}
inline ::ProtoOASymbolDistanceType ProtoOASymbol::_internal_distancesetin() const {
  return static_cast< ::ProtoOASymbolDistanceType >(distancesetin_);
}
inline ::ProtoOASymbolDistanceType ProtoOASymbol::distancesetin() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.distanceSetIn)
  return _internal_distancesetin();
}
inline void ProtoOASymbol::_internal_set_distancesetin(::ProtoOASymbolDistanceType value) {
  assert(::ProtoOASymbolDistanceType_IsValid(value));
  _has_bits_[0] |= 0x20000000u;
  distancesetin_ = value;
}
inline void ProtoOASymbol::set_distancesetin(::ProtoOASymbolDistanceType value) {
  _internal_set_distancesetin(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.distanceSetIn)
}

// optional int64 minCommission = 21 [deprecated = true];
inline bool ProtoOASymbol::_internal_has_mincommission() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_mincommission() const {
  return _internal_has_mincommission();
}
inline void ProtoOASymbol::clear_mincommission() {
  mincommission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_mincommission() const {
  return mincommission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::mincommission() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.minCommission)
  return _internal_mincommission();
}
inline void ProtoOASymbol::_internal_set_mincommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00040000u;
  mincommission_ = value;
}
inline void ProtoOASymbol::set_mincommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_mincommission(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.minCommission)
}

// optional .ProtoOAMinCommissionType minCommissionType = 22 [default = CURRENCY];
inline bool ProtoOASymbol::_internal_has_mincommissiontype() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_mincommissiontype() const {
  return _internal_has_mincommissiontype();
}
inline void ProtoOASymbol::clear_mincommissiontype() {
  mincommissiontype_ = 1;
  _has_bits_[0] &= ~0x40000000u;
}
inline ::ProtoOAMinCommissionType ProtoOASymbol::_internal_mincommissiontype() const {
  return static_cast< ::ProtoOAMinCommissionType >(mincommissiontype_);
}
inline ::ProtoOAMinCommissionType ProtoOASymbol::mincommissiontype() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.minCommissionType)
  return _internal_mincommissiontype();
}
inline void ProtoOASymbol::_internal_set_mincommissiontype(::ProtoOAMinCommissionType value) {
  assert(::ProtoOAMinCommissionType_IsValid(value));
  _has_bits_[0] |= 0x40000000u;
  mincommissiontype_ = value;
}
inline void ProtoOASymbol::set_mincommissiontype(::ProtoOAMinCommissionType value) {
  _internal_set_mincommissiontype(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.minCommissionType)
}

// optional string minCommissionAsset = 23 [default = "USD"];
inline bool ProtoOASymbol::_internal_has_mincommissionasset() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_mincommissionasset() const {
  return _internal_has_mincommissionasset();
}
inline void ProtoOASymbol::clear_mincommissionasset() {
  mincommissionasset_.ClearToDefault(::ProtoOASymbol::_i_give_permission_to_break_this_code_default_mincommissionasset_, GetArena());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOASymbol::mincommissionasset() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.minCommissionAsset)
  if (mincommissionasset_.IsDefault(nullptr)) return _i_give_permission_to_break_this_code_default_mincommissionasset_.get();
  return _internal_mincommissionasset();
}
inline void ProtoOASymbol::set_mincommissionasset(const std::string& value) {
  _internal_set_mincommissionasset(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.minCommissionAsset)
}
inline std::string* ProtoOASymbol::mutable_mincommissionasset() {
  // @@protoc_insertion_point(field_mutable:ProtoOASymbol.minCommissionAsset)
  return _internal_mutable_mincommissionasset();
}
inline const std::string& ProtoOASymbol::_internal_mincommissionasset() const {
  return mincommissionasset_.Get();
}
inline void ProtoOASymbol::_internal_set_mincommissionasset(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  mincommissionasset_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, value, GetArena());
}
inline void ProtoOASymbol::set_mincommissionasset(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  mincommissionasset_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOASymbol.minCommissionAsset)
}
inline void ProtoOASymbol::set_mincommissionasset(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  mincommissionasset_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOASymbol.minCommissionAsset)
}
inline void ProtoOASymbol::set_mincommissionasset(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  mincommissionasset_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::NonEmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOASymbol.minCommissionAsset)
}
inline std::string* ProtoOASymbol::_internal_mutable_mincommissionasset() {
  _has_bits_[0] |= 0x00000001u;
  return mincommissionasset_.Mutable(::ProtoOASymbol::_i_give_permission_to_break_this_code_default_mincommissionasset_, GetArena());
}
inline std::string* ProtoOASymbol::release_mincommissionasset() {
  // @@protoc_insertion_point(field_release:ProtoOASymbol.minCommissionAsset)
  if (!_internal_has_mincommissionasset()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return mincommissionasset_.ReleaseNonDefault(nullptr, GetArena());
}
inline void ProtoOASymbol::set_allocated_mincommissionasset(std::string* mincommissionasset) {
  if (mincommissionasset != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mincommissionasset_.SetAllocated(nullptr, mincommissionasset,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOASymbol.minCommissionAsset)
}

// optional int64 rolloverCommission = 24;
inline bool ProtoOASymbol::_internal_has_rollovercommission() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_rollovercommission() const {
  return _internal_has_rollovercommission();
}
inline void ProtoOASymbol::clear_rollovercommission() {
  rollovercommission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_rollovercommission() const {
  return rollovercommission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::rollovercommission() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.rolloverCommission)
  return _internal_rollovercommission();
}
inline void ProtoOASymbol::_internal_set_rollovercommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00080000u;
  rollovercommission_ = value;
}
inline void ProtoOASymbol::set_rollovercommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_rollovercommission(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.rolloverCommission)
}

// optional int32 skipRolloverDays = 25;
inline bool ProtoOASymbol::_internal_has_skiprolloverdays() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_skiprolloverdays() const {
  return _internal_has_skiprolloverdays();
}
inline void ProtoOASymbol::clear_skiprolloverdays() {
  skiprolloverdays_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::_internal_skiprolloverdays() const {
  return skiprolloverdays_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOASymbol::skiprolloverdays() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.skipRolloverDays)
  return _internal_skiprolloverdays();
}
inline void ProtoOASymbol::_internal_set_skiprolloverdays(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  skiprolloverdays_ = value;
}
inline void ProtoOASymbol::set_skiprolloverdays(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_skiprolloverdays(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.skipRolloverDays)
}

// optional string scheduleTimeZone = 26;
inline bool ProtoOASymbol::_internal_has_scheduletimezone() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_scheduletimezone() const {
  return _internal_has_scheduletimezone();
}
inline void ProtoOASymbol::clear_scheduletimezone() {
  scheduletimezone_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOASymbol::scheduletimezone() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.scheduleTimeZone)
  return _internal_scheduletimezone();
}
inline void ProtoOASymbol::set_scheduletimezone(const std::string& value) {
  _internal_set_scheduletimezone(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.scheduleTimeZone)
}
inline std::string* ProtoOASymbol::mutable_scheduletimezone() {
  // @@protoc_insertion_point(field_mutable:ProtoOASymbol.scheduleTimeZone)
  return _internal_mutable_scheduletimezone();
}
inline const std::string& ProtoOASymbol::_internal_scheduletimezone() const {
  return scheduletimezone_.Get();
}
inline void ProtoOASymbol::_internal_set_scheduletimezone(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOASymbol::set_scheduletimezone(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  scheduletimezone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOASymbol.scheduleTimeZone)
}
inline void ProtoOASymbol::set_scheduletimezone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOASymbol.scheduleTimeZone)
}
inline void ProtoOASymbol::set_scheduletimezone(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOASymbol.scheduleTimeZone)
}
inline std::string* ProtoOASymbol::_internal_mutable_scheduletimezone() {
  _has_bits_[0] |= 0x00000002u;
  return scheduletimezone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOASymbol::release_scheduletimezone() {
  // @@protoc_insertion_point(field_release:ProtoOASymbol.scheduleTimeZone)
  if (!_internal_has_scheduletimezone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return scheduletimezone_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOASymbol::set_allocated_scheduletimezone(std::string* scheduletimezone) {
  if (scheduletimezone != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  scheduletimezone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), scheduletimezone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOASymbol.scheduleTimeZone)
}

// optional .ProtoOATradingMode tradingMode = 27 [default = ENABLED];
inline bool ProtoOASymbol::_internal_has_tradingmode() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_tradingmode() const {
  return _internal_has_tradingmode();
}
inline void ProtoOASymbol::clear_tradingmode() {
  tradingmode_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::ProtoOATradingMode ProtoOASymbol::_internal_tradingmode() const {
  return static_cast< ::ProtoOATradingMode >(tradingmode_);
}
inline ::ProtoOATradingMode ProtoOASymbol::tradingmode() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.tradingMode)
  return _internal_tradingmode();
}
inline void ProtoOASymbol::_internal_set_tradingmode(::ProtoOATradingMode value) {
  assert(::ProtoOATradingMode_IsValid(value));
  _has_bits_[0] |= 0x00200000u;
  tradingmode_ = value;
}
inline void ProtoOASymbol::set_tradingmode(::ProtoOATradingMode value) {
  _internal_set_tradingmode(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.tradingMode)
}

// optional .ProtoOADayOfWeek rolloverCommission3Days = 28 [default = MONDAY];
inline bool ProtoOASymbol::_internal_has_rollovercommission3days() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_rollovercommission3days() const {
  return _internal_has_rollovercommission3days();
}
inline void ProtoOASymbol::clear_rollovercommission3days() {
  rollovercommission3days_ = 1;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::ProtoOADayOfWeek ProtoOASymbol::_internal_rollovercommission3days() const {
  return static_cast< ::ProtoOADayOfWeek >(rollovercommission3days_);
}
inline ::ProtoOADayOfWeek ProtoOASymbol::rollovercommission3days() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.rolloverCommission3Days)
  return _internal_rollovercommission3days();
}
inline void ProtoOASymbol::_internal_set_rollovercommission3days(::ProtoOADayOfWeek value) {
  assert(::ProtoOADayOfWeek_IsValid(value));
  _has_bits_[0] |= 0x04000000u;
  rollovercommission3days_ = value;
}
inline void ProtoOASymbol::set_rollovercommission3days(::ProtoOADayOfWeek value) {
  _internal_set_rollovercommission3days(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.rolloverCommission3Days)
}

// optional .ProtoOASwapCalculationType swapCalculationType = 29 [default = PIPS];
inline bool ProtoOASymbol::_internal_has_swapcalculationtype() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_swapcalculationtype() const {
  return _internal_has_swapcalculationtype();
}
inline void ProtoOASymbol::clear_swapcalculationtype() {
  swapcalculationtype_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::ProtoOASwapCalculationType ProtoOASymbol::_internal_swapcalculationtype() const {
  return static_cast< ::ProtoOASwapCalculationType >(swapcalculationtype_);
}
inline ::ProtoOASwapCalculationType ProtoOASymbol::swapcalculationtype() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.swapCalculationType)
  return _internal_swapcalculationtype();
}
inline void ProtoOASymbol::_internal_set_swapcalculationtype(::ProtoOASwapCalculationType value) {
  assert(::ProtoOASwapCalculationType_IsValid(value));
  _has_bits_[0] |= 0x02000000u;
  swapcalculationtype_ = value;
}
inline void ProtoOASymbol::set_swapcalculationtype(::ProtoOASwapCalculationType value) {
  _internal_set_swapcalculationtype(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.swapCalculationType)
}

// optional int64 lotSize = 30;
inline bool ProtoOASymbol::_internal_has_lotsize() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_lotsize() const {
  return _internal_has_lotsize();
}
inline void ProtoOASymbol::clear_lotsize() {
  lotsize_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_lotsize() const {
  return lotsize_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::lotsize() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.lotSize)
  return _internal_lotsize();
}
inline void ProtoOASymbol::_internal_set_lotsize(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00400000u;
  lotsize_ = value;
}
inline void ProtoOASymbol::set_lotsize(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_lotsize(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.lotSize)
}

// optional int64 preciseTradingCommissionRate = 31;
inline bool ProtoOASymbol::_internal_has_precisetradingcommissionrate() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_precisetradingcommissionrate() const {
  return _internal_has_precisetradingcommissionrate();
}
inline void ProtoOASymbol::clear_precisetradingcommissionrate() {
  precisetradingcommissionrate_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00800000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_precisetradingcommissionrate() const {
  return precisetradingcommissionrate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::precisetradingcommissionrate() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.preciseTradingCommissionRate)
  return _internal_precisetradingcommissionrate();
}
inline void ProtoOASymbol::_internal_set_precisetradingcommissionrate(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00800000u;
  precisetradingcommissionrate_ = value;
}
inline void ProtoOASymbol::set_precisetradingcommissionrate(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_precisetradingcommissionrate(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.preciseTradingCommissionRate)
}

// optional int64 preciseMinCommission = 32;
inline bool ProtoOASymbol::_internal_has_precisemincommission() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool ProtoOASymbol::has_precisemincommission() const {
  return _internal_has_precisemincommission();
}
inline void ProtoOASymbol::clear_precisemincommission() {
  precisemincommission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::_internal_precisemincommission() const {
  return precisemincommission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbol::precisemincommission() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.preciseMinCommission)
  return _internal_precisemincommission();
}
inline void ProtoOASymbol::_internal_set_precisemincommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x01000000u;
  precisemincommission_ = value;
}
inline void ProtoOASymbol::set_precisemincommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_precisemincommission(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbol.preciseMinCommission)
}

// repeated .ProtoOAHoliday holiday = 33;
inline int ProtoOASymbol::_internal_holiday_size() const {
  return holiday_.size();
}
inline int ProtoOASymbol::holiday_size() const {
  return _internal_holiday_size();
}
inline void ProtoOASymbol::clear_holiday() {
  holiday_.Clear();
}
inline ::ProtoOAHoliday* ProtoOASymbol::mutable_holiday(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoOASymbol.holiday)
  return holiday_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAHoliday >*
ProtoOASymbol::mutable_holiday() {
  // @@protoc_insertion_point(field_mutable_list:ProtoOASymbol.holiday)
  return &holiday_;
}
inline const ::ProtoOAHoliday& ProtoOASymbol::_internal_holiday(int index) const {
  return holiday_.Get(index);
}
inline const ::ProtoOAHoliday& ProtoOASymbol::holiday(int index) const {
  // @@protoc_insertion_point(field_get:ProtoOASymbol.holiday)
  return _internal_holiday(index);
}
inline ::ProtoOAHoliday* ProtoOASymbol::_internal_add_holiday() {
  return holiday_.Add();
}
inline ::ProtoOAHoliday* ProtoOASymbol::add_holiday() {
  // @@protoc_insertion_point(field_add:ProtoOASymbol.holiday)
  return _internal_add_holiday();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoOAHoliday >&
ProtoOASymbol::holiday() const {
  // @@protoc_insertion_point(field_list:ProtoOASymbol.holiday)
  return holiday_;
}

// -------------------------------------------------------------------

// ProtoOALightSymbol

// required int64 symbolId = 1;
inline bool ProtoOALightSymbol::_internal_has_symbolid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_symbolid() const {
  return _internal_has_symbolid();
}
inline void ProtoOALightSymbol::clear_symbolid() {
  symbolid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::_internal_symbolid() const {
  return symbolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::symbolid() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.symbolId)
  return _internal_symbolid();
}
inline void ProtoOALightSymbol::_internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  symbolid_ = value;
}
inline void ProtoOALightSymbol::set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolid(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.symbolId)
}

// optional string symbolName = 2;
inline bool ProtoOALightSymbol::_internal_has_symbolname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_symbolname() const {
  return _internal_has_symbolname();
}
inline void ProtoOALightSymbol::clear_symbolname() {
  symbolname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOALightSymbol::symbolname() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.symbolName)
  return _internal_symbolname();
}
inline void ProtoOALightSymbol::set_symbolname(const std::string& value) {
  _internal_set_symbolname(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.symbolName)
}
inline std::string* ProtoOALightSymbol::mutable_symbolname() {
  // @@protoc_insertion_point(field_mutable:ProtoOALightSymbol.symbolName)
  return _internal_mutable_symbolname();
}
inline const std::string& ProtoOALightSymbol::_internal_symbolname() const {
  return symbolname_.Get();
}
inline void ProtoOALightSymbol::_internal_set_symbolname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  symbolname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOALightSymbol::set_symbolname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  symbolname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOALightSymbol.symbolName)
}
inline void ProtoOALightSymbol::set_symbolname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  symbolname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOALightSymbol.symbolName)
}
inline void ProtoOALightSymbol::set_symbolname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  symbolname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOALightSymbol.symbolName)
}
inline std::string* ProtoOALightSymbol::_internal_mutable_symbolname() {
  _has_bits_[0] |= 0x00000001u;
  return symbolname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOALightSymbol::release_symbolname() {
  // @@protoc_insertion_point(field_release:ProtoOALightSymbol.symbolName)
  if (!_internal_has_symbolname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return symbolname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOALightSymbol::set_allocated_symbolname(std::string* symbolname) {
  if (symbolname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  symbolname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), symbolname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOALightSymbol.symbolName)
}

// optional bool enabled = 3;
inline bool ProtoOALightSymbol::_internal_has_enabled() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_enabled() const {
  return _internal_has_enabled();
}
inline void ProtoOALightSymbol::clear_enabled() {
  enabled_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool ProtoOALightSymbol::_internal_enabled() const {
  return enabled_;
}
inline bool ProtoOALightSymbol::enabled() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.enabled)
  return _internal_enabled();
}
inline void ProtoOALightSymbol::_internal_set_enabled(bool value) {
  _has_bits_[0] |= 0x00000040u;
  enabled_ = value;
}
inline void ProtoOALightSymbol::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.enabled)
}

// optional int64 baseAssetId = 4;
inline bool ProtoOALightSymbol::_internal_has_baseassetid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_baseassetid() const {
  return _internal_has_baseassetid();
}
inline void ProtoOALightSymbol::clear_baseassetid() {
  baseassetid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::_internal_baseassetid() const {
  return baseassetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::baseassetid() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.baseAssetId)
  return _internal_baseassetid();
}
inline void ProtoOALightSymbol::_internal_set_baseassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  baseassetid_ = value;
}
inline void ProtoOALightSymbol::set_baseassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_baseassetid(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.baseAssetId)
}

// optional int64 quoteAssetId = 5;
inline bool ProtoOALightSymbol::_internal_has_quoteassetid() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_quoteassetid() const {
  return _internal_has_quoteassetid();
}
inline void ProtoOALightSymbol::clear_quoteassetid() {
  quoteassetid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::_internal_quoteassetid() const {
  return quoteassetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::quoteassetid() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.quoteAssetId)
  return _internal_quoteassetid();
}
inline void ProtoOALightSymbol::_internal_set_quoteassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  quoteassetid_ = value;
}
inline void ProtoOALightSymbol::set_quoteassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_quoteassetid(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.quoteAssetId)
}

// optional int64 symbolCategoryId = 6;
inline bool ProtoOALightSymbol::_internal_has_symbolcategoryid() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_symbolcategoryid() const {
  return _internal_has_symbolcategoryid();
}
inline void ProtoOALightSymbol::clear_symbolcategoryid() {
  symbolcategoryid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::_internal_symbolcategoryid() const {
  return symbolcategoryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOALightSymbol::symbolcategoryid() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.symbolCategoryId)
  return _internal_symbolcategoryid();
}
inline void ProtoOALightSymbol::_internal_set_symbolcategoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  symbolcategoryid_ = value;
}
inline void ProtoOALightSymbol::set_symbolcategoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolcategoryid(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.symbolCategoryId)
}

// optional string description = 7;
inline bool ProtoOALightSymbol::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOALightSymbol::has_description() const {
  return _internal_has_description();
}
inline void ProtoOALightSymbol::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOALightSymbol::description() const {
  // @@protoc_insertion_point(field_get:ProtoOALightSymbol.description)
  return _internal_description();
}
inline void ProtoOALightSymbol::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:ProtoOALightSymbol.description)
}
inline std::string* ProtoOALightSymbol::mutable_description() {
  // @@protoc_insertion_point(field_mutable:ProtoOALightSymbol.description)
  return _internal_mutable_description();
}
inline const std::string& ProtoOALightSymbol::_internal_description() const {
  return description_.Get();
}
inline void ProtoOALightSymbol::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOALightSymbol::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOALightSymbol.description)
}
inline void ProtoOALightSymbol::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOALightSymbol.description)
}
inline void ProtoOALightSymbol::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOALightSymbol.description)
}
inline std::string* ProtoOALightSymbol::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOALightSymbol::release_description() {
  // @@protoc_insertion_point(field_release:ProtoOALightSymbol.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOALightSymbol::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOALightSymbol.description)
}

// -------------------------------------------------------------------

// ProtoOAArchivedSymbol

// required int64 symbolId = 1;
inline bool ProtoOAArchivedSymbol::_internal_has_symbolid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAArchivedSymbol::has_symbolid() const {
  return _internal_has_symbolid();
}
inline void ProtoOAArchivedSymbol::clear_symbolid() {
  symbolid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAArchivedSymbol::_internal_symbolid() const {
  return symbolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAArchivedSymbol::symbolid() const {
  // @@protoc_insertion_point(field_get:ProtoOAArchivedSymbol.symbolId)
  return _internal_symbolid();
}
inline void ProtoOAArchivedSymbol::_internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  symbolid_ = value;
}
inline void ProtoOAArchivedSymbol::set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolid(value);
  // @@protoc_insertion_point(field_set:ProtoOAArchivedSymbol.symbolId)
}

// required string name = 2;
inline bool ProtoOAArchivedSymbol::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAArchivedSymbol::has_name() const {
  return _internal_has_name();
}
inline void ProtoOAArchivedSymbol::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOAArchivedSymbol::name() const {
  // @@protoc_insertion_point(field_get:ProtoOAArchivedSymbol.name)
  return _internal_name();
}
inline void ProtoOAArchivedSymbol::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoOAArchivedSymbol.name)
}
inline std::string* ProtoOAArchivedSymbol::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoOAArchivedSymbol.name)
  return _internal_mutable_name();
}
inline const std::string& ProtoOAArchivedSymbol::_internal_name() const {
  return name_.Get();
}
inline void ProtoOAArchivedSymbol::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAArchivedSymbol::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAArchivedSymbol.name)
}
inline void ProtoOAArchivedSymbol::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAArchivedSymbol.name)
}
inline void ProtoOAArchivedSymbol::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAArchivedSymbol.name)
}
inline std::string* ProtoOAArchivedSymbol::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAArchivedSymbol::release_name() {
  // @@protoc_insertion_point(field_release:ProtoOAArchivedSymbol.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAArchivedSymbol::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAArchivedSymbol.name)
}

// required int64 utcLastUpdateTimestamp = 3;
inline bool ProtoOAArchivedSymbol::_internal_has_utclastupdatetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAArchivedSymbol::has_utclastupdatetimestamp() const {
  return _internal_has_utclastupdatetimestamp();
}
inline void ProtoOAArchivedSymbol::clear_utclastupdatetimestamp() {
  utclastupdatetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAArchivedSymbol::_internal_utclastupdatetimestamp() const {
  return utclastupdatetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAArchivedSymbol::utclastupdatetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOAArchivedSymbol.utcLastUpdateTimestamp)
  return _internal_utclastupdatetimestamp();
}
inline void ProtoOAArchivedSymbol::_internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  utclastupdatetimestamp_ = value;
}
inline void ProtoOAArchivedSymbol::set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_utclastupdatetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOAArchivedSymbol.utcLastUpdateTimestamp)
}

// optional string description = 4;
inline bool ProtoOAArchivedSymbol::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAArchivedSymbol::has_description() const {
  return _internal_has_description();
}
inline void ProtoOAArchivedSymbol::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOAArchivedSymbol::description() const {
  // @@protoc_insertion_point(field_get:ProtoOAArchivedSymbol.description)
  return _internal_description();
}
inline void ProtoOAArchivedSymbol::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:ProtoOAArchivedSymbol.description)
}
inline std::string* ProtoOAArchivedSymbol::mutable_description() {
  // @@protoc_insertion_point(field_mutable:ProtoOAArchivedSymbol.description)
  return _internal_mutable_description();
}
inline const std::string& ProtoOAArchivedSymbol::_internal_description() const {
  return description_.Get();
}
inline void ProtoOAArchivedSymbol::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAArchivedSymbol::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAArchivedSymbol.description)
}
inline void ProtoOAArchivedSymbol::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAArchivedSymbol.description)
}
inline void ProtoOAArchivedSymbol::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAArchivedSymbol.description)
}
inline std::string* ProtoOAArchivedSymbol::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAArchivedSymbol::release_description() {
  // @@protoc_insertion_point(field_release:ProtoOAArchivedSymbol.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAArchivedSymbol::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAArchivedSymbol.description)
}

// -------------------------------------------------------------------

// ProtoOASymbolCategory

// required int64 id = 1;
inline bool ProtoOASymbolCategory::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOASymbolCategory::has_id() const {
  return _internal_has_id();
}
inline void ProtoOASymbolCategory::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbolCategory::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbolCategory::id() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbolCategory.id)
  return _internal_id();
}
inline void ProtoOASymbolCategory::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void ProtoOASymbolCategory::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbolCategory.id)
}

// required int64 assetClassId = 2;
inline bool ProtoOASymbolCategory::_internal_has_assetclassid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOASymbolCategory::has_assetclassid() const {
  return _internal_has_assetclassid();
}
inline void ProtoOASymbolCategory::clear_assetclassid() {
  assetclassid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbolCategory::_internal_assetclassid() const {
  return assetclassid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOASymbolCategory::assetclassid() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbolCategory.assetClassId)
  return _internal_assetclassid();
}
inline void ProtoOASymbolCategory::_internal_set_assetclassid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  assetclassid_ = value;
}
inline void ProtoOASymbolCategory::set_assetclassid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_assetclassid(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbolCategory.assetClassId)
}

// required string name = 3;
inline bool ProtoOASymbolCategory::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOASymbolCategory::has_name() const {
  return _internal_has_name();
}
inline void ProtoOASymbolCategory::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOASymbolCategory::name() const {
  // @@protoc_insertion_point(field_get:ProtoOASymbolCategory.name)
  return _internal_name();
}
inline void ProtoOASymbolCategory::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoOASymbolCategory.name)
}
inline std::string* ProtoOASymbolCategory::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoOASymbolCategory.name)
  return _internal_mutable_name();
}
inline const std::string& ProtoOASymbolCategory::_internal_name() const {
  return name_.Get();
}
inline void ProtoOASymbolCategory::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOASymbolCategory::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOASymbolCategory.name)
}
inline void ProtoOASymbolCategory::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOASymbolCategory.name)
}
inline void ProtoOASymbolCategory::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOASymbolCategory.name)
}
inline std::string* ProtoOASymbolCategory::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOASymbolCategory::release_name() {
  // @@protoc_insertion_point(field_release:ProtoOASymbolCategory.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOASymbolCategory::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOASymbolCategory.name)
}

// -------------------------------------------------------------------

// ProtoOAInterval

// required uint32 startSecond = 3;
inline bool ProtoOAInterval::_internal_has_startsecond() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAInterval::has_startsecond() const {
  return _internal_has_startsecond();
}
inline void ProtoOAInterval::clear_startsecond() {
  startsecond_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAInterval::_internal_startsecond() const {
  return startsecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAInterval::startsecond() const {
  // @@protoc_insertion_point(field_get:ProtoOAInterval.startSecond)
  return _internal_startsecond();
}
inline void ProtoOAInterval::_internal_set_startsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  startsecond_ = value;
}
inline void ProtoOAInterval::set_startsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_startsecond(value);
  // @@protoc_insertion_point(field_set:ProtoOAInterval.startSecond)
}

// required uint32 endSecond = 4;
inline bool ProtoOAInterval::_internal_has_endsecond() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAInterval::has_endsecond() const {
  return _internal_has_endsecond();
}
inline void ProtoOAInterval::clear_endsecond() {
  endsecond_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAInterval::_internal_endsecond() const {
  return endsecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAInterval::endsecond() const {
  // @@protoc_insertion_point(field_get:ProtoOAInterval.endSecond)
  return _internal_endsecond();
}
inline void ProtoOAInterval::_internal_set_endsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  endsecond_ = value;
}
inline void ProtoOAInterval::set_endsecond(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_endsecond(value);
  // @@protoc_insertion_point(field_set:ProtoOAInterval.endSecond)
}

// -------------------------------------------------------------------

// ProtoOATrader

// required int64 ctidTraderAccountId = 1;
inline bool ProtoOATrader::_internal_has_ctidtraderaccountid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOATrader::has_ctidtraderaccountid() const {
  return _internal_has_ctidtraderaccountid();
}
inline void ProtoOATrader::clear_ctidtraderaccountid() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_ctidtraderaccountid() const {
  return ctidtraderaccountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::ctidtraderaccountid() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.ctidTraderAccountId)
  return _internal_ctidtraderaccountid();
}
inline void ProtoOATrader::_internal_set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  ctidtraderaccountid_ = value;
}
inline void ProtoOATrader::set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ctidtraderaccountid(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.ctidTraderAccountId)
}

// required int64 balance = 2;
inline bool ProtoOATrader::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOATrader::has_balance() const {
  return _internal_has_balance();
}
inline void ProtoOATrader::clear_balance() {
  balance_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::balance() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.balance)
  return _internal_balance();
}
inline void ProtoOATrader::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  balance_ = value;
}
inline void ProtoOATrader::set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.balance)
}

// optional int64 balanceVersion = 3;
inline bool ProtoOATrader::_internal_has_balanceversion() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOATrader::has_balanceversion() const {
  return _internal_has_balanceversion();
}
inline void ProtoOATrader::clear_balanceversion() {
  balanceversion_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_balanceversion() const {
  return balanceversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::balanceversion() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.balanceVersion)
  return _internal_balanceversion();
}
inline void ProtoOATrader::_internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  balanceversion_ = value;
}
inline void ProtoOATrader::set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balanceversion(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.balanceVersion)
}

// optional int64 managerBonus = 4;
inline bool ProtoOATrader::_internal_has_managerbonus() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOATrader::has_managerbonus() const {
  return _internal_has_managerbonus();
}
inline void ProtoOATrader::clear_managerbonus() {
  managerbonus_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_managerbonus() const {
  return managerbonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::managerbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.managerBonus)
  return _internal_managerbonus();
}
inline void ProtoOATrader::_internal_set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  managerbonus_ = value;
}
inline void ProtoOATrader::set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_managerbonus(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.managerBonus)
}

// optional int64 ibBonus = 5;
inline bool ProtoOATrader::_internal_has_ibbonus() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOATrader::has_ibbonus() const {
  return _internal_has_ibbonus();
}
inline void ProtoOATrader::clear_ibbonus() {
  ibbonus_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_ibbonus() const {
  return ibbonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::ibbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.ibBonus)
  return _internal_ibbonus();
}
inline void ProtoOATrader::_internal_set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  ibbonus_ = value;
}
inline void ProtoOATrader::set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ibbonus(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.ibBonus)
}

// optional int64 nonWithdrawableBonus = 6;
inline bool ProtoOATrader::_internal_has_nonwithdrawablebonus() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOATrader::has_nonwithdrawablebonus() const {
  return _internal_has_nonwithdrawablebonus();
}
inline void ProtoOATrader::clear_nonwithdrawablebonus() {
  nonwithdrawablebonus_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_nonwithdrawablebonus() const {
  return nonwithdrawablebonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::nonwithdrawablebonus() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.nonWithdrawableBonus)
  return _internal_nonwithdrawablebonus();
}
inline void ProtoOATrader::_internal_set_nonwithdrawablebonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  nonwithdrawablebonus_ = value;
}
inline void ProtoOATrader::set_nonwithdrawablebonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_nonwithdrawablebonus(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.nonWithdrawableBonus)
}

// optional .ProtoOAAccessRights accessRights = 7 [default = FULL_ACCESS];
inline bool ProtoOATrader::_internal_has_accessrights() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOATrader::has_accessrights() const {
  return _internal_has_accessrights();
}
inline void ProtoOATrader::clear_accessrights() {
  accessrights_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::ProtoOAAccessRights ProtoOATrader::_internal_accessrights() const {
  return static_cast< ::ProtoOAAccessRights >(accessrights_);
}
inline ::ProtoOAAccessRights ProtoOATrader::accessrights() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.accessRights)
  return _internal_accessrights();
}
inline void ProtoOATrader::_internal_set_accessrights(::ProtoOAAccessRights value) {
  assert(::ProtoOAAccessRights_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  accessrights_ = value;
}
inline void ProtoOATrader::set_accessrights(::ProtoOAAccessRights value) {
  _internal_set_accessrights(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.accessRights)
}

// required int64 depositAssetId = 8;
inline bool ProtoOATrader::_internal_has_depositassetid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOATrader::has_depositassetid() const {
  return _internal_has_depositassetid();
}
inline void ProtoOATrader::clear_depositassetid() {
  depositassetid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_depositassetid() const {
  return depositassetid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::depositassetid() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.depositAssetId)
  return _internal_depositassetid();
}
inline void ProtoOATrader::_internal_set_depositassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  depositassetid_ = value;
}
inline void ProtoOATrader::set_depositassetid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_depositassetid(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.depositAssetId)
}

// optional bool swapFree = 9;
inline bool ProtoOATrader::_internal_has_swapfree() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_swapfree() const {
  return _internal_has_swapfree();
}
inline void ProtoOATrader::clear_swapfree() {
  swapfree_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool ProtoOATrader::_internal_swapfree() const {
  return swapfree_;
}
inline bool ProtoOATrader::swapfree() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.swapFree)
  return _internal_swapfree();
}
inline void ProtoOATrader::_internal_set_swapfree(bool value) {
  _has_bits_[0] |= 0x00001000u;
  swapfree_ = value;
}
inline void ProtoOATrader::set_swapfree(bool value) {
  _internal_set_swapfree(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.swapFree)
}

// optional uint32 leverageInCents = 10;
inline bool ProtoOATrader::_internal_has_leverageincents() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOATrader::has_leverageincents() const {
  return _internal_has_leverageincents();
}
inline void ProtoOATrader::clear_leverageincents() {
  leverageincents_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::_internal_leverageincents() const {
  return leverageincents_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::leverageincents() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.leverageInCents)
  return _internal_leverageincents();
}
inline void ProtoOATrader::_internal_set_leverageincents(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  leverageincents_ = value;
}
inline void ProtoOATrader::set_leverageincents(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_leverageincents(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.leverageInCents)
}

// optional .ProtoOATotalMarginCalculationType totalMarginCalculationType = 11;
inline bool ProtoOATrader::_internal_has_totalmargincalculationtype() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoOATrader::has_totalmargincalculationtype() const {
  return _internal_has_totalmargincalculationtype();
}
inline void ProtoOATrader::clear_totalmargincalculationtype() {
  totalmargincalculationtype_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::ProtoOATotalMarginCalculationType ProtoOATrader::_internal_totalmargincalculationtype() const {
  return static_cast< ::ProtoOATotalMarginCalculationType >(totalmargincalculationtype_);
}
inline ::ProtoOATotalMarginCalculationType ProtoOATrader::totalmargincalculationtype() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.totalMarginCalculationType)
  return _internal_totalmargincalculationtype();
}
inline void ProtoOATrader::_internal_set_totalmargincalculationtype(::ProtoOATotalMarginCalculationType value) {
  assert(::ProtoOATotalMarginCalculationType_IsValid(value));
  _has_bits_[0] |= 0x00000400u;
  totalmargincalculationtype_ = value;
}
inline void ProtoOATrader::set_totalmargincalculationtype(::ProtoOATotalMarginCalculationType value) {
  _internal_set_totalmargincalculationtype(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.totalMarginCalculationType)
}

// optional uint32 maxLeverage = 12;
inline bool ProtoOATrader::_internal_has_maxleverage() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoOATrader::has_maxleverage() const {
  return _internal_has_maxleverage();
}
inline void ProtoOATrader::clear_maxleverage() {
  maxleverage_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::_internal_maxleverage() const {
  return maxleverage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::maxleverage() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.maxLeverage)
  return _internal_maxleverage();
}
inline void ProtoOATrader::_internal_set_maxleverage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  maxleverage_ = value;
}
inline void ProtoOATrader::set_maxleverage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxleverage(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.maxLeverage)
}

// optional bool frenchRisk = 13 [deprecated = true];
inline bool ProtoOATrader::_internal_has_frenchrisk() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_frenchrisk() const {
  return _internal_has_frenchrisk();
}
inline void ProtoOATrader::clear_frenchrisk() {
  frenchrisk_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool ProtoOATrader::_internal_frenchrisk() const {
  return frenchrisk_;
}
inline bool ProtoOATrader::frenchrisk() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.frenchRisk)
  return _internal_frenchrisk();
}
inline void ProtoOATrader::_internal_set_frenchrisk(bool value) {
  _has_bits_[0] |= 0x00002000u;
  frenchrisk_ = value;
}
inline void ProtoOATrader::set_frenchrisk(bool value) {
  _internal_set_frenchrisk(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.frenchRisk)
}

// optional int64 traderLogin = 14;
inline bool ProtoOATrader::_internal_has_traderlogin() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_traderlogin() const {
  return _internal_has_traderlogin();
}
inline void ProtoOATrader::clear_traderlogin() {
  traderlogin_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_traderlogin() const {
  return traderlogin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::traderlogin() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.traderLogin)
  return _internal_traderlogin();
}
inline void ProtoOATrader::_internal_set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00010000u;
  traderlogin_ = value;
}
inline void ProtoOATrader::set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_traderlogin(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.traderLogin)
}

// optional .ProtoOAAccountType accountType = 15 [default = HEDGED];
inline bool ProtoOATrader::_internal_has_accounttype() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_accounttype() const {
  return _internal_has_accounttype();
}
inline void ProtoOATrader::clear_accounttype() {
  accounttype_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::ProtoOAAccountType ProtoOATrader::_internal_accounttype() const {
  return static_cast< ::ProtoOAAccountType >(accounttype_);
}
inline ::ProtoOAAccountType ProtoOATrader::accounttype() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.accountType)
  return _internal_accounttype();
}
inline void ProtoOATrader::_internal_set_accounttype(::ProtoOAAccountType value) {
  assert(::ProtoOAAccountType_IsValid(value));
  _has_bits_[0] |= 0x00008000u;
  accounttype_ = value;
}
inline void ProtoOATrader::set_accounttype(::ProtoOAAccountType value) {
  _internal_set_accounttype(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.accountType)
}

// optional string brokerName = 16;
inline bool ProtoOATrader::_internal_has_brokername() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOATrader::has_brokername() const {
  return _internal_has_brokername();
}
inline void ProtoOATrader::clear_brokername() {
  brokername_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOATrader::brokername() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.brokerName)
  return _internal_brokername();
}
inline void ProtoOATrader::set_brokername(const std::string& value) {
  _internal_set_brokername(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.brokerName)
}
inline std::string* ProtoOATrader::mutable_brokername() {
  // @@protoc_insertion_point(field_mutable:ProtoOATrader.brokerName)
  return _internal_mutable_brokername();
}
inline const std::string& ProtoOATrader::_internal_brokername() const {
  return brokername_.Get();
}
inline void ProtoOATrader::_internal_set_brokername(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  brokername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOATrader::set_brokername(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  brokername_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOATrader.brokerName)
}
inline void ProtoOATrader::set_brokername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  brokername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOATrader.brokerName)
}
inline void ProtoOATrader::set_brokername(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  brokername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOATrader.brokerName)
}
inline std::string* ProtoOATrader::_internal_mutable_brokername() {
  _has_bits_[0] |= 0x00000001u;
  return brokername_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOATrader::release_brokername() {
  // @@protoc_insertion_point(field_release:ProtoOATrader.brokerName)
  if (!_internal_has_brokername()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return brokername_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOATrader::set_allocated_brokername(std::string* brokername) {
  if (brokername != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  brokername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), brokername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOATrader.brokerName)
}

// optional int64 registrationTimestamp = 17;
inline bool ProtoOATrader::_internal_has_registrationtimestamp() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_registrationtimestamp() const {
  return _internal_has_registrationtimestamp();
}
inline void ProtoOATrader::clear_registrationtimestamp() {
  registrationtimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::_internal_registrationtimestamp() const {
  return registrationtimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrader::registrationtimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.registrationTimestamp)
  return _internal_registrationtimestamp();
}
inline void ProtoOATrader::_internal_set_registrationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00020000u;
  registrationtimestamp_ = value;
}
inline void ProtoOATrader::set_registrationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_registrationtimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.registrationTimestamp)
}

// optional bool isLimitedRisk = 18;
inline bool ProtoOATrader::_internal_has_islimitedrisk() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_islimitedrisk() const {
  return _internal_has_islimitedrisk();
}
inline void ProtoOATrader::clear_islimitedrisk() {
  islimitedrisk_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool ProtoOATrader::_internal_islimitedrisk() const {
  return islimitedrisk_;
}
inline bool ProtoOATrader::islimitedrisk() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.isLimitedRisk)
  return _internal_islimitedrisk();
}
inline void ProtoOATrader::_internal_set_islimitedrisk(bool value) {
  _has_bits_[0] |= 0x00004000u;
  islimitedrisk_ = value;
}
inline void ProtoOATrader::set_islimitedrisk(bool value) {
  _internal_set_islimitedrisk(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.isLimitedRisk)
}

// optional .ProtoOALimitedRiskMarginCalculationStrategy limitedRiskMarginCalculationStrategy = 19 [default = ACCORDING_TO_LEVERAGE];
inline bool ProtoOATrader::_internal_has_limitedriskmargincalculationstrategy() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_limitedriskmargincalculationstrategy() const {
  return _internal_has_limitedriskmargincalculationstrategy();
}
inline void ProtoOATrader::clear_limitedriskmargincalculationstrategy() {
  limitedriskmargincalculationstrategy_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::ProtoOALimitedRiskMarginCalculationStrategy ProtoOATrader::_internal_limitedriskmargincalculationstrategy() const {
  return static_cast< ::ProtoOALimitedRiskMarginCalculationStrategy >(limitedriskmargincalculationstrategy_);
}
inline ::ProtoOALimitedRiskMarginCalculationStrategy ProtoOATrader::limitedriskmargincalculationstrategy() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.limitedRiskMarginCalculationStrategy)
  return _internal_limitedriskmargincalculationstrategy();
}
inline void ProtoOATrader::_internal_set_limitedriskmargincalculationstrategy(::ProtoOALimitedRiskMarginCalculationStrategy value) {
  assert(::ProtoOALimitedRiskMarginCalculationStrategy_IsValid(value));
  _has_bits_[0] |= 0x00040000u;
  limitedriskmargincalculationstrategy_ = value;
}
inline void ProtoOATrader::set_limitedriskmargincalculationstrategy(::ProtoOALimitedRiskMarginCalculationStrategy value) {
  _internal_set_limitedriskmargincalculationstrategy(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.limitedRiskMarginCalculationStrategy)
}

// optional uint32 moneyDigits = 20;
inline bool ProtoOATrader::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool ProtoOATrader::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOATrader::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrader::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOATrader.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOATrader::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  moneydigits_ = value;
}
inline void ProtoOATrader::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOATrader.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOAPosition

// required int64 positionId = 1;
inline bool ProtoOAPosition::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_positionid() const {
  return _internal_has_positionid();
}
inline void ProtoOAPosition::clear_positionid() {
  positionid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::positionid() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.positionId)
  return _internal_positionid();
}
inline void ProtoOAPosition::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  positionid_ = value;
}
inline void ProtoOAPosition::set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.positionId)
}

// required .ProtoOATradeData tradeData = 2;
inline bool ProtoOAPosition::_internal_has_tradedata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || tradedata_ != nullptr);
  return value;
}
inline bool ProtoOAPosition::has_tradedata() const {
  return _internal_has_tradedata();
}
inline void ProtoOAPosition::clear_tradedata() {
  if (tradedata_ != nullptr) tradedata_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ProtoOATradeData& ProtoOAPosition::_internal_tradedata() const {
  const ::ProtoOATradeData* p = tradedata_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoOATradeData&>(
      ::_ProtoOATradeData_default_instance_);
}
inline const ::ProtoOATradeData& ProtoOAPosition::tradedata() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.tradeData)
  return _internal_tradedata();
}
inline void ProtoOAPosition::unsafe_arena_set_allocated_tradedata(
    ::ProtoOATradeData* tradedata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tradedata_);
  }
  tradedata_ = tradedata;
  if (tradedata) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoOAPosition.tradeData)
}
inline ::ProtoOATradeData* ProtoOAPosition::release_tradedata() {
  _has_bits_[0] &= ~0x00000001u;
  ::ProtoOATradeData* temp = tradedata_;
  tradedata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProtoOATradeData* ProtoOAPosition::unsafe_arena_release_tradedata() {
  // @@protoc_insertion_point(field_release:ProtoOAPosition.tradeData)
  _has_bits_[0] &= ~0x00000001u;
  ::ProtoOATradeData* temp = tradedata_;
  tradedata_ = nullptr;
  return temp;
}
inline ::ProtoOATradeData* ProtoOAPosition::_internal_mutable_tradedata() {
  _has_bits_[0] |= 0x00000001u;
  if (tradedata_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoOATradeData>(GetArena());
    tradedata_ = p;
  }
  return tradedata_;
}
inline ::ProtoOATradeData* ProtoOAPosition::mutable_tradedata() {
  // @@protoc_insertion_point(field_mutable:ProtoOAPosition.tradeData)
  return _internal_mutable_tradedata();
}
inline void ProtoOAPosition::set_allocated_tradedata(::ProtoOATradeData* tradedata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete tradedata_;
  }
  if (tradedata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tradedata);
    if (message_arena != submessage_arena) {
      tradedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tradedata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tradedata_ = tradedata;
  // @@protoc_insertion_point(field_set_allocated:ProtoOAPosition.tradeData)
}

// required .ProtoOAPositionStatus positionStatus = 3;
inline bool ProtoOAPosition::_internal_has_positionstatus() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_positionstatus() const {
  return _internal_has_positionstatus();
}
inline void ProtoOAPosition::clear_positionstatus() {
  positionstatus_ = 1;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::ProtoOAPositionStatus ProtoOAPosition::_internal_positionstatus() const {
  return static_cast< ::ProtoOAPositionStatus >(positionstatus_);
}
inline ::ProtoOAPositionStatus ProtoOAPosition::positionstatus() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.positionStatus)
  return _internal_positionstatus();
}
inline void ProtoOAPosition::_internal_set_positionstatus(::ProtoOAPositionStatus value) {
  assert(::ProtoOAPositionStatus_IsValid(value));
  _has_bits_[0] |= 0x00002000u;
  positionstatus_ = value;
}
inline void ProtoOAPosition::set_positionstatus(::ProtoOAPositionStatus value) {
  _internal_set_positionstatus(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.positionStatus)
}

// required int64 swap = 4;
inline bool ProtoOAPosition::_internal_has_swap() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_swap() const {
  return _internal_has_swap();
}
inline void ProtoOAPosition::clear_swap() {
  swap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::_internal_swap() const {
  return swap_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::swap() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.swap)
  return _internal_swap();
}
inline void ProtoOAPosition::_internal_set_swap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  swap_ = value;
}
inline void ProtoOAPosition::set_swap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_swap(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.swap)
}

// optional double price = 5;
inline bool ProtoOAPosition::_internal_has_price() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_price() const {
  return _internal_has_price();
}
inline void ProtoOAPosition::clear_price() {
  price_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double ProtoOAPosition::_internal_price() const {
  return price_;
}
inline double ProtoOAPosition::price() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.price)
  return _internal_price();
}
inline void ProtoOAPosition::_internal_set_price(double value) {
  _has_bits_[0] |= 0x00000008u;
  price_ = value;
}
inline void ProtoOAPosition::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.price)
}

// optional double stopLoss = 6;
inline bool ProtoOAPosition::_internal_has_stoploss() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_stoploss() const {
  return _internal_has_stoploss();
}
inline void ProtoOAPosition::clear_stoploss() {
  stoploss_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double ProtoOAPosition::_internal_stoploss() const {
  return stoploss_;
}
inline double ProtoOAPosition::stoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.stopLoss)
  return _internal_stoploss();
}
inline void ProtoOAPosition::_internal_set_stoploss(double value) {
  _has_bits_[0] |= 0x00000010u;
  stoploss_ = value;
}
inline void ProtoOAPosition::set_stoploss(double value) {
  _internal_set_stoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.stopLoss)
}

// optional double takeProfit = 7;
inline bool ProtoOAPosition::_internal_has_takeprofit() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_takeprofit() const {
  return _internal_has_takeprofit();
}
inline void ProtoOAPosition::clear_takeprofit() {
  takeprofit_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ProtoOAPosition::_internal_takeprofit() const {
  return takeprofit_;
}
inline double ProtoOAPosition::takeprofit() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.takeProfit)
  return _internal_takeprofit();
}
inline void ProtoOAPosition::_internal_set_takeprofit(double value) {
  _has_bits_[0] |= 0x00000020u;
  takeprofit_ = value;
}
inline void ProtoOAPosition::set_takeprofit(double value) {
  _internal_set_takeprofit(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.takeProfit)
}

// optional int64 utcLastUpdateTimestamp = 8;
inline bool ProtoOAPosition::_internal_has_utclastupdatetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_utclastupdatetimestamp() const {
  return _internal_has_utclastupdatetimestamp();
}
inline void ProtoOAPosition::clear_utclastupdatetimestamp() {
  utclastupdatetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::_internal_utclastupdatetimestamp() const {
  return utclastupdatetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::utclastupdatetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.utcLastUpdateTimestamp)
  return _internal_utclastupdatetimestamp();
}
inline void ProtoOAPosition::_internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  utclastupdatetimestamp_ = value;
}
inline void ProtoOAPosition::set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_utclastupdatetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.utcLastUpdateTimestamp)
}

// optional int64 commission = 9;
inline bool ProtoOAPosition::_internal_has_commission() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_commission() const {
  return _internal_has_commission();
}
inline void ProtoOAPosition::clear_commission() {
  commission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::_internal_commission() const {
  return commission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::commission() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.commission)
  return _internal_commission();
}
inline void ProtoOAPosition::_internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  commission_ = value;
}
inline void ProtoOAPosition::set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_commission(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.commission)
}

// optional double marginRate = 10;
inline bool ProtoOAPosition::_internal_has_marginrate() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_marginrate() const {
  return _internal_has_marginrate();
}
inline void ProtoOAPosition::clear_marginrate() {
  marginrate_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double ProtoOAPosition::_internal_marginrate() const {
  return marginrate_;
}
inline double ProtoOAPosition::marginrate() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.marginRate)
  return _internal_marginrate();
}
inline void ProtoOAPosition::_internal_set_marginrate(double value) {
  _has_bits_[0] |= 0x00000100u;
  marginrate_ = value;
}
inline void ProtoOAPosition::set_marginrate(double value) {
  _internal_set_marginrate(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.marginRate)
}

// optional int64 mirroringCommission = 11;
inline bool ProtoOAPosition::_internal_has_mirroringcommission() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_mirroringcommission() const {
  return _internal_has_mirroringcommission();
}
inline void ProtoOAPosition::clear_mirroringcommission() {
  mirroringcommission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::_internal_mirroringcommission() const {
  return mirroringcommission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAPosition::mirroringcommission() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.mirroringCommission)
  return _internal_mirroringcommission();
}
inline void ProtoOAPosition::_internal_set_mirroringcommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  mirroringcommission_ = value;
}
inline void ProtoOAPosition::set_mirroringcommission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_mirroringcommission(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.mirroringCommission)
}

// optional bool guaranteedStopLoss = 12;
inline bool ProtoOAPosition::_internal_has_guaranteedstoploss() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_guaranteedstoploss() const {
  return _internal_has_guaranteedstoploss();
}
inline void ProtoOAPosition::clear_guaranteedstoploss() {
  guaranteedstoploss_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool ProtoOAPosition::_internal_guaranteedstoploss() const {
  return guaranteedstoploss_;
}
inline bool ProtoOAPosition::guaranteedstoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.guaranteedStopLoss)
  return _internal_guaranteedstoploss();
}
inline void ProtoOAPosition::_internal_set_guaranteedstoploss(bool value) {
  _has_bits_[0] |= 0x00000800u;
  guaranteedstoploss_ = value;
}
inline void ProtoOAPosition::set_guaranteedstoploss(bool value) {
  _internal_set_guaranteedstoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.guaranteedStopLoss)
}

// optional uint64 usedMargin = 13;
inline bool ProtoOAPosition::_internal_has_usedmargin() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_usedmargin() const {
  return _internal_has_usedmargin();
}
inline void ProtoOAPosition::clear_usedmargin() {
  usedmargin_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOAPosition::_internal_usedmargin() const {
  return usedmargin_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOAPosition::usedmargin() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.usedMargin)
  return _internal_usedmargin();
}
inline void ProtoOAPosition::_internal_set_usedmargin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000400u;
  usedmargin_ = value;
}
inline void ProtoOAPosition::set_usedmargin(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_usedmargin(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.usedMargin)
}

// optional .ProtoOAOrderTriggerMethod stopLossTriggerMethod = 14 [default = TRADE];
inline bool ProtoOAPosition::_internal_has_stoplosstriggermethod() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_stoplosstriggermethod() const {
  return _internal_has_stoplosstriggermethod();
}
inline void ProtoOAPosition::clear_stoplosstriggermethod() {
  stoplosstriggermethod_ = 1;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::ProtoOAOrderTriggerMethod ProtoOAPosition::_internal_stoplosstriggermethod() const {
  return static_cast< ::ProtoOAOrderTriggerMethod >(stoplosstriggermethod_);
}
inline ::ProtoOAOrderTriggerMethod ProtoOAPosition::stoplosstriggermethod() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.stopLossTriggerMethod)
  return _internal_stoplosstriggermethod();
}
inline void ProtoOAPosition::_internal_set_stoplosstriggermethod(::ProtoOAOrderTriggerMethod value) {
  assert(::ProtoOAOrderTriggerMethod_IsValid(value));
  _has_bits_[0] |= 0x00004000u;
  stoplosstriggermethod_ = value;
}
inline void ProtoOAPosition::set_stoplosstriggermethod(::ProtoOAOrderTriggerMethod value) {
  _internal_set_stoplosstriggermethod(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.stopLossTriggerMethod)
}

// optional uint32 moneyDigits = 15;
inline bool ProtoOAPosition::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoOAPosition::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOAPosition::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAPosition::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAPosition::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOAPosition.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOAPosition::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  moneydigits_ = value;
}
inline void ProtoOAPosition::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOAPosition.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOATradeData

// required int64 symbolId = 1;
inline bool ProtoOATradeData::_internal_has_symbolid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_symbolid() const {
  return _internal_has_symbolid();
}
inline void ProtoOATradeData::clear_symbolid() {
  symbolid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::_internal_symbolid() const {
  return symbolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::symbolid() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.symbolId)
  return _internal_symbolid();
}
inline void ProtoOATradeData::_internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  symbolid_ = value;
}
inline void ProtoOATradeData::set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolid(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.symbolId)
}

// required int64 volume = 2;
inline bool ProtoOATradeData::_internal_has_volume() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_volume() const {
  return _internal_has_volume();
}
inline void ProtoOATradeData::clear_volume() {
  volume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::volume() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.volume)
  return _internal_volume();
}
inline void ProtoOATradeData::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  volume_ = value;
}
inline void ProtoOATradeData::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.volume)
}

// required .ProtoOATradeSide tradeSide = 3;
inline bool ProtoOATradeData::_internal_has_tradeside() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_tradeside() const {
  return _internal_has_tradeside();
}
inline void ProtoOATradeData::clear_tradeside() {
  tradeside_ = 1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::ProtoOATradeSide ProtoOATradeData::_internal_tradeside() const {
  return static_cast< ::ProtoOATradeSide >(tradeside_);
}
inline ::ProtoOATradeSide ProtoOATradeData::tradeside() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.tradeSide)
  return _internal_tradeside();
}
inline void ProtoOATradeData::_internal_set_tradeside(::ProtoOATradeSide value) {
  assert(::ProtoOATradeSide_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  tradeside_ = value;
}
inline void ProtoOATradeData::set_tradeside(::ProtoOATradeSide value) {
  _internal_set_tradeside(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.tradeSide)
}

// optional int64 openTimestamp = 4;
inline bool ProtoOATradeData::_internal_has_opentimestamp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_opentimestamp() const {
  return _internal_has_opentimestamp();
}
inline void ProtoOATradeData::clear_opentimestamp() {
  opentimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::_internal_opentimestamp() const {
  return opentimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATradeData::opentimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.openTimestamp)
  return _internal_opentimestamp();
}
inline void ProtoOATradeData::_internal_set_opentimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  opentimestamp_ = value;
}
inline void ProtoOATradeData::set_opentimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_opentimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.openTimestamp)
}

// optional string label = 5;
inline bool ProtoOATradeData::_internal_has_label() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_label() const {
  return _internal_has_label();
}
inline void ProtoOATradeData::clear_label() {
  label_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOATradeData::label() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.label)
  return _internal_label();
}
inline void ProtoOATradeData::set_label(const std::string& value) {
  _internal_set_label(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.label)
}
inline std::string* ProtoOATradeData::mutable_label() {
  // @@protoc_insertion_point(field_mutable:ProtoOATradeData.label)
  return _internal_mutable_label();
}
inline const std::string& ProtoOATradeData::_internal_label() const {
  return label_.Get();
}
inline void ProtoOATradeData::_internal_set_label(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOATradeData::set_label(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  label_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOATradeData.label)
}
inline void ProtoOATradeData::set_label(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOATradeData.label)
}
inline void ProtoOATradeData::set_label(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOATradeData.label)
}
inline std::string* ProtoOATradeData::_internal_mutable_label() {
  _has_bits_[0] |= 0x00000001u;
  return label_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOATradeData::release_label() {
  // @@protoc_insertion_point(field_release:ProtoOATradeData.label)
  if (!_internal_has_label()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return label_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOATradeData::set_allocated_label(std::string* label) {
  if (label != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  label_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), label,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOATradeData.label)
}

// optional bool guaranteedStopLoss = 6;
inline bool ProtoOATradeData::_internal_has_guaranteedstoploss() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_guaranteedstoploss() const {
  return _internal_has_guaranteedstoploss();
}
inline void ProtoOATradeData::clear_guaranteedstoploss() {
  guaranteedstoploss_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ProtoOATradeData::_internal_guaranteedstoploss() const {
  return guaranteedstoploss_;
}
inline bool ProtoOATradeData::guaranteedstoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.guaranteedStopLoss)
  return _internal_guaranteedstoploss();
}
inline void ProtoOATradeData::_internal_set_guaranteedstoploss(bool value) {
  _has_bits_[0] |= 0x00000020u;
  guaranteedstoploss_ = value;
}
inline void ProtoOATradeData::set_guaranteedstoploss(bool value) {
  _internal_set_guaranteedstoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.guaranteedStopLoss)
}

// optional string comment = 7;
inline bool ProtoOATradeData::_internal_has_comment() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOATradeData::has_comment() const {
  return _internal_has_comment();
}
inline void ProtoOATradeData::clear_comment() {
  comment_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOATradeData::comment() const {
  // @@protoc_insertion_point(field_get:ProtoOATradeData.comment)
  return _internal_comment();
}
inline void ProtoOATradeData::set_comment(const std::string& value) {
  _internal_set_comment(value);
  // @@protoc_insertion_point(field_set:ProtoOATradeData.comment)
}
inline std::string* ProtoOATradeData::mutable_comment() {
  // @@protoc_insertion_point(field_mutable:ProtoOATradeData.comment)
  return _internal_mutable_comment();
}
inline const std::string& ProtoOATradeData::_internal_comment() const {
  return comment_.Get();
}
inline void ProtoOATradeData::_internal_set_comment(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOATradeData::set_comment(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  comment_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOATradeData.comment)
}
inline void ProtoOATradeData::set_comment(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOATradeData.comment)
}
inline void ProtoOATradeData::set_comment(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOATradeData.comment)
}
inline std::string* ProtoOATradeData::_internal_mutable_comment() {
  _has_bits_[0] |= 0x00000002u;
  return comment_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOATradeData::release_comment() {
  // @@protoc_insertion_point(field_release:ProtoOATradeData.comment)
  if (!_internal_has_comment()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return comment_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOATradeData::set_allocated_comment(std::string* comment) {
  if (comment != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  comment_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), comment,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOATradeData.comment)
}

// -------------------------------------------------------------------

// ProtoOAOrder

// required int64 orderId = 1;
inline bool ProtoOAOrder::_internal_has_orderid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_orderid() const {
  return _internal_has_orderid();
}
inline void ProtoOAOrder::clear_orderid() {
  orderid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_orderid() const {
  return orderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::orderid() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.orderId)
  return _internal_orderid();
}
inline void ProtoOAOrder::_internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  orderid_ = value;
}
inline void ProtoOAOrder::set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_orderid(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.orderId)
}

// required .ProtoOATradeData tradeData = 2;
inline bool ProtoOAOrder::_internal_has_tradedata() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || tradedata_ != nullptr);
  return value;
}
inline bool ProtoOAOrder::has_tradedata() const {
  return _internal_has_tradedata();
}
inline void ProtoOAOrder::clear_tradedata() {
  if (tradedata_ != nullptr) tradedata_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ProtoOATradeData& ProtoOAOrder::_internal_tradedata() const {
  const ::ProtoOATradeData* p = tradedata_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoOATradeData&>(
      ::_ProtoOATradeData_default_instance_);
}
inline const ::ProtoOATradeData& ProtoOAOrder::tradedata() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.tradeData)
  return _internal_tradedata();
}
inline void ProtoOAOrder::unsafe_arena_set_allocated_tradedata(
    ::ProtoOATradeData* tradedata) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tradedata_);
  }
  tradedata_ = tradedata;
  if (tradedata) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoOAOrder.tradeData)
}
inline ::ProtoOATradeData* ProtoOAOrder::release_tradedata() {
  _has_bits_[0] &= ~0x00000002u;
  ::ProtoOATradeData* temp = tradedata_;
  tradedata_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProtoOATradeData* ProtoOAOrder::unsafe_arena_release_tradedata() {
  // @@protoc_insertion_point(field_release:ProtoOAOrder.tradeData)
  _has_bits_[0] &= ~0x00000002u;
  ::ProtoOATradeData* temp = tradedata_;
  tradedata_ = nullptr;
  return temp;
}
inline ::ProtoOATradeData* ProtoOAOrder::_internal_mutable_tradedata() {
  _has_bits_[0] |= 0x00000002u;
  if (tradedata_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoOATradeData>(GetArena());
    tradedata_ = p;
  }
  return tradedata_;
}
inline ::ProtoOATradeData* ProtoOAOrder::mutable_tradedata() {
  // @@protoc_insertion_point(field_mutable:ProtoOAOrder.tradeData)
  return _internal_mutable_tradedata();
}
inline void ProtoOAOrder::set_allocated_tradedata(::ProtoOATradeData* tradedata) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete tradedata_;
  }
  if (tradedata) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(tradedata);
    if (message_arena != submessage_arena) {
      tradedata = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tradedata, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  tradedata_ = tradedata;
  // @@protoc_insertion_point(field_set_allocated:ProtoOAOrder.tradeData)
}

// required .ProtoOAOrderType orderType = 3;
inline bool ProtoOAOrder::_internal_has_ordertype() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_ordertype() const {
  return _internal_has_ordertype();
}
inline void ProtoOAOrder::clear_ordertype() {
  ordertype_ = 1;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::ProtoOAOrderType ProtoOAOrder::_internal_ordertype() const {
  return static_cast< ::ProtoOAOrderType >(ordertype_);
}
inline ::ProtoOAOrderType ProtoOAOrder::ordertype() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.orderType)
  return _internal_ordertype();
}
inline void ProtoOAOrder::_internal_set_ordertype(::ProtoOAOrderType value) {
  assert(::ProtoOAOrderType_IsValid(value));
  _has_bits_[0] |= 0x00080000u;
  ordertype_ = value;
}
inline void ProtoOAOrder::set_ordertype(::ProtoOAOrderType value) {
  _internal_set_ordertype(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.orderType)
}

// required .ProtoOAOrderStatus orderStatus = 4;
inline bool ProtoOAOrder::_internal_has_orderstatus() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_orderstatus() const {
  return _internal_has_orderstatus();
}
inline void ProtoOAOrder::clear_orderstatus() {
  orderstatus_ = 1;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::ProtoOAOrderStatus ProtoOAOrder::_internal_orderstatus() const {
  return static_cast< ::ProtoOAOrderStatus >(orderstatus_);
}
inline ::ProtoOAOrderStatus ProtoOAOrder::orderstatus() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.orderStatus)
  return _internal_orderstatus();
}
inline void ProtoOAOrder::_internal_set_orderstatus(::ProtoOAOrderStatus value) {
  assert(::ProtoOAOrderStatus_IsValid(value));
  _has_bits_[0] |= 0x00100000u;
  orderstatus_ = value;
}
inline void ProtoOAOrder::set_orderstatus(::ProtoOAOrderStatus value) {
  _internal_set_orderstatus(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.orderStatus)
}

// optional int64 expirationTimestamp = 6;
inline bool ProtoOAOrder::_internal_has_expirationtimestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_expirationtimestamp() const {
  return _internal_has_expirationtimestamp();
}
inline void ProtoOAOrder::clear_expirationtimestamp() {
  expirationtimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_expirationtimestamp() const {
  return expirationtimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::expirationtimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.expirationTimestamp)
  return _internal_expirationtimestamp();
}
inline void ProtoOAOrder::_internal_set_expirationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  expirationtimestamp_ = value;
}
inline void ProtoOAOrder::set_expirationtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_expirationtimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.expirationTimestamp)
}

// optional double executionPrice = 7;
inline bool ProtoOAOrder::_internal_has_executionprice() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_executionprice() const {
  return _internal_has_executionprice();
}
inline void ProtoOAOrder::clear_executionprice() {
  executionprice_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double ProtoOAOrder::_internal_executionprice() const {
  return executionprice_;
}
inline double ProtoOAOrder::executionprice() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.executionPrice)
  return _internal_executionprice();
}
inline void ProtoOAOrder::_internal_set_executionprice(double value) {
  _has_bits_[0] |= 0x00000010u;
  executionprice_ = value;
}
inline void ProtoOAOrder::set_executionprice(double value) {
  _internal_set_executionprice(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.executionPrice)
}

// optional int64 executedVolume = 8;
inline bool ProtoOAOrder::_internal_has_executedvolume() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_executedvolume() const {
  return _internal_has_executedvolume();
}
inline void ProtoOAOrder::clear_executedvolume() {
  executedvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_executedvolume() const {
  return executedvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::executedvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.executedVolume)
  return _internal_executedvolume();
}
inline void ProtoOAOrder::_internal_set_executedvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  executedvolume_ = value;
}
inline void ProtoOAOrder::set_executedvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_executedvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.executedVolume)
}

// optional int64 utcLastUpdateTimestamp = 9;
inline bool ProtoOAOrder::_internal_has_utclastupdatetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_utclastupdatetimestamp() const {
  return _internal_has_utclastupdatetimestamp();
}
inline void ProtoOAOrder::clear_utclastupdatetimestamp() {
  utclastupdatetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_utclastupdatetimestamp() const {
  return utclastupdatetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::utclastupdatetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.utcLastUpdateTimestamp)
  return _internal_utclastupdatetimestamp();
}
inline void ProtoOAOrder::_internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  utclastupdatetimestamp_ = value;
}
inline void ProtoOAOrder::set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_utclastupdatetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.utcLastUpdateTimestamp)
}

// optional double baseSlippagePrice = 10;
inline bool ProtoOAOrder::_internal_has_baseslippageprice() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_baseslippageprice() const {
  return _internal_has_baseslippageprice();
}
inline void ProtoOAOrder::clear_baseslippageprice() {
  baseslippageprice_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double ProtoOAOrder::_internal_baseslippageprice() const {
  return baseslippageprice_;
}
inline double ProtoOAOrder::baseslippageprice() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.baseSlippagePrice)
  return _internal_baseslippageprice();
}
inline void ProtoOAOrder::_internal_set_baseslippageprice(double value) {
  _has_bits_[0] |= 0x00000080u;
  baseslippageprice_ = value;
}
inline void ProtoOAOrder::set_baseslippageprice(double value) {
  _internal_set_baseslippageprice(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.baseSlippagePrice)
}

// optional int64 slippageInPoints = 11;
inline bool ProtoOAOrder::_internal_has_slippageinpoints() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_slippageinpoints() const {
  return _internal_has_slippageinpoints();
}
inline void ProtoOAOrder::clear_slippageinpoints() {
  slippageinpoints_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_slippageinpoints() const {
  return slippageinpoints_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::slippageinpoints() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.slippageInPoints)
  return _internal_slippageinpoints();
}
inline void ProtoOAOrder::_internal_set_slippageinpoints(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  slippageinpoints_ = value;
}
inline void ProtoOAOrder::set_slippageinpoints(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_slippageinpoints(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.slippageInPoints)
}

// optional bool closingOrder = 12;
inline bool ProtoOAOrder::_internal_has_closingorder() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_closingorder() const {
  return _internal_has_closingorder();
}
inline void ProtoOAOrder::clear_closingorder() {
  closingorder_ = false;
  _has_bits_[0] &= ~0x00010000u;
}
inline bool ProtoOAOrder::_internal_closingorder() const {
  return closingorder_;
}
inline bool ProtoOAOrder::closingorder() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.closingOrder)
  return _internal_closingorder();
}
inline void ProtoOAOrder::_internal_set_closingorder(bool value) {
  _has_bits_[0] |= 0x00010000u;
  closingorder_ = value;
}
inline void ProtoOAOrder::set_closingorder(bool value) {
  _internal_set_closingorder(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.closingOrder)
}

// optional double limitPrice = 13;
inline bool ProtoOAOrder::_internal_has_limitprice() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_limitprice() const {
  return _internal_has_limitprice();
}
inline void ProtoOAOrder::clear_limitprice() {
  limitprice_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double ProtoOAOrder::_internal_limitprice() const {
  return limitprice_;
}
inline double ProtoOAOrder::limitprice() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.limitPrice)
  return _internal_limitprice();
}
inline void ProtoOAOrder::_internal_set_limitprice(double value) {
  _has_bits_[0] |= 0x00000200u;
  limitprice_ = value;
}
inline void ProtoOAOrder::set_limitprice(double value) {
  _internal_set_limitprice(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.limitPrice)
}

// optional double stopPrice = 14;
inline bool ProtoOAOrder::_internal_has_stopprice() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_stopprice() const {
  return _internal_has_stopprice();
}
inline void ProtoOAOrder::clear_stopprice() {
  stopprice_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double ProtoOAOrder::_internal_stopprice() const {
  return stopprice_;
}
inline double ProtoOAOrder::stopprice() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.stopPrice)
  return _internal_stopprice();
}
inline void ProtoOAOrder::_internal_set_stopprice(double value) {
  _has_bits_[0] |= 0x00000400u;
  stopprice_ = value;
}
inline void ProtoOAOrder::set_stopprice(double value) {
  _internal_set_stopprice(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.stopPrice)
}

// optional double stopLoss = 15;
inline bool ProtoOAOrder::_internal_has_stoploss() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_stoploss() const {
  return _internal_has_stoploss();
}
inline void ProtoOAOrder::clear_stoploss() {
  stoploss_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double ProtoOAOrder::_internal_stoploss() const {
  return stoploss_;
}
inline double ProtoOAOrder::stoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.stopLoss)
  return _internal_stoploss();
}
inline void ProtoOAOrder::_internal_set_stoploss(double value) {
  _has_bits_[0] |= 0x00000800u;
  stoploss_ = value;
}
inline void ProtoOAOrder::set_stoploss(double value) {
  _internal_set_stoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.stopLoss)
}

// optional double takeProfit = 16;
inline bool ProtoOAOrder::_internal_has_takeprofit() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_takeprofit() const {
  return _internal_has_takeprofit();
}
inline void ProtoOAOrder::clear_takeprofit() {
  takeprofit_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline double ProtoOAOrder::_internal_takeprofit() const {
  return takeprofit_;
}
inline double ProtoOAOrder::takeprofit() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.takeProfit)
  return _internal_takeprofit();
}
inline void ProtoOAOrder::_internal_set_takeprofit(double value) {
  _has_bits_[0] |= 0x00001000u;
  takeprofit_ = value;
}
inline void ProtoOAOrder::set_takeprofit(double value) {
  _internal_set_takeprofit(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.takeProfit)
}

// optional string clientOrderId = 17;
inline bool ProtoOAOrder::_internal_has_clientorderid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_clientorderid() const {
  return _internal_has_clientorderid();
}
inline void ProtoOAOrder::clear_clientorderid() {
  clientorderid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOAOrder::clientorderid() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.clientOrderId)
  return _internal_clientorderid();
}
inline void ProtoOAOrder::set_clientorderid(const std::string& value) {
  _internal_set_clientorderid(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.clientOrderId)
}
inline std::string* ProtoOAOrder::mutable_clientorderid() {
  // @@protoc_insertion_point(field_mutable:ProtoOAOrder.clientOrderId)
  return _internal_mutable_clientorderid();
}
inline const std::string& ProtoOAOrder::_internal_clientorderid() const {
  return clientorderid_.Get();
}
inline void ProtoOAOrder::_internal_set_clientorderid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  clientorderid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAOrder::set_clientorderid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  clientorderid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAOrder.clientOrderId)
}
inline void ProtoOAOrder::set_clientorderid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  clientorderid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAOrder.clientOrderId)
}
inline void ProtoOAOrder::set_clientorderid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  clientorderid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAOrder.clientOrderId)
}
inline std::string* ProtoOAOrder::_internal_mutable_clientorderid() {
  _has_bits_[0] |= 0x00000001u;
  return clientorderid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAOrder::release_clientorderid() {
  // @@protoc_insertion_point(field_release:ProtoOAOrder.clientOrderId)
  if (!_internal_has_clientorderid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return clientorderid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAOrder::set_allocated_clientorderid(std::string* clientorderid) {
  if (clientorderid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  clientorderid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), clientorderid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAOrder.clientOrderId)
}

// optional .ProtoOATimeInForce timeInForce = 18 [default = IMMEDIATE_OR_CANCEL];
inline bool ProtoOAOrder::_internal_has_timeinforce() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_timeinforce() const {
  return _internal_has_timeinforce();
}
inline void ProtoOAOrder::clear_timeinforce() {
  timeinforce_ = 3;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::ProtoOATimeInForce ProtoOAOrder::_internal_timeinforce() const {
  return static_cast< ::ProtoOATimeInForce >(timeinforce_);
}
inline ::ProtoOATimeInForce ProtoOAOrder::timeinforce() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.timeInForce)
  return _internal_timeinforce();
}
inline void ProtoOAOrder::_internal_set_timeinforce(::ProtoOATimeInForce value) {
  assert(::ProtoOATimeInForce_IsValid(value));
  _has_bits_[0] |= 0x00200000u;
  timeinforce_ = value;
}
inline void ProtoOAOrder::set_timeinforce(::ProtoOATimeInForce value) {
  _internal_set_timeinforce(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.timeInForce)
}

// optional int64 positionId = 19;
inline bool ProtoOAOrder::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_positionid() const {
  return _internal_has_positionid();
}
inline void ProtoOAOrder::clear_positionid() {
  positionid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::positionid() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.positionId)
  return _internal_positionid();
}
inline void ProtoOAOrder::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00002000u;
  positionid_ = value;
}
inline void ProtoOAOrder::set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.positionId)
}

// optional int64 relativeStopLoss = 20;
inline bool ProtoOAOrder::_internal_has_relativestoploss() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_relativestoploss() const {
  return _internal_has_relativestoploss();
}
inline void ProtoOAOrder::clear_relativestoploss() {
  relativestoploss_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_relativestoploss() const {
  return relativestoploss_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::relativestoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.relativeStopLoss)
  return _internal_relativestoploss();
}
inline void ProtoOAOrder::_internal_set_relativestoploss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00004000u;
  relativestoploss_ = value;
}
inline void ProtoOAOrder::set_relativestoploss(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_relativestoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.relativeStopLoss)
}

// optional int64 relativeTakeProfit = 21;
inline bool ProtoOAOrder::_internal_has_relativetakeprofit() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_relativetakeprofit() const {
  return _internal_has_relativetakeprofit();
}
inline void ProtoOAOrder::clear_relativetakeprofit() {
  relativetakeprofit_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::_internal_relativetakeprofit() const {
  return relativetakeprofit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAOrder::relativetakeprofit() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.relativeTakeProfit)
  return _internal_relativetakeprofit();
}
inline void ProtoOAOrder::_internal_set_relativetakeprofit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00008000u;
  relativetakeprofit_ = value;
}
inline void ProtoOAOrder::set_relativetakeprofit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_relativetakeprofit(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.relativeTakeProfit)
}

// optional bool isStopOut = 22;
inline bool ProtoOAOrder::_internal_has_isstopout() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_isstopout() const {
  return _internal_has_isstopout();
}
inline void ProtoOAOrder::clear_isstopout() {
  isstopout_ = false;
  _has_bits_[0] &= ~0x00020000u;
}
inline bool ProtoOAOrder::_internal_isstopout() const {
  return isstopout_;
}
inline bool ProtoOAOrder::isstopout() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.isStopOut)
  return _internal_isstopout();
}
inline void ProtoOAOrder::_internal_set_isstopout(bool value) {
  _has_bits_[0] |= 0x00020000u;
  isstopout_ = value;
}
inline void ProtoOAOrder::set_isstopout(bool value) {
  _internal_set_isstopout(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.isStopOut)
}

// optional bool trailingStopLoss = 23;
inline bool ProtoOAOrder::_internal_has_trailingstoploss() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_trailingstoploss() const {
  return _internal_has_trailingstoploss();
}
inline void ProtoOAOrder::clear_trailingstoploss() {
  trailingstoploss_ = false;
  _has_bits_[0] &= ~0x00040000u;
}
inline bool ProtoOAOrder::_internal_trailingstoploss() const {
  return trailingstoploss_;
}
inline bool ProtoOAOrder::trailingstoploss() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.trailingStopLoss)
  return _internal_trailingstoploss();
}
inline void ProtoOAOrder::_internal_set_trailingstoploss(bool value) {
  _has_bits_[0] |= 0x00040000u;
  trailingstoploss_ = value;
}
inline void ProtoOAOrder::set_trailingstoploss(bool value) {
  _internal_set_trailingstoploss(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.trailingStopLoss)
}

// optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 24 [default = TRADE];
inline bool ProtoOAOrder::_internal_has_stoptriggermethod() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool ProtoOAOrder::has_stoptriggermethod() const {
  return _internal_has_stoptriggermethod();
}
inline void ProtoOAOrder::clear_stoptriggermethod() {
  stoptriggermethod_ = 1;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::ProtoOAOrderTriggerMethod ProtoOAOrder::_internal_stoptriggermethod() const {
  return static_cast< ::ProtoOAOrderTriggerMethod >(stoptriggermethod_);
}
inline ::ProtoOAOrderTriggerMethod ProtoOAOrder::stoptriggermethod() const {
  // @@protoc_insertion_point(field_get:ProtoOAOrder.stopTriggerMethod)
  return _internal_stoptriggermethod();
}
inline void ProtoOAOrder::_internal_set_stoptriggermethod(::ProtoOAOrderTriggerMethod value) {
  assert(::ProtoOAOrderTriggerMethod_IsValid(value));
  _has_bits_[0] |= 0x00400000u;
  stoptriggermethod_ = value;
}
inline void ProtoOAOrder::set_stoptriggermethod(::ProtoOAOrderTriggerMethod value) {
  _internal_set_stoptriggermethod(value);
  // @@protoc_insertion_point(field_set:ProtoOAOrder.stopTriggerMethod)
}

// -------------------------------------------------------------------

// ProtoOABonusDepositWithdraw

// required .ProtoOAChangeBonusType operationType = 1;
inline bool ProtoOABonusDepositWithdraw::_internal_has_operationtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_operationtype() const {
  return _internal_has_operationtype();
}
inline void ProtoOABonusDepositWithdraw::clear_operationtype() {
  operationtype_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::ProtoOAChangeBonusType ProtoOABonusDepositWithdraw::_internal_operationtype() const {
  return static_cast< ::ProtoOAChangeBonusType >(operationtype_);
}
inline ::ProtoOAChangeBonusType ProtoOABonusDepositWithdraw::operationtype() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.operationType)
  return _internal_operationtype();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_operationtype(::ProtoOAChangeBonusType value) {
  assert(::ProtoOAChangeBonusType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  operationtype_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_operationtype(::ProtoOAChangeBonusType value) {
  _internal_set_operationtype(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.operationType)
}

// required int64 bonusHistoryId = 2;
inline bool ProtoOABonusDepositWithdraw::_internal_has_bonushistoryid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_bonushistoryid() const {
  return _internal_has_bonushistoryid();
}
inline void ProtoOABonusDepositWithdraw::clear_bonushistoryid() {
  bonushistoryid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_bonushistoryid() const {
  return bonushistoryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::bonushistoryid() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.bonusHistoryId)
  return _internal_bonushistoryid();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_bonushistoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  bonushistoryid_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_bonushistoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_bonushistoryid(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.bonusHistoryId)
}

// required int64 managerBonus = 3;
inline bool ProtoOABonusDepositWithdraw::_internal_has_managerbonus() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_managerbonus() const {
  return _internal_has_managerbonus();
}
inline void ProtoOABonusDepositWithdraw::clear_managerbonus() {
  managerbonus_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_managerbonus() const {
  return managerbonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::managerbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.managerBonus)
  return _internal_managerbonus();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  managerbonus_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_managerbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_managerbonus(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.managerBonus)
}

// required int64 managerDelta = 4;
inline bool ProtoOABonusDepositWithdraw::_internal_has_managerdelta() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_managerdelta() const {
  return _internal_has_managerdelta();
}
inline void ProtoOABonusDepositWithdraw::clear_managerdelta() {
  managerdelta_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_managerdelta() const {
  return managerdelta_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::managerdelta() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.managerDelta)
  return _internal_managerdelta();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_managerdelta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  managerdelta_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_managerdelta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_managerdelta(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.managerDelta)
}

// required int64 ibBonus = 5;
inline bool ProtoOABonusDepositWithdraw::_internal_has_ibbonus() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_ibbonus() const {
  return _internal_has_ibbonus();
}
inline void ProtoOABonusDepositWithdraw::clear_ibbonus() {
  ibbonus_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_ibbonus() const {
  return ibbonus_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::ibbonus() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.ibBonus)
  return _internal_ibbonus();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  ibbonus_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_ibbonus(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ibbonus(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.ibBonus)
}

// required int64 ibDelta = 6;
inline bool ProtoOABonusDepositWithdraw::_internal_has_ibdelta() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_ibdelta() const {
  return _internal_has_ibdelta();
}
inline void ProtoOABonusDepositWithdraw::clear_ibdelta() {
  ibdelta_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_ibdelta() const {
  return ibdelta_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::ibdelta() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.ibDelta)
  return _internal_ibdelta();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_ibdelta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  ibdelta_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_ibdelta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_ibdelta(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.ibDelta)
}

// required int64 changeBonusTimestamp = 7;
inline bool ProtoOABonusDepositWithdraw::_internal_has_changebonustimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_changebonustimestamp() const {
  return _internal_has_changebonustimestamp();
}
inline void ProtoOABonusDepositWithdraw::clear_changebonustimestamp() {
  changebonustimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_changebonustimestamp() const {
  return changebonustimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::changebonustimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.changeBonusTimestamp)
  return _internal_changebonustimestamp();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_changebonustimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  changebonustimestamp_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_changebonustimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_changebonustimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.changeBonusTimestamp)
}

// optional string externalNote = 8;
inline bool ProtoOABonusDepositWithdraw::_internal_has_externalnote() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_externalnote() const {
  return _internal_has_externalnote();
}
inline void ProtoOABonusDepositWithdraw::clear_externalnote() {
  externalnote_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOABonusDepositWithdraw::externalnote() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.externalNote)
  return _internal_externalnote();
}
inline void ProtoOABonusDepositWithdraw::set_externalnote(const std::string& value) {
  _internal_set_externalnote(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.externalNote)
}
inline std::string* ProtoOABonusDepositWithdraw::mutable_externalnote() {
  // @@protoc_insertion_point(field_mutable:ProtoOABonusDepositWithdraw.externalNote)
  return _internal_mutable_externalnote();
}
inline const std::string& ProtoOABonusDepositWithdraw::_internal_externalnote() const {
  return externalnote_.Get();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_externalnote(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOABonusDepositWithdraw::set_externalnote(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOABonusDepositWithdraw.externalNote)
}
inline void ProtoOABonusDepositWithdraw::set_externalnote(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOABonusDepositWithdraw.externalNote)
}
inline void ProtoOABonusDepositWithdraw::set_externalnote(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOABonusDepositWithdraw.externalNote)
}
inline std::string* ProtoOABonusDepositWithdraw::_internal_mutable_externalnote() {
  _has_bits_[0] |= 0x00000001u;
  return externalnote_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOABonusDepositWithdraw::release_externalnote() {
  // @@protoc_insertion_point(field_release:ProtoOABonusDepositWithdraw.externalNote)
  if (!_internal_has_externalnote()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return externalnote_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOABonusDepositWithdraw::set_allocated_externalnote(std::string* externalnote) {
  if (externalnote != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  externalnote_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), externalnote,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOABonusDepositWithdraw.externalNote)
}

// optional int64 introducingBrokerId = 9;
inline bool ProtoOABonusDepositWithdraw::_internal_has_introducingbrokerid() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_introducingbrokerid() const {
  return _internal_has_introducingbrokerid();
}
inline void ProtoOABonusDepositWithdraw::clear_introducingbrokerid() {
  introducingbrokerid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::_internal_introducingbrokerid() const {
  return introducingbrokerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOABonusDepositWithdraw::introducingbrokerid() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.introducingBrokerId)
  return _internal_introducingbrokerid();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_introducingbrokerid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  introducingbrokerid_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_introducingbrokerid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_introducingbrokerid(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.introducingBrokerId)
}

// optional uint32 moneyDigits = 10;
inline bool ProtoOABonusDepositWithdraw::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOABonusDepositWithdraw::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOABonusDepositWithdraw::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOABonusDepositWithdraw::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOABonusDepositWithdraw::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOABonusDepositWithdraw.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOABonusDepositWithdraw::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  moneydigits_ = value;
}
inline void ProtoOABonusDepositWithdraw::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOABonusDepositWithdraw.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOADepositWithdraw

// required .ProtoOAChangeBalanceType operationType = 1;
inline bool ProtoOADepositWithdraw::_internal_has_operationtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_operationtype() const {
  return _internal_has_operationtype();
}
inline void ProtoOADepositWithdraw::clear_operationtype() {
  operationtype_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::ProtoOAChangeBalanceType ProtoOADepositWithdraw::_internal_operationtype() const {
  return static_cast< ::ProtoOAChangeBalanceType >(operationtype_);
}
inline ::ProtoOAChangeBalanceType ProtoOADepositWithdraw::operationtype() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.operationType)
  return _internal_operationtype();
}
inline void ProtoOADepositWithdraw::_internal_set_operationtype(::ProtoOAChangeBalanceType value) {
  assert(::ProtoOAChangeBalanceType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  operationtype_ = value;
}
inline void ProtoOADepositWithdraw::set_operationtype(::ProtoOAChangeBalanceType value) {
  _internal_set_operationtype(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.operationType)
}

// required int64 balanceHistoryId = 2;
inline bool ProtoOADepositWithdraw::_internal_has_balancehistoryid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_balancehistoryid() const {
  return _internal_has_balancehistoryid();
}
inline void ProtoOADepositWithdraw::clear_balancehistoryid() {
  balancehistoryid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_balancehistoryid() const {
  return balancehistoryid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::balancehistoryid() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.balanceHistoryId)
  return _internal_balancehistoryid();
}
inline void ProtoOADepositWithdraw::_internal_set_balancehistoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  balancehistoryid_ = value;
}
inline void ProtoOADepositWithdraw::set_balancehistoryid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balancehistoryid(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.balanceHistoryId)
}

// required int64 balance = 3;
inline bool ProtoOADepositWithdraw::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_balance() const {
  return _internal_has_balance();
}
inline void ProtoOADepositWithdraw::clear_balance() {
  balance_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::balance() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.balance)
  return _internal_balance();
}
inline void ProtoOADepositWithdraw::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  balance_ = value;
}
inline void ProtoOADepositWithdraw::set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.balance)
}

// required int64 delta = 4;
inline bool ProtoOADepositWithdraw::_internal_has_delta() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_delta() const {
  return _internal_has_delta();
}
inline void ProtoOADepositWithdraw::clear_delta() {
  delta_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_delta() const {
  return delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::delta() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.delta)
  return _internal_delta();
}
inline void ProtoOADepositWithdraw::_internal_set_delta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  delta_ = value;
}
inline void ProtoOADepositWithdraw::set_delta(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.delta)
}

// required int64 changeBalanceTimestamp = 5;
inline bool ProtoOADepositWithdraw::_internal_has_changebalancetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_changebalancetimestamp() const {
  return _internal_has_changebalancetimestamp();
}
inline void ProtoOADepositWithdraw::clear_changebalancetimestamp() {
  changebalancetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_changebalancetimestamp() const {
  return changebalancetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::changebalancetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.changeBalanceTimestamp)
  return _internal_changebalancetimestamp();
}
inline void ProtoOADepositWithdraw::_internal_set_changebalancetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  changebalancetimestamp_ = value;
}
inline void ProtoOADepositWithdraw::set_changebalancetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_changebalancetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.changeBalanceTimestamp)
}

// optional string externalNote = 6;
inline bool ProtoOADepositWithdraw::_internal_has_externalnote() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_externalnote() const {
  return _internal_has_externalnote();
}
inline void ProtoOADepositWithdraw::clear_externalnote() {
  externalnote_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOADepositWithdraw::externalnote() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.externalNote)
  return _internal_externalnote();
}
inline void ProtoOADepositWithdraw::set_externalnote(const std::string& value) {
  _internal_set_externalnote(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.externalNote)
}
inline std::string* ProtoOADepositWithdraw::mutable_externalnote() {
  // @@protoc_insertion_point(field_mutable:ProtoOADepositWithdraw.externalNote)
  return _internal_mutable_externalnote();
}
inline const std::string& ProtoOADepositWithdraw::_internal_externalnote() const {
  return externalnote_.Get();
}
inline void ProtoOADepositWithdraw::_internal_set_externalnote(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOADepositWithdraw::set_externalnote(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOADepositWithdraw.externalNote)
}
inline void ProtoOADepositWithdraw::set_externalnote(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOADepositWithdraw.externalNote)
}
inline void ProtoOADepositWithdraw::set_externalnote(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  externalnote_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOADepositWithdraw.externalNote)
}
inline std::string* ProtoOADepositWithdraw::_internal_mutable_externalnote() {
  _has_bits_[0] |= 0x00000001u;
  return externalnote_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOADepositWithdraw::release_externalnote() {
  // @@protoc_insertion_point(field_release:ProtoOADepositWithdraw.externalNote)
  if (!_internal_has_externalnote()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return externalnote_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOADepositWithdraw::set_allocated_externalnote(std::string* externalnote) {
  if (externalnote != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  externalnote_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), externalnote,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOADepositWithdraw.externalNote)
}

// optional int64 balanceVersion = 7;
inline bool ProtoOADepositWithdraw::_internal_has_balanceversion() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_balanceversion() const {
  return _internal_has_balanceversion();
}
inline void ProtoOADepositWithdraw::clear_balanceversion() {
  balanceversion_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_balanceversion() const {
  return balanceversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::balanceversion() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.balanceVersion)
  return _internal_balanceversion();
}
inline void ProtoOADepositWithdraw::_internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  balanceversion_ = value;
}
inline void ProtoOADepositWithdraw::set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balanceversion(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.balanceVersion)
}

// optional int64 equity = 8;
inline bool ProtoOADepositWithdraw::_internal_has_equity() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_equity() const {
  return _internal_has_equity();
}
inline void ProtoOADepositWithdraw::clear_equity() {
  equity_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::_internal_equity() const {
  return equity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADepositWithdraw::equity() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.equity)
  return _internal_equity();
}
inline void ProtoOADepositWithdraw::_internal_set_equity(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  equity_ = value;
}
inline void ProtoOADepositWithdraw::set_equity(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_equity(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.equity)
}

// optional uint32 moneyDigits = 9;
inline bool ProtoOADepositWithdraw::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOADepositWithdraw::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOADepositWithdraw::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOADepositWithdraw::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOADepositWithdraw::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOADepositWithdraw.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOADepositWithdraw::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  moneydigits_ = value;
}
inline void ProtoOADepositWithdraw::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOADepositWithdraw.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOADeal

// required int64 dealId = 1;
inline bool ProtoOADeal::_internal_has_dealid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOADeal::has_dealid() const {
  return _internal_has_dealid();
}
inline void ProtoOADeal::clear_dealid() {
  dealid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_dealid() const {
  return dealid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::dealid() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.dealId)
  return _internal_dealid();
}
inline void ProtoOADeal::_internal_set_dealid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  dealid_ = value;
}
inline void ProtoOADeal::set_dealid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_dealid(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.dealId)
}

// required int64 orderId = 2;
inline bool ProtoOADeal::_internal_has_orderid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOADeal::has_orderid() const {
  return _internal_has_orderid();
}
inline void ProtoOADeal::clear_orderid() {
  orderid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_orderid() const {
  return orderid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::orderid() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.orderId)
  return _internal_orderid();
}
inline void ProtoOADeal::_internal_set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  orderid_ = value;
}
inline void ProtoOADeal::set_orderid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_orderid(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.orderId)
}

// required int64 positionId = 3;
inline bool ProtoOADeal::_internal_has_positionid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOADeal::has_positionid() const {
  return _internal_has_positionid();
}
inline void ProtoOADeal::clear_positionid() {
  positionid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_positionid() const {
  return positionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::positionid() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.positionId)
  return _internal_positionid();
}
inline void ProtoOADeal::_internal_set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  positionid_ = value;
}
inline void ProtoOADeal::set_positionid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_positionid(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.positionId)
}

// required int64 volume = 4;
inline bool ProtoOADeal::_internal_has_volume() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOADeal::has_volume() const {
  return _internal_has_volume();
}
inline void ProtoOADeal::clear_volume() {
  volume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::volume() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.volume)
  return _internal_volume();
}
inline void ProtoOADeal::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  volume_ = value;
}
inline void ProtoOADeal::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.volume)
}

// required int64 filledVolume = 5;
inline bool ProtoOADeal::_internal_has_filledvolume() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOADeal::has_filledvolume() const {
  return _internal_has_filledvolume();
}
inline void ProtoOADeal::clear_filledvolume() {
  filledvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_filledvolume() const {
  return filledvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::filledvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.filledVolume)
  return _internal_filledvolume();
}
inline void ProtoOADeal::_internal_set_filledvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  filledvolume_ = value;
}
inline void ProtoOADeal::set_filledvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_filledvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.filledVolume)
}

// required int64 symbolId = 6;
inline bool ProtoOADeal::_internal_has_symbolid() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOADeal::has_symbolid() const {
  return _internal_has_symbolid();
}
inline void ProtoOADeal::clear_symbolid() {
  symbolid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_symbolid() const {
  return symbolid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::symbolid() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.symbolId)
  return _internal_symbolid();
}
inline void ProtoOADeal::_internal_set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  symbolid_ = value;
}
inline void ProtoOADeal::set_symbolid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_symbolid(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.symbolId)
}

// required int64 createTimestamp = 7;
inline bool ProtoOADeal::_internal_has_createtimestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOADeal::has_createtimestamp() const {
  return _internal_has_createtimestamp();
}
inline void ProtoOADeal::clear_createtimestamp() {
  createtimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_createtimestamp() const {
  return createtimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::createtimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.createTimestamp)
  return _internal_createtimestamp();
}
inline void ProtoOADeal::_internal_set_createtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  createtimestamp_ = value;
}
inline void ProtoOADeal::set_createtimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_createtimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.createTimestamp)
}

// required int64 executionTimestamp = 8;
inline bool ProtoOADeal::_internal_has_executiontimestamp() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOADeal::has_executiontimestamp() const {
  return _internal_has_executiontimestamp();
}
inline void ProtoOADeal::clear_executiontimestamp() {
  executiontimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_executiontimestamp() const {
  return executiontimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::executiontimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.executionTimestamp)
  return _internal_executiontimestamp();
}
inline void ProtoOADeal::_internal_set_executiontimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000100u;
  executiontimestamp_ = value;
}
inline void ProtoOADeal::set_executiontimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_executiontimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.executionTimestamp)
}

// optional int64 utcLastUpdateTimestamp = 9;
inline bool ProtoOADeal::_internal_has_utclastupdatetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ProtoOADeal::has_utclastupdatetimestamp() const {
  return _internal_has_utclastupdatetimestamp();
}
inline void ProtoOADeal::clear_utclastupdatetimestamp() {
  utclastupdatetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_utclastupdatetimestamp() const {
  return utclastupdatetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::utclastupdatetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.utcLastUpdateTimestamp)
  return _internal_utclastupdatetimestamp();
}
inline void ProtoOADeal::_internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000200u;
  utclastupdatetimestamp_ = value;
}
inline void ProtoOADeal::set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_utclastupdatetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.utcLastUpdateTimestamp)
}

// optional double executionPrice = 10;
inline bool ProtoOADeal::_internal_has_executionprice() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool ProtoOADeal::has_executionprice() const {
  return _internal_has_executionprice();
}
inline void ProtoOADeal::clear_executionprice() {
  executionprice_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double ProtoOADeal::_internal_executionprice() const {
  return executionprice_;
}
inline double ProtoOADeal::executionprice() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.executionPrice)
  return _internal_executionprice();
}
inline void ProtoOADeal::_internal_set_executionprice(double value) {
  _has_bits_[0] |= 0x00000400u;
  executionprice_ = value;
}
inline void ProtoOADeal::set_executionprice(double value) {
  _internal_set_executionprice(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.executionPrice)
}

// required .ProtoOATradeSide tradeSide = 11;
inline bool ProtoOADeal::_internal_has_tradeside() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool ProtoOADeal::has_tradeside() const {
  return _internal_has_tradeside();
}
inline void ProtoOADeal::clear_tradeside() {
  tradeside_ = 1;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::ProtoOATradeSide ProtoOADeal::_internal_tradeside() const {
  return static_cast< ::ProtoOATradeSide >(tradeside_);
}
inline ::ProtoOATradeSide ProtoOADeal::tradeside() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.tradeSide)
  return _internal_tradeside();
}
inline void ProtoOADeal::_internal_set_tradeside(::ProtoOATradeSide value) {
  assert(::ProtoOATradeSide_IsValid(value));
  _has_bits_[0] |= 0x00008000u;
  tradeside_ = value;
}
inline void ProtoOADeal::set_tradeside(::ProtoOATradeSide value) {
  _internal_set_tradeside(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.tradeSide)
}

// required .ProtoOADealStatus dealStatus = 12;
inline bool ProtoOADeal::_internal_has_dealstatus() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool ProtoOADeal::has_dealstatus() const {
  return _internal_has_dealstatus();
}
inline void ProtoOADeal::clear_dealstatus() {
  dealstatus_ = 2;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::ProtoOADealStatus ProtoOADeal::_internal_dealstatus() const {
  return static_cast< ::ProtoOADealStatus >(dealstatus_);
}
inline ::ProtoOADealStatus ProtoOADeal::dealstatus() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.dealStatus)
  return _internal_dealstatus();
}
inline void ProtoOADeal::_internal_set_dealstatus(::ProtoOADealStatus value) {
  assert(::ProtoOADealStatus_IsValid(value));
  _has_bits_[0] |= 0x00010000u;
  dealstatus_ = value;
}
inline void ProtoOADeal::set_dealstatus(::ProtoOADealStatus value) {
  _internal_set_dealstatus(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.dealStatus)
}

// optional double marginRate = 13;
inline bool ProtoOADeal::_internal_has_marginrate() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool ProtoOADeal::has_marginrate() const {
  return _internal_has_marginrate();
}
inline void ProtoOADeal::clear_marginrate() {
  marginrate_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline double ProtoOADeal::_internal_marginrate() const {
  return marginrate_;
}
inline double ProtoOADeal::marginrate() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.marginRate)
  return _internal_marginrate();
}
inline void ProtoOADeal::_internal_set_marginrate(double value) {
  _has_bits_[0] |= 0x00000800u;
  marginrate_ = value;
}
inline void ProtoOADeal::set_marginrate(double value) {
  _internal_set_marginrate(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.marginRate)
}

// optional int64 commission = 14;
inline bool ProtoOADeal::_internal_has_commission() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ProtoOADeal::has_commission() const {
  return _internal_has_commission();
}
inline void ProtoOADeal::clear_commission() {
  commission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::_internal_commission() const {
  return commission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOADeal::commission() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.commission)
  return _internal_commission();
}
inline void ProtoOADeal::_internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00001000u;
  commission_ = value;
}
inline void ProtoOADeal::set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_commission(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.commission)
}

// optional double baseToUsdConversionRate = 15;
inline bool ProtoOADeal::_internal_has_basetousdconversionrate() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool ProtoOADeal::has_basetousdconversionrate() const {
  return _internal_has_basetousdconversionrate();
}
inline void ProtoOADeal::clear_basetousdconversionrate() {
  basetousdconversionrate_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline double ProtoOADeal::_internal_basetousdconversionrate() const {
  return basetousdconversionrate_;
}
inline double ProtoOADeal::basetousdconversionrate() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.baseToUsdConversionRate)
  return _internal_basetousdconversionrate();
}
inline void ProtoOADeal::_internal_set_basetousdconversionrate(double value) {
  _has_bits_[0] |= 0x00002000u;
  basetousdconversionrate_ = value;
}
inline void ProtoOADeal::set_basetousdconversionrate(double value) {
  _internal_set_basetousdconversionrate(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.baseToUsdConversionRate)
}

// optional .ProtoOAClosePositionDetail closePositionDetail = 16;
inline bool ProtoOADeal::_internal_has_closepositiondetail() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || closepositiondetail_ != nullptr);
  return value;
}
inline bool ProtoOADeal::has_closepositiondetail() const {
  return _internal_has_closepositiondetail();
}
inline void ProtoOADeal::clear_closepositiondetail() {
  if (closepositiondetail_ != nullptr) closepositiondetail_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ProtoOAClosePositionDetail& ProtoOADeal::_internal_closepositiondetail() const {
  const ::ProtoOAClosePositionDetail* p = closepositiondetail_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoOAClosePositionDetail&>(
      ::_ProtoOAClosePositionDetail_default_instance_);
}
inline const ::ProtoOAClosePositionDetail& ProtoOADeal::closepositiondetail() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.closePositionDetail)
  return _internal_closepositiondetail();
}
inline void ProtoOADeal::unsafe_arena_set_allocated_closepositiondetail(
    ::ProtoOAClosePositionDetail* closepositiondetail) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(closepositiondetail_);
  }
  closepositiondetail_ = closepositiondetail;
  if (closepositiondetail) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoOADeal.closePositionDetail)
}
inline ::ProtoOAClosePositionDetail* ProtoOADeal::release_closepositiondetail() {
  _has_bits_[0] &= ~0x00000001u;
  ::ProtoOAClosePositionDetail* temp = closepositiondetail_;
  closepositiondetail_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProtoOAClosePositionDetail* ProtoOADeal::unsafe_arena_release_closepositiondetail() {
  // @@protoc_insertion_point(field_release:ProtoOADeal.closePositionDetail)
  _has_bits_[0] &= ~0x00000001u;
  ::ProtoOAClosePositionDetail* temp = closepositiondetail_;
  closepositiondetail_ = nullptr;
  return temp;
}
inline ::ProtoOAClosePositionDetail* ProtoOADeal::_internal_mutable_closepositiondetail() {
  _has_bits_[0] |= 0x00000001u;
  if (closepositiondetail_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoOAClosePositionDetail>(GetArena());
    closepositiondetail_ = p;
  }
  return closepositiondetail_;
}
inline ::ProtoOAClosePositionDetail* ProtoOADeal::mutable_closepositiondetail() {
  // @@protoc_insertion_point(field_mutable:ProtoOADeal.closePositionDetail)
  return _internal_mutable_closepositiondetail();
}
inline void ProtoOADeal::set_allocated_closepositiondetail(::ProtoOAClosePositionDetail* closepositiondetail) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete closepositiondetail_;
  }
  if (closepositiondetail) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(closepositiondetail);
    if (message_arena != submessage_arena) {
      closepositiondetail = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, closepositiondetail, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  closepositiondetail_ = closepositiondetail;
  // @@protoc_insertion_point(field_set_allocated:ProtoOADeal.closePositionDetail)
}

// optional uint32 moneyDigits = 17;
inline bool ProtoOADeal::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool ProtoOADeal::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOADeal::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOADeal::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOADeal::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOADeal.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOADeal::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  moneydigits_ = value;
}
inline void ProtoOADeal::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOADeal.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOAClosePositionDetail

// required double entryPrice = 1;
inline bool ProtoOAClosePositionDetail::_internal_has_entryprice() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_entryprice() const {
  return _internal_has_entryprice();
}
inline void ProtoOAClosePositionDetail::clear_entryprice() {
  entryprice_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double ProtoOAClosePositionDetail::_internal_entryprice() const {
  return entryprice_;
}
inline double ProtoOAClosePositionDetail::entryprice() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.entryPrice)
  return _internal_entryprice();
}
inline void ProtoOAClosePositionDetail::_internal_set_entryprice(double value) {
  _has_bits_[0] |= 0x00000001u;
  entryprice_ = value;
}
inline void ProtoOAClosePositionDetail::set_entryprice(double value) {
  _internal_set_entryprice(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.entryPrice)
}

// required int64 grossProfit = 2;
inline bool ProtoOAClosePositionDetail::_internal_has_grossprofit() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_grossprofit() const {
  return _internal_has_grossprofit();
}
inline void ProtoOAClosePositionDetail::clear_grossprofit() {
  grossprofit_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_grossprofit() const {
  return grossprofit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::grossprofit() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.grossProfit)
  return _internal_grossprofit();
}
inline void ProtoOAClosePositionDetail::_internal_set_grossprofit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  grossprofit_ = value;
}
inline void ProtoOAClosePositionDetail::set_grossprofit(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_grossprofit(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.grossProfit)
}

// required int64 swap = 3;
inline bool ProtoOAClosePositionDetail::_internal_has_swap() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_swap() const {
  return _internal_has_swap();
}
inline void ProtoOAClosePositionDetail::clear_swap() {
  swap_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_swap() const {
  return swap_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::swap() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.swap)
  return _internal_swap();
}
inline void ProtoOAClosePositionDetail::_internal_set_swap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  swap_ = value;
}
inline void ProtoOAClosePositionDetail::set_swap(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_swap(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.swap)
}

// required int64 commission = 4;
inline bool ProtoOAClosePositionDetail::_internal_has_commission() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_commission() const {
  return _internal_has_commission();
}
inline void ProtoOAClosePositionDetail::clear_commission() {
  commission_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_commission() const {
  return commission_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::commission() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.commission)
  return _internal_commission();
}
inline void ProtoOAClosePositionDetail::_internal_set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  commission_ = value;
}
inline void ProtoOAClosePositionDetail::set_commission(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_commission(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.commission)
}

// required int64 balance = 5;
inline bool ProtoOAClosePositionDetail::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_balance() const {
  return _internal_has_balance();
}
inline void ProtoOAClosePositionDetail::clear_balance() {
  balance_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::balance() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.balance)
  return _internal_balance();
}
inline void ProtoOAClosePositionDetail::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  balance_ = value;
}
inline void ProtoOAClosePositionDetail::set_balance(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.balance)
}

// optional double quoteToDepositConversionRate = 6;
inline bool ProtoOAClosePositionDetail::_internal_has_quotetodepositconversionrate() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_quotetodepositconversionrate() const {
  return _internal_has_quotetodepositconversionrate();
}
inline void ProtoOAClosePositionDetail::clear_quotetodepositconversionrate() {
  quotetodepositconversionrate_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline double ProtoOAClosePositionDetail::_internal_quotetodepositconversionrate() const {
  return quotetodepositconversionrate_;
}
inline double ProtoOAClosePositionDetail::quotetodepositconversionrate() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.quoteToDepositConversionRate)
  return _internal_quotetodepositconversionrate();
}
inline void ProtoOAClosePositionDetail::_internal_set_quotetodepositconversionrate(double value) {
  _has_bits_[0] |= 0x00000020u;
  quotetodepositconversionrate_ = value;
}
inline void ProtoOAClosePositionDetail::set_quotetodepositconversionrate(double value) {
  _internal_set_quotetodepositconversionrate(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.quoteToDepositConversionRate)
}

// optional int64 closedVolume = 7;
inline bool ProtoOAClosePositionDetail::_internal_has_closedvolume() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_closedvolume() const {
  return _internal_has_closedvolume();
}
inline void ProtoOAClosePositionDetail::clear_closedvolume() {
  closedvolume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_closedvolume() const {
  return closedvolume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::closedvolume() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.closedVolume)
  return _internal_closedvolume();
}
inline void ProtoOAClosePositionDetail::_internal_set_closedvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000040u;
  closedvolume_ = value;
}
inline void ProtoOAClosePositionDetail::set_closedvolume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_closedvolume(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.closedVolume)
}

// optional int64 balanceVersion = 8;
inline bool ProtoOAClosePositionDetail::_internal_has_balanceversion() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_balanceversion() const {
  return _internal_has_balanceversion();
}
inline void ProtoOAClosePositionDetail::clear_balanceversion() {
  balanceversion_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::_internal_balanceversion() const {
  return balanceversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAClosePositionDetail::balanceversion() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.balanceVersion)
  return _internal_balanceversion();
}
inline void ProtoOAClosePositionDetail::_internal_set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000080u;
  balanceversion_ = value;
}
inline void ProtoOAClosePositionDetail::set_balanceversion(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_balanceversion(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.balanceVersion)
}

// optional uint32 moneyDigits = 9;
inline bool ProtoOAClosePositionDetail::_internal_has_moneydigits() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ProtoOAClosePositionDetail::has_moneydigits() const {
  return _internal_has_moneydigits();
}
inline void ProtoOAClosePositionDetail::clear_moneydigits() {
  moneydigits_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAClosePositionDetail::_internal_moneydigits() const {
  return moneydigits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOAClosePositionDetail::moneydigits() const {
  // @@protoc_insertion_point(field_get:ProtoOAClosePositionDetail.moneyDigits)
  return _internal_moneydigits();
}
inline void ProtoOAClosePositionDetail::_internal_set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  moneydigits_ = value;
}
inline void ProtoOAClosePositionDetail::set_moneydigits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_moneydigits(value);
  // @@protoc_insertion_point(field_set:ProtoOAClosePositionDetail.moneyDigits)
}

// -------------------------------------------------------------------

// ProtoOATrendbar

// required int64 volume = 3;
inline bool ProtoOATrendbar::_internal_has_volume() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_volume() const {
  return _internal_has_volume();
}
inline void ProtoOATrendbar::clear_volume() {
  volume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrendbar::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrendbar::volume() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.volume)
  return _internal_volume();
}
inline void ProtoOATrendbar::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  volume_ = value;
}
inline void ProtoOATrendbar::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.volume)
}

// optional .ProtoOATrendbarPeriod period = 4 [default = M1];
inline bool ProtoOATrendbar::_internal_has_period() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_period() const {
  return _internal_has_period();
}
inline void ProtoOATrendbar::clear_period() {
  period_ = 1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::ProtoOATrendbarPeriod ProtoOATrendbar::_internal_period() const {
  return static_cast< ::ProtoOATrendbarPeriod >(period_);
}
inline ::ProtoOATrendbarPeriod ProtoOATrendbar::period() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.period)
  return _internal_period();
}
inline void ProtoOATrendbar::_internal_set_period(::ProtoOATrendbarPeriod value) {
  assert(::ProtoOATrendbarPeriod_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  period_ = value;
}
inline void ProtoOATrendbar::set_period(::ProtoOATrendbarPeriod value) {
  _internal_set_period(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.period)
}

// optional int64 low = 5;
inline bool ProtoOATrendbar::_internal_has_low() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_low() const {
  return _internal_has_low();
}
inline void ProtoOATrendbar::clear_low() {
  low_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrendbar::_internal_low() const {
  return low_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATrendbar::low() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.low)
  return _internal_low();
}
inline void ProtoOATrendbar::_internal_set_low(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  low_ = value;
}
inline void ProtoOATrendbar::set_low(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_low(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.low)
}

// optional uint64 deltaOpen = 6;
inline bool ProtoOATrendbar::_internal_has_deltaopen() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_deltaopen() const {
  return _internal_has_deltaopen();
}
inline void ProtoOATrendbar::clear_deltaopen() {
  deltaopen_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::_internal_deltaopen() const {
  return deltaopen_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::deltaopen() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.deltaOpen)
  return _internal_deltaopen();
}
inline void ProtoOATrendbar::_internal_set_deltaopen(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  deltaopen_ = value;
}
inline void ProtoOATrendbar::set_deltaopen(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_deltaopen(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.deltaOpen)
}

// optional uint64 deltaClose = 7;
inline bool ProtoOATrendbar::_internal_has_deltaclose() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_deltaclose() const {
  return _internal_has_deltaclose();
}
inline void ProtoOATrendbar::clear_deltaclose() {
  deltaclose_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::_internal_deltaclose() const {
  return deltaclose_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::deltaclose() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.deltaClose)
  return _internal_deltaclose();
}
inline void ProtoOATrendbar::_internal_set_deltaclose(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  deltaclose_ = value;
}
inline void ProtoOATrendbar::set_deltaclose(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_deltaclose(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.deltaClose)
}

// optional uint64 deltaHigh = 8;
inline bool ProtoOATrendbar::_internal_has_deltahigh() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_deltahigh() const {
  return _internal_has_deltahigh();
}
inline void ProtoOATrendbar::clear_deltahigh() {
  deltahigh_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::_internal_deltahigh() const {
  return deltahigh_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOATrendbar::deltahigh() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.deltaHigh)
  return _internal_deltahigh();
}
inline void ProtoOATrendbar::_internal_set_deltahigh(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000010u;
  deltahigh_ = value;
}
inline void ProtoOATrendbar::set_deltahigh(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_deltahigh(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.deltaHigh)
}

// optional uint32 utcTimestampInMinutes = 9;
inline bool ProtoOATrendbar::_internal_has_utctimestampinminutes() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOATrendbar::has_utctimestampinminutes() const {
  return _internal_has_utctimestampinminutes();
}
inline void ProtoOATrendbar::clear_utctimestampinminutes() {
  utctimestampinminutes_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrendbar::_internal_utctimestampinminutes() const {
  return utctimestampinminutes_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ProtoOATrendbar::utctimestampinminutes() const {
  // @@protoc_insertion_point(field_get:ProtoOATrendbar.utcTimestampInMinutes)
  return _internal_utctimestampinminutes();
}
inline void ProtoOATrendbar::_internal_set_utctimestampinminutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  utctimestampinminutes_ = value;
}
inline void ProtoOATrendbar::set_utctimestampinminutes(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_utctimestampinminutes(value);
  // @@protoc_insertion_point(field_set:ProtoOATrendbar.utcTimestampInMinutes)
}

// -------------------------------------------------------------------

// ProtoOAExpectedMargin

// required int64 volume = 1;
inline bool ProtoOAExpectedMargin::_internal_has_volume() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAExpectedMargin::has_volume() const {
  return _internal_has_volume();
}
inline void ProtoOAExpectedMargin::clear_volume() {
  volume_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::_internal_volume() const {
  return volume_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::volume() const {
  // @@protoc_insertion_point(field_get:ProtoOAExpectedMargin.volume)
  return _internal_volume();
}
inline void ProtoOAExpectedMargin::_internal_set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  volume_ = value;
}
inline void ProtoOAExpectedMargin::set_volume(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_volume(value);
  // @@protoc_insertion_point(field_set:ProtoOAExpectedMargin.volume)
}

// required int64 buyMargin = 2;
inline bool ProtoOAExpectedMargin::_internal_has_buymargin() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAExpectedMargin::has_buymargin() const {
  return _internal_has_buymargin();
}
inline void ProtoOAExpectedMargin::clear_buymargin() {
  buymargin_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::_internal_buymargin() const {
  return buymargin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::buymargin() const {
  // @@protoc_insertion_point(field_get:ProtoOAExpectedMargin.buyMargin)
  return _internal_buymargin();
}
inline void ProtoOAExpectedMargin::_internal_set_buymargin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  buymargin_ = value;
}
inline void ProtoOAExpectedMargin::set_buymargin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_buymargin(value);
  // @@protoc_insertion_point(field_set:ProtoOAExpectedMargin.buyMargin)
}

// required int64 sellMargin = 3;
inline bool ProtoOAExpectedMargin::_internal_has_sellmargin() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAExpectedMargin::has_sellmargin() const {
  return _internal_has_sellmargin();
}
inline void ProtoOAExpectedMargin::clear_sellmargin() {
  sellmargin_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::_internal_sellmargin() const {
  return sellmargin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAExpectedMargin::sellmargin() const {
  // @@protoc_insertion_point(field_get:ProtoOAExpectedMargin.sellMargin)
  return _internal_sellmargin();
}
inline void ProtoOAExpectedMargin::_internal_set_sellmargin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  sellmargin_ = value;
}
inline void ProtoOAExpectedMargin::set_sellmargin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_sellmargin(value);
  // @@protoc_insertion_point(field_set:ProtoOAExpectedMargin.sellMargin)
}

// -------------------------------------------------------------------

// ProtoOATickData

// required int64 timestamp = 1;
inline bool ProtoOATickData::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOATickData::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void ProtoOATickData::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATickData::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATickData::timestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOATickData.timestamp)
  return _internal_timestamp();
}
inline void ProtoOATickData::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
}
inline void ProtoOATickData::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOATickData.timestamp)
}

// required int64 tick = 2;
inline bool ProtoOATickData::_internal_has_tick() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOATickData::has_tick() const {
  return _internal_has_tick();
}
inline void ProtoOATickData::clear_tick() {
  tick_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATickData::_internal_tick() const {
  return tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOATickData::tick() const {
  // @@protoc_insertion_point(field_get:ProtoOATickData.tick)
  return _internal_tick();
}
inline void ProtoOATickData::_internal_set_tick(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  tick_ = value;
}
inline void ProtoOATickData::set_tick(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_tick(value);
  // @@protoc_insertion_point(field_set:ProtoOATickData.tick)
}

// -------------------------------------------------------------------

// ProtoOACtidProfile

// required int64 userId = 1;
inline bool ProtoOACtidProfile::_internal_has_userid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOACtidProfile::has_userid() const {
  return _internal_has_userid();
}
inline void ProtoOACtidProfile::clear_userid() {
  userid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOACtidProfile::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOACtidProfile::userid() const {
  // @@protoc_insertion_point(field_get:ProtoOACtidProfile.userId)
  return _internal_userid();
}
inline void ProtoOACtidProfile::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  userid_ = value;
}
inline void ProtoOACtidProfile::set_userid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:ProtoOACtidProfile.userId)
}

// -------------------------------------------------------------------

// ProtoOACtidTraderAccount

// required uint64 ctidTraderAccountId = 1;
inline bool ProtoOACtidTraderAccount::_internal_has_ctidtraderaccountid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOACtidTraderAccount::has_ctidtraderaccountid() const {
  return _internal_has_ctidtraderaccountid();
}
inline void ProtoOACtidTraderAccount::clear_ctidtraderaccountid() {
  ctidtraderaccountid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOACtidTraderAccount::_internal_ctidtraderaccountid() const {
  return ctidtraderaccountid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOACtidTraderAccount::ctidtraderaccountid() const {
  // @@protoc_insertion_point(field_get:ProtoOACtidTraderAccount.ctidTraderAccountId)
  return _internal_ctidtraderaccountid();
}
inline void ProtoOACtidTraderAccount::_internal_set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  ctidtraderaccountid_ = value;
}
inline void ProtoOACtidTraderAccount::set_ctidtraderaccountid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_ctidtraderaccountid(value);
  // @@protoc_insertion_point(field_set:ProtoOACtidTraderAccount.ctidTraderAccountId)
}

// optional bool isLive = 2;
inline bool ProtoOACtidTraderAccount::_internal_has_islive() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOACtidTraderAccount::has_islive() const {
  return _internal_has_islive();
}
inline void ProtoOACtidTraderAccount::clear_islive() {
  islive_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool ProtoOACtidTraderAccount::_internal_islive() const {
  return islive_;
}
inline bool ProtoOACtidTraderAccount::islive() const {
  // @@protoc_insertion_point(field_get:ProtoOACtidTraderAccount.isLive)
  return _internal_islive();
}
inline void ProtoOACtidTraderAccount::_internal_set_islive(bool value) {
  _has_bits_[0] |= 0x00000004u;
  islive_ = value;
}
inline void ProtoOACtidTraderAccount::set_islive(bool value) {
  _internal_set_islive(value);
  // @@protoc_insertion_point(field_set:ProtoOACtidTraderAccount.isLive)
}

// optional int64 traderLogin = 3;
inline bool ProtoOACtidTraderAccount::_internal_has_traderlogin() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOACtidTraderAccount::has_traderlogin() const {
  return _internal_has_traderlogin();
}
inline void ProtoOACtidTraderAccount::clear_traderlogin() {
  traderlogin_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOACtidTraderAccount::_internal_traderlogin() const {
  return traderlogin_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOACtidTraderAccount::traderlogin() const {
  // @@protoc_insertion_point(field_get:ProtoOACtidTraderAccount.traderLogin)
  return _internal_traderlogin();
}
inline void ProtoOACtidTraderAccount::_internal_set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  traderlogin_ = value;
}
inline void ProtoOACtidTraderAccount::set_traderlogin(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_traderlogin(value);
  // @@protoc_insertion_point(field_set:ProtoOACtidTraderAccount.traderLogin)
}

// -------------------------------------------------------------------

// ProtoOAAssetClass

// optional int64 id = 1;
inline bool ProtoOAAssetClass::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAAssetClass::has_id() const {
  return _internal_has_id();
}
inline void ProtoOAAssetClass::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAAssetClass::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAAssetClass::id() const {
  // @@protoc_insertion_point(field_get:ProtoOAAssetClass.id)
  return _internal_id();
}
inline void ProtoOAAssetClass::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void ProtoOAAssetClass::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoOAAssetClass.id)
}

// optional string name = 2;
inline bool ProtoOAAssetClass::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAAssetClass::has_name() const {
  return _internal_has_name();
}
inline void ProtoOAAssetClass::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOAAssetClass::name() const {
  // @@protoc_insertion_point(field_get:ProtoOAAssetClass.name)
  return _internal_name();
}
inline void ProtoOAAssetClass::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoOAAssetClass.name)
}
inline std::string* ProtoOAAssetClass::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoOAAssetClass.name)
  return _internal_mutable_name();
}
inline const std::string& ProtoOAAssetClass::_internal_name() const {
  return name_.Get();
}
inline void ProtoOAAssetClass::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAAssetClass::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAAssetClass.name)
}
inline void ProtoOAAssetClass::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAAssetClass.name)
}
inline void ProtoOAAssetClass::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAAssetClass.name)
}
inline std::string* ProtoOAAssetClass::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAAssetClass::release_name() {
  // @@protoc_insertion_point(field_release:ProtoOAAssetClass.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAAssetClass::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAAssetClass.name)
}

// -------------------------------------------------------------------

// ProtoOADepthQuote

// required uint64 id = 1;
inline bool ProtoOADepthQuote::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOADepthQuote::has_id() const {
  return _internal_has_id();
}
inline void ProtoOADepthQuote::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::id() const {
  // @@protoc_insertion_point(field_get:ProtoOADepthQuote.id)
  return _internal_id();
}
inline void ProtoOADepthQuote::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void ProtoOADepthQuote::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoOADepthQuote.id)
}

// required uint64 size = 3;
inline bool ProtoOADepthQuote::_internal_has_size() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOADepthQuote::has_size() const {
  return _internal_has_size();
}
inline void ProtoOADepthQuote::clear_size() {
  size_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::size() const {
  // @@protoc_insertion_point(field_get:ProtoOADepthQuote.size)
  return _internal_size();
}
inline void ProtoOADepthQuote::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  size_ = value;
}
inline void ProtoOADepthQuote::set_size(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:ProtoOADepthQuote.size)
}

// optional uint64 bid = 4;
inline bool ProtoOADepthQuote::_internal_has_bid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOADepthQuote::has_bid() const {
  return _internal_has_bid();
}
inline void ProtoOADepthQuote::clear_bid() {
  bid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::_internal_bid() const {
  return bid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::bid() const {
  // @@protoc_insertion_point(field_get:ProtoOADepthQuote.bid)
  return _internal_bid();
}
inline void ProtoOADepthQuote::_internal_set_bid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  bid_ = value;
}
inline void ProtoOADepthQuote::set_bid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_bid(value);
  // @@protoc_insertion_point(field_set:ProtoOADepthQuote.bid)
}

// optional uint64 ask = 5;
inline bool ProtoOADepthQuote::_internal_has_ask() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOADepthQuote::has_ask() const {
  return _internal_has_ask();
}
inline void ProtoOADepthQuote::clear_ask() {
  ask_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::_internal_ask() const {
  return ask_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ProtoOADepthQuote::ask() const {
  // @@protoc_insertion_point(field_get:ProtoOADepthQuote.ask)
  return _internal_ask();
}
inline void ProtoOADepthQuote::_internal_set_ask(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  ask_ = value;
}
inline void ProtoOADepthQuote::set_ask(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_ask(value);
  // @@protoc_insertion_point(field_set:ProtoOADepthQuote.ask)
}

// -------------------------------------------------------------------

// ProtoOAMarginCall

// required .ProtoOANotificationType marginCallType = 1;
inline bool ProtoOAMarginCall::_internal_has_margincalltype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAMarginCall::has_margincalltype() const {
  return _internal_has_margincalltype();
}
inline void ProtoOAMarginCall::clear_margincalltype() {
  margincalltype_ = 61;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::ProtoOANotificationType ProtoOAMarginCall::_internal_margincalltype() const {
  return static_cast< ::ProtoOANotificationType >(margincalltype_);
}
inline ::ProtoOANotificationType ProtoOAMarginCall::margincalltype() const {
  // @@protoc_insertion_point(field_get:ProtoOAMarginCall.marginCallType)
  return _internal_margincalltype();
}
inline void ProtoOAMarginCall::_internal_set_margincalltype(::ProtoOANotificationType value) {
  assert(::ProtoOANotificationType_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  margincalltype_ = value;
}
inline void ProtoOAMarginCall::set_margincalltype(::ProtoOANotificationType value) {
  _internal_set_margincalltype(value);
  // @@protoc_insertion_point(field_set:ProtoOAMarginCall.marginCallType)
}

// required double marginLevelThreshold = 2;
inline bool ProtoOAMarginCall::_internal_has_marginlevelthreshold() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAMarginCall::has_marginlevelthreshold() const {
  return _internal_has_marginlevelthreshold();
}
inline void ProtoOAMarginCall::clear_marginlevelthreshold() {
  marginlevelthreshold_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double ProtoOAMarginCall::_internal_marginlevelthreshold() const {
  return marginlevelthreshold_;
}
inline double ProtoOAMarginCall::marginlevelthreshold() const {
  // @@protoc_insertion_point(field_get:ProtoOAMarginCall.marginLevelThreshold)
  return _internal_marginlevelthreshold();
}
inline void ProtoOAMarginCall::_internal_set_marginlevelthreshold(double value) {
  _has_bits_[0] |= 0x00000001u;
  marginlevelthreshold_ = value;
}
inline void ProtoOAMarginCall::set_marginlevelthreshold(double value) {
  _internal_set_marginlevelthreshold(value);
  // @@protoc_insertion_point(field_set:ProtoOAMarginCall.marginLevelThreshold)
}

// optional int64 utcLastUpdateTimestamp = 3;
inline bool ProtoOAMarginCall::_internal_has_utclastupdatetimestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAMarginCall::has_utclastupdatetimestamp() const {
  return _internal_has_utclastupdatetimestamp();
}
inline void ProtoOAMarginCall::clear_utclastupdatetimestamp() {
  utclastupdatetimestamp_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAMarginCall::_internal_utclastupdatetimestamp() const {
  return utclastupdatetimestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAMarginCall::utclastupdatetimestamp() const {
  // @@protoc_insertion_point(field_get:ProtoOAMarginCall.utcLastUpdateTimestamp)
  return _internal_utclastupdatetimestamp();
}
inline void ProtoOAMarginCall::_internal_set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000002u;
  utclastupdatetimestamp_ = value;
}
inline void ProtoOAMarginCall::set_utclastupdatetimestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_utclastupdatetimestamp(value);
  // @@protoc_insertion_point(field_set:ProtoOAMarginCall.utcLastUpdateTimestamp)
}

// -------------------------------------------------------------------

// ProtoOAHoliday

// required int64 holidayId = 1;
inline bool ProtoOAHoliday::_internal_has_holidayid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_holidayid() const {
  return _internal_has_holidayid();
}
inline void ProtoOAHoliday::clear_holidayid() {
  holidayid_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAHoliday::_internal_holidayid() const {
  return holidayid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAHoliday::holidayid() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.holidayId)
  return _internal_holidayid();
}
inline void ProtoOAHoliday::_internal_set_holidayid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000008u;
  holidayid_ = value;
}
inline void ProtoOAHoliday::set_holidayid(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_holidayid(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.holidayId)
}

// required string name = 2;
inline bool ProtoOAHoliday::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_name() const {
  return _internal_has_name();
}
inline void ProtoOAHoliday::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ProtoOAHoliday::name() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.name)
  return _internal_name();
}
inline void ProtoOAHoliday::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.name)
}
inline std::string* ProtoOAHoliday::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoOAHoliday.name)
  return _internal_mutable_name();
}
inline const std::string& ProtoOAHoliday::_internal_name() const {
  return name_.Get();
}
inline void ProtoOAHoliday::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAHoliday::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAHoliday.name)
}
inline void ProtoOAHoliday::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAHoliday.name)
}
inline void ProtoOAHoliday::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAHoliday.name)
}
inline std::string* ProtoOAHoliday::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAHoliday::release_name() {
  // @@protoc_insertion_point(field_release:ProtoOAHoliday.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAHoliday::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAHoliday.name)
}

// optional string description = 3;
inline bool ProtoOAHoliday::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_description() const {
  return _internal_has_description();
}
inline void ProtoOAHoliday::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ProtoOAHoliday::description() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.description)
  return _internal_description();
}
inline void ProtoOAHoliday::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.description)
}
inline std::string* ProtoOAHoliday::mutable_description() {
  // @@protoc_insertion_point(field_mutable:ProtoOAHoliday.description)
  return _internal_mutable_description();
}
inline const std::string& ProtoOAHoliday::_internal_description() const {
  return description_.Get();
}
inline void ProtoOAHoliday::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAHoliday::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAHoliday.description)
}
inline void ProtoOAHoliday::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAHoliday.description)
}
inline void ProtoOAHoliday::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAHoliday.description)
}
inline std::string* ProtoOAHoliday::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000002u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAHoliday::release_description() {
  // @@protoc_insertion_point(field_release:ProtoOAHoliday.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAHoliday::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAHoliday.description)
}

// required string scheduleTimeZone = 4;
inline bool ProtoOAHoliday::_internal_has_scheduletimezone() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_scheduletimezone() const {
  return _internal_has_scheduletimezone();
}
inline void ProtoOAHoliday::clear_scheduletimezone() {
  scheduletimezone_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& ProtoOAHoliday::scheduletimezone() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.scheduleTimeZone)
  return _internal_scheduletimezone();
}
inline void ProtoOAHoliday::set_scheduletimezone(const std::string& value) {
  _internal_set_scheduletimezone(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.scheduleTimeZone)
}
inline std::string* ProtoOAHoliday::mutable_scheduletimezone() {
  // @@protoc_insertion_point(field_mutable:ProtoOAHoliday.scheduleTimeZone)
  return _internal_mutable_scheduletimezone();
}
inline const std::string& ProtoOAHoliday::_internal_scheduletimezone() const {
  return scheduletimezone_.Get();
}
inline void ProtoOAHoliday::_internal_set_scheduletimezone(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ProtoOAHoliday::set_scheduletimezone(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  scheduletimezone_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoOAHoliday.scheduleTimeZone)
}
inline void ProtoOAHoliday::set_scheduletimezone(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoOAHoliday.scheduleTimeZone)
}
inline void ProtoOAHoliday::set_scheduletimezone(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  scheduletimezone_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoOAHoliday.scheduleTimeZone)
}
inline std::string* ProtoOAHoliday::_internal_mutable_scheduletimezone() {
  _has_bits_[0] |= 0x00000004u;
  return scheduletimezone_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ProtoOAHoliday::release_scheduletimezone() {
  // @@protoc_insertion_point(field_release:ProtoOAHoliday.scheduleTimeZone)
  if (!_internal_has_scheduletimezone()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return scheduletimezone_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ProtoOAHoliday::set_allocated_scheduletimezone(std::string* scheduletimezone) {
  if (scheduletimezone != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  scheduletimezone_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), scheduletimezone,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoOAHoliday.scheduleTimeZone)
}

// required int64 holidayDate = 5;
inline bool ProtoOAHoliday::_internal_has_holidaydate() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_holidaydate() const {
  return _internal_has_holidaydate();
}
inline void ProtoOAHoliday::clear_holidaydate() {
  holidaydate_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAHoliday::_internal_holidaydate() const {
  return holidaydate_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ProtoOAHoliday::holidaydate() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.holidayDate)
  return _internal_holidaydate();
}
inline void ProtoOAHoliday::_internal_set_holidaydate(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  holidaydate_ = value;
}
inline void ProtoOAHoliday::set_holidaydate(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_holidaydate(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.holidayDate)
}

// required bool isRecurring = 6;
inline bool ProtoOAHoliday::_internal_has_isrecurring() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_isrecurring() const {
  return _internal_has_isrecurring();
}
inline void ProtoOAHoliday::clear_isrecurring() {
  isrecurring_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool ProtoOAHoliday::_internal_isrecurring() const {
  return isrecurring_;
}
inline bool ProtoOAHoliday::isrecurring() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.isRecurring)
  return _internal_isrecurring();
}
inline void ProtoOAHoliday::_internal_set_isrecurring(bool value) {
  _has_bits_[0] |= 0x00000020u;
  isrecurring_ = value;
}
inline void ProtoOAHoliday::set_isrecurring(bool value) {
  _internal_set_isrecurring(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.isRecurring)
}

// optional int32 startSecond = 7;
inline bool ProtoOAHoliday::_internal_has_startsecond() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_startsecond() const {
  return _internal_has_startsecond();
}
inline void ProtoOAHoliday::clear_startsecond() {
  startsecond_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAHoliday::_internal_startsecond() const {
  return startsecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAHoliday::startsecond() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.startSecond)
  return _internal_startsecond();
}
inline void ProtoOAHoliday::_internal_set_startsecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  startsecond_ = value;
}
inline void ProtoOAHoliday::set_startsecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_startsecond(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.startSecond)
}

// optional int32 endSecond = 8;
inline bool ProtoOAHoliday::_internal_has_endsecond() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ProtoOAHoliday::has_endsecond() const {
  return _internal_has_endsecond();
}
inline void ProtoOAHoliday::clear_endsecond() {
  endsecond_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAHoliday::_internal_endsecond() const {
  return endsecond_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ProtoOAHoliday::endsecond() const {
  // @@protoc_insertion_point(field_get:ProtoOAHoliday.endSecond)
  return _internal_endsecond();
}
inline void ProtoOAHoliday::_internal_set_endsecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  endsecond_ = value;
}
inline void ProtoOAHoliday::set_endsecond(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_endsecond(value);
  // @@protoc_insertion_point(field_set:ProtoOAHoliday.endSecond)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ProtoOAPayloadType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAPayloadType>() {
  return ::ProtoOAPayloadType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOADayOfWeek> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOADayOfWeek>() {
  return ::ProtoOADayOfWeek_descriptor();
}
template <> struct is_proto_enum< ::ProtoOACommissionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOACommissionType>() {
  return ::ProtoOACommissionType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOASymbolDistanceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOASymbolDistanceType>() {
  return ::ProtoOASymbolDistanceType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAMinCommissionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAMinCommissionType>() {
  return ::ProtoOAMinCommissionType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOATradingMode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOATradingMode>() {
  return ::ProtoOATradingMode_descriptor();
}
template <> struct is_proto_enum< ::ProtoOASwapCalculationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOASwapCalculationType>() {
  return ::ProtoOASwapCalculationType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAAccessRights> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAAccessRights>() {
  return ::ProtoOAAccessRights_descriptor();
}
template <> struct is_proto_enum< ::ProtoOATotalMarginCalculationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOATotalMarginCalculationType>() {
  return ::ProtoOATotalMarginCalculationType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAAccountType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAAccountType>() {
  return ::ProtoOAAccountType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAPositionStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAPositionStatus>() {
  return ::ProtoOAPositionStatus_descriptor();
}
template <> struct is_proto_enum< ::ProtoOATradeSide> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOATradeSide>() {
  return ::ProtoOATradeSide_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAOrderType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAOrderType>() {
  return ::ProtoOAOrderType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOATimeInForce> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOATimeInForce>() {
  return ::ProtoOATimeInForce_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAOrderStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAOrderStatus>() {
  return ::ProtoOAOrderStatus_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAOrderTriggerMethod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAOrderTriggerMethod>() {
  return ::ProtoOAOrderTriggerMethod_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAExecutionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAExecutionType>() {
  return ::ProtoOAExecutionType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAChangeBonusType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAChangeBonusType>() {
  return ::ProtoOAChangeBonusType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAChangeBalanceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAChangeBalanceType>() {
  return ::ProtoOAChangeBalanceType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOADealStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOADealStatus>() {
  return ::ProtoOADealStatus_descriptor();
}
template <> struct is_proto_enum< ::ProtoOATrendbarPeriod> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOATrendbarPeriod>() {
  return ::ProtoOATrendbarPeriod_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAQuoteType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAQuoteType>() {
  return ::ProtoOAQuoteType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAClientPermissionScope> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAClientPermissionScope>() {
  return ::ProtoOAClientPermissionScope_descriptor();
}
template <> struct is_proto_enum< ::ProtoOANotificationType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOANotificationType>() {
  return ::ProtoOANotificationType_descriptor();
}
template <> struct is_proto_enum< ::ProtoOAErrorCode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOAErrorCode>() {
  return ::ProtoOAErrorCode_descriptor();
}
template <> struct is_proto_enum< ::ProtoOALimitedRiskMarginCalculationStrategy> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoOALimitedRiskMarginCalculationStrategy>() {
  return ::ProtoOALimitedRiskMarginCalculationStrategy_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_OpenApiModelMessages_2eproto
