// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenApiMessages.proto

#include "OpenApiMessages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAArchivedSymbol_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAsset_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAssetClass_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOABonusDepositWithdraw_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOACtidProfile_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOACtidTraderAccount_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOADeal_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOADepositWithdraw_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOADepthQuote_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAExpectedMargin_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOALightSymbol_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAMarginCall_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAOrder_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAPosition_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProtoOASymbol_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolCategory_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOATickData_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOATrader_OpenApiModelMessages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_OpenApiModelMessages_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOATrendbar_OpenApiModelMessages_2eproto;
class ProtoOAApplicationAuthReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAApplicationAuthReq> _instance;
} _ProtoOAApplicationAuthReq_default_instance_;
class ProtoOAApplicationAuthResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAApplicationAuthRes> _instance;
} _ProtoOAApplicationAuthRes_default_instance_;
class ProtoOAAccountAuthReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountAuthReq> _instance;
} _ProtoOAAccountAuthReq_default_instance_;
class ProtoOAAccountAuthResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountAuthRes> _instance;
} _ProtoOAAccountAuthRes_default_instance_;
class ProtoOAErrorResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAErrorRes> _instance;
} _ProtoOAErrorRes_default_instance_;
class ProtoOAClientDisconnectEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAClientDisconnectEvent> _instance;
} _ProtoOAClientDisconnectEvent_default_instance_;
class ProtoOAAccountsTokenInvalidatedEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountsTokenInvalidatedEvent> _instance;
} _ProtoOAAccountsTokenInvalidatedEvent_default_instance_;
class ProtoOAVersionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAVersionReq> _instance;
} _ProtoOAVersionReq_default_instance_;
class ProtoOAVersionResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAVersionRes> _instance;
} _ProtoOAVersionRes_default_instance_;
class ProtoOANewOrderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOANewOrderReq> _instance;
} _ProtoOANewOrderReq_default_instance_;
class ProtoOAExecutionEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAExecutionEvent> _instance;
} _ProtoOAExecutionEvent_default_instance_;
class ProtoOACancelOrderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOACancelOrderReq> _instance;
} _ProtoOACancelOrderReq_default_instance_;
class ProtoOAAmendOrderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAmendOrderReq> _instance;
} _ProtoOAAmendOrderReq_default_instance_;
class ProtoOAAmendPositionSLTPReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAmendPositionSLTPReq> _instance;
} _ProtoOAAmendPositionSLTPReq_default_instance_;
class ProtoOAClosePositionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAClosePositionReq> _instance;
} _ProtoOAClosePositionReq_default_instance_;
class ProtoOATrailingSLChangedEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOATrailingSLChangedEvent> _instance;
} _ProtoOATrailingSLChangedEvent_default_instance_;
class ProtoOAAssetListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAssetListReq> _instance;
} _ProtoOAAssetListReq_default_instance_;
class ProtoOAAssetListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAssetListRes> _instance;
} _ProtoOAAssetListRes_default_instance_;
class ProtoOASymbolsListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolsListReq> _instance;
} _ProtoOASymbolsListReq_default_instance_;
class ProtoOASymbolsListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolsListRes> _instance;
} _ProtoOASymbolsListRes_default_instance_;
class ProtoOASymbolByIdReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolByIdReq> _instance;
} _ProtoOASymbolByIdReq_default_instance_;
class ProtoOASymbolByIdResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolByIdRes> _instance;
} _ProtoOASymbolByIdRes_default_instance_;
class ProtoOASymbolsForConversionReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolsForConversionReq> _instance;
} _ProtoOASymbolsForConversionReq_default_instance_;
class ProtoOASymbolsForConversionResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolsForConversionRes> _instance;
} _ProtoOASymbolsForConversionRes_default_instance_;
class ProtoOASymbolChangedEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolChangedEvent> _instance;
} _ProtoOASymbolChangedEvent_default_instance_;
class ProtoOAAssetClassListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAssetClassListReq> _instance;
} _ProtoOAAssetClassListReq_default_instance_;
class ProtoOAAssetClassListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAssetClassListRes> _instance;
} _ProtoOAAssetClassListRes_default_instance_;
class ProtoOATraderReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOATraderReq> _instance;
} _ProtoOATraderReq_default_instance_;
class ProtoOATraderResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOATraderRes> _instance;
} _ProtoOATraderRes_default_instance_;
class ProtoOATraderUpdatedEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOATraderUpdatedEvent> _instance;
} _ProtoOATraderUpdatedEvent_default_instance_;
class ProtoOAReconcileReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAReconcileReq> _instance;
} _ProtoOAReconcileReq_default_instance_;
class ProtoOAReconcileResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAReconcileRes> _instance;
} _ProtoOAReconcileRes_default_instance_;
class ProtoOAOrderErrorEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAOrderErrorEvent> _instance;
} _ProtoOAOrderErrorEvent_default_instance_;
class ProtoOADealListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOADealListReq> _instance;
} _ProtoOADealListReq_default_instance_;
class ProtoOADealListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOADealListRes> _instance;
} _ProtoOADealListRes_default_instance_;
class ProtoOAExpectedMarginReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAExpectedMarginReq> _instance;
} _ProtoOAExpectedMarginReq_default_instance_;
class ProtoOAExpectedMarginResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAExpectedMarginRes> _instance;
} _ProtoOAExpectedMarginRes_default_instance_;
class ProtoOAMarginChangedEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginChangedEvent> _instance;
} _ProtoOAMarginChangedEvent_default_instance_;
class ProtoOACashFlowHistoryListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOACashFlowHistoryListReq> _instance;
} _ProtoOACashFlowHistoryListReq_default_instance_;
class ProtoOACashFlowHistoryListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOACashFlowHistoryListRes> _instance;
} _ProtoOACashFlowHistoryListRes_default_instance_;
class ProtoOAGetAccountListByAccessTokenReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetAccountListByAccessTokenReq> _instance;
} _ProtoOAGetAccountListByAccessTokenReq_default_instance_;
class ProtoOAGetAccountListByAccessTokenResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetAccountListByAccessTokenRes> _instance;
} _ProtoOAGetAccountListByAccessTokenRes_default_instance_;
class ProtoOARefreshTokenReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOARefreshTokenReq> _instance;
} _ProtoOARefreshTokenReq_default_instance_;
class ProtoOARefreshTokenResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOARefreshTokenRes> _instance;
} _ProtoOARefreshTokenRes_default_instance_;
class ProtoOASubscribeSpotsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeSpotsReq> _instance;
} _ProtoOASubscribeSpotsReq_default_instance_;
class ProtoOASubscribeSpotsResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeSpotsRes> _instance;
} _ProtoOASubscribeSpotsRes_default_instance_;
class ProtoOAUnsubscribeSpotsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeSpotsReq> _instance;
} _ProtoOAUnsubscribeSpotsReq_default_instance_;
class ProtoOAUnsubscribeSpotsResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeSpotsRes> _instance;
} _ProtoOAUnsubscribeSpotsRes_default_instance_;
class ProtoOASpotEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASpotEvent> _instance;
} _ProtoOASpotEvent_default_instance_;
class ProtoOASubscribeLiveTrendbarReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeLiveTrendbarReq> _instance;
} _ProtoOASubscribeLiveTrendbarReq_default_instance_;
class ProtoOASubscribeLiveTrendbarResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeLiveTrendbarRes> _instance;
} _ProtoOASubscribeLiveTrendbarRes_default_instance_;
class ProtoOAUnsubscribeLiveTrendbarReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeLiveTrendbarReq> _instance;
} _ProtoOAUnsubscribeLiveTrendbarReq_default_instance_;
class ProtoOAUnsubscribeLiveTrendbarResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeLiveTrendbarRes> _instance;
} _ProtoOAUnsubscribeLiveTrendbarRes_default_instance_;
class ProtoOAGetTrendbarsReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetTrendbarsReq> _instance;
} _ProtoOAGetTrendbarsReq_default_instance_;
class ProtoOAGetTrendbarsResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetTrendbarsRes> _instance;
} _ProtoOAGetTrendbarsRes_default_instance_;
class ProtoOAGetTickDataReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetTickDataReq> _instance;
} _ProtoOAGetTickDataReq_default_instance_;
class ProtoOAGetTickDataResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetTickDataRes> _instance;
} _ProtoOAGetTickDataRes_default_instance_;
class ProtoOAGetCtidProfileByTokenReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetCtidProfileByTokenReq> _instance;
} _ProtoOAGetCtidProfileByTokenReq_default_instance_;
class ProtoOAGetCtidProfileByTokenResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAGetCtidProfileByTokenRes> _instance;
} _ProtoOAGetCtidProfileByTokenRes_default_instance_;
class ProtoOADepthEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOADepthEvent> _instance;
} _ProtoOADepthEvent_default_instance_;
class ProtoOASubscribeDepthQuotesReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeDepthQuotesReq> _instance;
} _ProtoOASubscribeDepthQuotesReq_default_instance_;
class ProtoOASubscribeDepthQuotesResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASubscribeDepthQuotesRes> _instance;
} _ProtoOASubscribeDepthQuotesRes_default_instance_;
class ProtoOAUnsubscribeDepthQuotesReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeDepthQuotesReq> _instance;
} _ProtoOAUnsubscribeDepthQuotesReq_default_instance_;
class ProtoOAUnsubscribeDepthQuotesResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAUnsubscribeDepthQuotesRes> _instance;
} _ProtoOAUnsubscribeDepthQuotesRes_default_instance_;
class ProtoOASymbolCategoryListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolCategoryListReq> _instance;
} _ProtoOASymbolCategoryListReq_default_instance_;
class ProtoOASymbolCategoryListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOASymbolCategoryListRes> _instance;
} _ProtoOASymbolCategoryListRes_default_instance_;
class ProtoOAAccountLogoutReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountLogoutReq> _instance;
} _ProtoOAAccountLogoutReq_default_instance_;
class ProtoOAAccountLogoutResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountLogoutRes> _instance;
} _ProtoOAAccountLogoutRes_default_instance_;
class ProtoOAAccountDisconnectEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAAccountDisconnectEvent> _instance;
} _ProtoOAAccountDisconnectEvent_default_instance_;
class ProtoOAMarginCallListReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallListReq> _instance;
} _ProtoOAMarginCallListReq_default_instance_;
class ProtoOAMarginCallListResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallListRes> _instance;
} _ProtoOAMarginCallListRes_default_instance_;
class ProtoOAMarginCallUpdateReqDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallUpdateReq> _instance;
} _ProtoOAMarginCallUpdateReq_default_instance_;
class ProtoOAMarginCallUpdateResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallUpdateRes> _instance;
} _ProtoOAMarginCallUpdateRes_default_instance_;
class ProtoOAMarginCallUpdateEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallUpdateEvent> _instance;
} _ProtoOAMarginCallUpdateEvent_default_instance_;
class ProtoOAMarginCallTriggerEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoOAMarginCallTriggerEvent> _instance;
} _ProtoOAMarginCallTriggerEvent_default_instance_;
static void InitDefaultsscc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountAuthReq_default_instance_;
    new (ptr) ::ProtoOAAccountAuthReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAccountAuthRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountAuthRes_default_instance_;
    new (ptr) ::ProtoOAAccountAuthRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountAuthRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountAuthRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAccountDisconnectEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountDisconnectEvent_default_instance_;
    new (ptr) ::ProtoOAAccountDisconnectEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountDisconnectEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountDisconnectEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAccountLogoutReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountLogoutReq_default_instance_;
    new (ptr) ::ProtoOAAccountLogoutReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountLogoutReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountLogoutReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAccountLogoutRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountLogoutRes_default_instance_;
    new (ptr) ::ProtoOAAccountLogoutRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountLogoutRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountLogoutRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAccountsTokenInvalidatedEvent_default_instance_;
    new (ptr) ::ProtoOAAccountsTokenInvalidatedEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAmendOrderReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAmendOrderReq_default_instance_;
    new (ptr) ::ProtoOAAmendOrderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAmendOrderReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAmendOrderReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAmendPositionSLTPReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAmendPositionSLTPReq_default_instance_;
    new (ptr) ::ProtoOAAmendPositionSLTPReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAmendPositionSLTPReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAmendPositionSLTPReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAApplicationAuthReq_default_instance_;
    new (ptr) ::ProtoOAApplicationAuthReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAApplicationAuthRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAApplicationAuthRes_default_instance_;
    new (ptr) ::ProtoOAApplicationAuthRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAApplicationAuthRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAApplicationAuthRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAssetClassListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAssetClassListReq_default_instance_;
    new (ptr) ::ProtoOAAssetClassListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAssetClassListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAssetClassListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAssetClassListRes_default_instance_;
    new (ptr) ::ProtoOAAssetClassListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAAssetClass_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAAssetListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAssetListReq_default_instance_;
    new (ptr) ::ProtoOAAssetListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAAssetListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAAssetListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAAssetListRes_default_instance_;
    new (ptr) ::ProtoOAAssetListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAAsset_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOACancelOrderReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOACancelOrderReq_default_instance_;
    new (ptr) ::ProtoOACancelOrderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOACancelOrderReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOACancelOrderReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOACashFlowHistoryListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOACashFlowHistoryListReq_default_instance_;
    new (ptr) ::ProtoOACashFlowHistoryListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOACashFlowHistoryListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOACashFlowHistoryListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOACashFlowHistoryListRes_default_instance_;
    new (ptr) ::ProtoOACashFlowHistoryListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOADepositWithdraw_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAClientDisconnectEvent_default_instance_;
    new (ptr) ::ProtoOAClientDisconnectEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAClosePositionReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAClosePositionReq_default_instance_;
    new (ptr) ::ProtoOAClosePositionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAClosePositionReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAClosePositionReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOADealListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOADealListReq_default_instance_;
    new (ptr) ::ProtoOADealListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOADealListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOADealListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOADealListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOADealListRes_default_instance_;
    new (ptr) ::ProtoOADealListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOADealListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOADealListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOADeal_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOADepthEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOADepthEvent_default_instance_;
    new (ptr) ::ProtoOADepthEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOADepthEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOADepthEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOADepthQuote_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAErrorRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAErrorRes_default_instance_;
    new (ptr) ::ProtoOAErrorRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAErrorRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAErrorRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAExecutionEvent_default_instance_;
    new (ptr) ::ProtoOAExecutionEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAPosition_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOAOrder_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOADeal_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOABonusDepositWithdraw_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOADepositWithdraw_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAExpectedMarginReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAExpectedMarginReq_default_instance_;
    new (ptr) ::ProtoOAExpectedMarginReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAExpectedMarginReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAExpectedMarginReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAExpectedMarginRes_default_instance_;
    new (ptr) ::ProtoOAExpectedMarginRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAExpectedMargin_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetAccountListByAccessTokenReq_default_instance_;
    new (ptr) ::ProtoOAGetAccountListByAccessTokenReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetAccountListByAccessTokenRes_default_instance_;
    new (ptr) ::ProtoOAGetAccountListByAccessTokenRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOACtidTraderAccount_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetCtidProfileByTokenReq_default_instance_;
    new (ptr) ::ProtoOAGetCtidProfileByTokenReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetCtidProfileByTokenRes_default_instance_;
    new (ptr) ::ProtoOAGetCtidProfileByTokenRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOACtidProfile_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAGetTickDataReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetTickDataReq_default_instance_;
    new (ptr) ::ProtoOAGetTickDataReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAGetTickDataReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAGetTickDataReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetTickDataRes_default_instance_;
    new (ptr) ::ProtoOAGetTickDataRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOATickData_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAGetTrendbarsReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetTrendbarsReq_default_instance_;
    new (ptr) ::ProtoOAGetTrendbarsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAGetTrendbarsReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAGetTrendbarsReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAGetTrendbarsRes_default_instance_;
    new (ptr) ::ProtoOAGetTrendbarsRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOATrendbar_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAMarginCallListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallListReq_default_instance_;
    new (ptr) ::ProtoOAMarginCallListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAMarginCallListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAMarginCallListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallListRes_default_instance_;
    new (ptr) ::ProtoOAMarginCallListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAMarginCall_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallTriggerEvent_default_instance_;
    new (ptr) ::ProtoOAMarginCallTriggerEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAMarginCall_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallUpdateEvent_default_instance_;
    new (ptr) ::ProtoOAMarginCallUpdateEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAMarginCall_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallUpdateReq_default_instance_;
    new (ptr) ::ProtoOAMarginCallUpdateReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAMarginCall_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOAMarginCallUpdateRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginCallUpdateRes_default_instance_;
    new (ptr) ::ProtoOAMarginCallUpdateRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAMarginCallUpdateRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAMarginCallUpdateRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAMarginChangedEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAMarginChangedEvent_default_instance_;
    new (ptr) ::ProtoOAMarginChangedEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAMarginChangedEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAMarginChangedEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOANewOrderReq_default_instance_;
    new (ptr) ::ProtoOANewOrderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAOrderErrorEvent_default_instance_;
    new (ptr) ::ProtoOAOrderErrorEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAReconcileReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAReconcileReq_default_instance_;
    new (ptr) ::ProtoOAReconcileReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAReconcileReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAReconcileReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAReconcileRes_default_instance_;
    new (ptr) ::ProtoOAReconcileRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOAPosition_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOAOrder_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOARefreshTokenReq_default_instance_;
    new (ptr) ::ProtoOARefreshTokenReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOARefreshTokenRes_default_instance_;
    new (ptr) ::ProtoOARefreshTokenRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASpotEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASpotEvent_default_instance_;
    new (ptr) ::ProtoOASpotEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOASpotEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOASpotEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOATrendbar_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOASubscribeDepthQuotesReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeDepthQuotesReq_default_instance_;
    new (ptr) ::ProtoOASubscribeDepthQuotesReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeDepthQuotesReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeDepthQuotesReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASubscribeDepthQuotesRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeDepthQuotesRes_default_instance_;
    new (ptr) ::ProtoOASubscribeDepthQuotesRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeDepthQuotesRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeDepthQuotesRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASubscribeLiveTrendbarReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeLiveTrendbarReq_default_instance_;
    new (ptr) ::ProtoOASubscribeLiveTrendbarReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeLiveTrendbarReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeLiveTrendbarReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASubscribeLiveTrendbarRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeLiveTrendbarRes_default_instance_;
    new (ptr) ::ProtoOASubscribeLiveTrendbarRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeLiveTrendbarRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeLiveTrendbarRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASubscribeSpotsReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeSpotsReq_default_instance_;
    new (ptr) ::ProtoOASubscribeSpotsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeSpotsReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeSpotsReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASubscribeSpotsRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASubscribeSpotsRes_default_instance_;
    new (ptr) ::ProtoOASubscribeSpotsRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASubscribeSpotsRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASubscribeSpotsRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolByIdReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolByIdReq_default_instance_;
    new (ptr) ::ProtoOASymbolByIdReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolByIdReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASymbolByIdReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolByIdRes_default_instance_;
    new (ptr) ::ProtoOASymbolByIdRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOASymbol_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOAArchivedSymbol_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOASymbolCategoryListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolCategoryListReq_default_instance_;
    new (ptr) ::ProtoOASymbolCategoryListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolCategoryListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASymbolCategoryListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolCategoryListRes_default_instance_;
    new (ptr) ::ProtoOASymbolCategoryListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOASymbolCategory_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOASymbolChangedEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolChangedEvent_default_instance_;
    new (ptr) ::ProtoOASymbolChangedEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolChangedEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASymbolChangedEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolsForConversionReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolsForConversionReq_default_instance_;
    new (ptr) ::ProtoOASymbolsForConversionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolsForConversionReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASymbolsForConversionReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolsForConversionRes_default_instance_;
    new (ptr) ::ProtoOASymbolsForConversionRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOALightSymbol_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOASymbolsListReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolsListReq_default_instance_;
    new (ptr) ::ProtoOASymbolsListReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOASymbolsListReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOASymbolsListReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOASymbolsListRes_default_instance_;
    new (ptr) ::ProtoOASymbolsListRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOALightSymbol_OpenApiModelMessages_2eproto.base,
      &scc_info_ProtoOAArchivedSymbol_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOATraderReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOATraderReq_default_instance_;
    new (ptr) ::ProtoOATraderReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOATraderReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOATraderReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOATraderRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOATraderRes_default_instance_;
    new (ptr) ::ProtoOATraderRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOATraderRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOATraderRes_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOATrader_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOATraderUpdatedEvent_default_instance_;
    new (ptr) ::ProtoOATraderUpdatedEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto}, {
      &scc_info_ProtoOATrader_OpenApiModelMessages_2eproto.base,}};

static void InitDefaultsscc_info_ProtoOATrailingSLChangedEvent_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOATrailingSLChangedEvent_default_instance_;
    new (ptr) ::ProtoOATrailingSLChangedEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOATrailingSLChangedEvent_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOATrailingSLChangedEvent_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeDepthQuotesReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeDepthQuotesReq_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeDepthQuotesReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeDepthQuotesReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeDepthQuotesReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeDepthQuotesRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeDepthQuotesRes_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeDepthQuotesRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeDepthQuotesRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeDepthQuotesRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeLiveTrendbarReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeLiveTrendbarReq_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeLiveTrendbarReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeLiveTrendbarReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeLiveTrendbarReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeLiveTrendbarRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeLiveTrendbarRes_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeLiveTrendbarRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeLiveTrendbarRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeLiveTrendbarRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeSpotsReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeSpotsReq_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeSpotsReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeSpotsReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeSpotsReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAUnsubscribeSpotsRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAUnsubscribeSpotsRes_default_instance_;
    new (ptr) ::ProtoOAUnsubscribeSpotsRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAUnsubscribeSpotsRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAUnsubscribeSpotsRes_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAVersionReq_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAVersionReq_default_instance_;
    new (ptr) ::ProtoOAVersionReq();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAVersionReq_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAVersionReq_OpenApiMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoOAVersionRes_OpenApiMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoOAVersionRes_default_instance_;
    new (ptr) ::ProtoOAVersionRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoOAVersionRes_OpenApiMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoOAVersionRes_OpenApiMessages_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_OpenApiMessages_2eproto[75];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_OpenApiMessages_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_OpenApiMessages_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_OpenApiMessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthReq, clientid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthReq, clientsecret_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAApplicationAuthRes, payloadtype_),
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthReq, accesstoken_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountAuthRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, description_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAErrorRes, maintenanceendtimestamp_),
  4,
  2,
  0,
  1,
  3,
  PROTOBUF_FIELD_OFFSET(::ProtoOAClientDisconnectEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClientDisconnectEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAClientDisconnectEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClientDisconnectEvent, reason_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountsTokenInvalidatedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountsTokenInvalidatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountsTokenInvalidatedEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountsTokenInvalidatedEvent, ctidtraderaccountids_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountsTokenInvalidatedEvent, reason_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionReq, payloadtype_),
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAVersionRes, version_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, symbolid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, ordertype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, tradeside_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, volume_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, limitprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, stopprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, timeinforce_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, stoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, takeprofit_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, comment_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, baseslippageprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, slippageinpoints_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, label_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, clientorderid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, relativestoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, relativetakeprofit_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, guaranteedstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, trailingstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOANewOrderReq, stoptriggermethod_),
  19,
  3,
  4,
  20,
  21,
  5,
  6,
  7,
  22,
  8,
  9,
  10,
  0,
  11,
  14,
  1,
  12,
  2,
  13,
  17,
  15,
  16,
  18,
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, executiontype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, position_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, order_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, deal_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, bonusdepositwithdraw_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, depositwithdraw_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExecutionEvent, isserverevent_),
  8,
  6,
  9,
  1,
  2,
  3,
  4,
  5,
  0,
  7,
  PROTOBUF_FIELD_OFFSET(::ProtoOACancelOrderReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACancelOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOACancelOrderReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACancelOrderReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACancelOrderReq, orderid_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, orderid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, volume_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, limitprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, stopprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, expirationtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, stoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, takeprofit_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, slippageinpoints_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, relativestoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, relativetakeprofit_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, guaranteedstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, trailingstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendOrderReq, stoptriggermethod_),
  13,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  10,
  8,
  9,
  11,
  12,
  14,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, stoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, takeprofit_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, guaranteedstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, trailingstoploss_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAmendPositionSLTPReq, stoplosstriggermethod_),
  6,
  0,
  1,
  2,
  3,
  4,
  5,
  7,
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAClosePositionReq, volume_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, orderid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, stopprice_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATrailingSLChangedEvent, utclastupdatetimestamp_),
  5,
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetListRes, asset_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListReq, includearchivedsymbols_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, symbol_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsListRes, archivedsymbol_),
  1,
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdReq, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, symbol_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolByIdRes, archivedsymbol_),
  1,
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, firstassetid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionReq, lastassetid_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolsForConversionRes, symbol_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolChangedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolChangedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolChangedEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolChangedEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolChangedEvent, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAssetClassListRes, assetclass_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderRes, trader_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderUpdatedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderUpdatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderUpdatedEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderUpdatedEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOATraderUpdatedEvent, trader_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, position_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAReconcileRes, order_),
  1,
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, orderid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAOrderErrorEvent, description_),
  5,
  3,
  0,
  2,
  4,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, fromtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, totimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListReq, maxrows_),
  4,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, deal_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADealListRes, hasmore_),
  2,
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, symbolid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginReq, volume_),
  2,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, margin_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAExpectedMarginRes, moneydigits_),
  2,
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, positionid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, usedmargin_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginChangedEvent, moneydigits_),
  4,
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, fromtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListReq, totimestamp_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOACashFlowHistoryListRes, depositwithdraw_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenReq, accesstoken_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, accesstoken_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, permissionscope_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetAccountListByAccessTokenRes, ctidtraderaccount_),
  2,
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenReq, refreshtoken_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, accesstoken_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, tokentype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, expiresin_),
  PROTOBUF_FIELD_OFFSET(::ProtoOARefreshTokenRes, refreshtoken_),
  4,
  0,
  1,
  3,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsReq, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeSpotsRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsReq, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeSpotsRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, symbolid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, bid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, ask_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, trendbar_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASpotEvent, sessionclose_),
  5,
  0,
  1,
  2,
  3,
  ~0u,
  4,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, period_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarReq, symbolid_),
  2,
  0,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeLiveTrendbarRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, period_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarReq, symbolid_),
  2,
  0,
  3,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeLiveTrendbarRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, fromtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, totimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, period_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsReq, symbolid_),
  4,
  0,
  1,
  2,
  5,
  3,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, period_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, timestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, trendbar_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTrendbarsRes, symbolid_),
  3,
  0,
  4,
  1,
  ~0u,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, symbolid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, type_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, fromtimestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataReq, totimestamp_),
  4,
  0,
  1,
  5,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, tickdata_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetTickDataRes, hasmore_),
  2,
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenReq, accesstoken_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAGetCtidProfileByTokenRes, profile_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, symbolid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, newquotes_),
  PROTOBUF_FIELD_OFFSET(::ProtoOADepthEvent, deletedquotes_),
  2,
  0,
  1,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesReq, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASubscribeDepthQuotesRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesReq, symbolid_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAUnsubscribeDepthQuotesRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListRes, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOASymbolCategoryListRes, symbolcategory_),
  1,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountLogoutRes, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountDisconnectEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountDisconnectEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountDisconnectEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAAccountDisconnectEvent, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListReq, ctidtraderaccountid_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallListRes, margincall_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateReq, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateReq, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateReq, margincall_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateRes, payloadtype_),
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallUpdateEvent, margincall_),
  2,
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallTriggerEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallTriggerEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallTriggerEvent, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallTriggerEvent, ctidtraderaccountid_),
  PROTOBUF_FIELD_OFFSET(::ProtoOAMarginCallTriggerEvent, margincall_),
  2,
  1,
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::ProtoOAApplicationAuthReq)},
  { 11, 17, sizeof(::ProtoOAApplicationAuthRes)},
  { 18, 26, sizeof(::ProtoOAAccountAuthReq)},
  { 29, 36, sizeof(::ProtoOAAccountAuthRes)},
  { 38, 48, sizeof(::ProtoOAErrorRes)},
  { 53, 60, sizeof(::ProtoOAClientDisconnectEvent)},
  { 62, 70, sizeof(::ProtoOAAccountsTokenInvalidatedEvent)},
  { 73, 79, sizeof(::ProtoOAVersionReq)},
  { 80, 87, sizeof(::ProtoOAVersionRes)},
  { 89, 117, sizeof(::ProtoOANewOrderReq)},
  { 140, 155, sizeof(::ProtoOAExecutionEvent)},
  { 165, 173, sizeof(::ProtoOACancelOrderReq)},
  { 176, 196, sizeof(::ProtoOAAmendOrderReq)},
  { 211, 224, sizeof(::ProtoOAAmendPositionSLTPReq)},
  { 232, 241, sizeof(::ProtoOAClosePositionReq)},
  { 245, 256, sizeof(::ProtoOATrailingSLChangedEvent)},
  { 262, 269, sizeof(::ProtoOAAssetListReq)},
  { 271, 279, sizeof(::ProtoOAAssetListRes)},
  { 282, 290, sizeof(::ProtoOASymbolsListReq)},
  { 293, 302, sizeof(::ProtoOASymbolsListRes)},
  { 306, 314, sizeof(::ProtoOASymbolByIdReq)},
  { 317, 326, sizeof(::ProtoOASymbolByIdRes)},
  { 330, 339, sizeof(::ProtoOASymbolsForConversionReq)},
  { 343, 351, sizeof(::ProtoOASymbolsForConversionRes)},
  { 354, 362, sizeof(::ProtoOASymbolChangedEvent)},
  { 365, 372, sizeof(::ProtoOAAssetClassListReq)},
  { 374, 382, sizeof(::ProtoOAAssetClassListRes)},
  { 385, 392, sizeof(::ProtoOATraderReq)},
  { 394, 402, sizeof(::ProtoOATraderRes)},
  { 405, 413, sizeof(::ProtoOATraderUpdatedEvent)},
  { 416, 423, sizeof(::ProtoOAReconcileReq)},
  { 425, 434, sizeof(::ProtoOAReconcileRes)},
  { 438, 449, sizeof(::ProtoOAOrderErrorEvent)},
  { 455, 465, sizeof(::ProtoOADealListReq)},
  { 470, 479, sizeof(::ProtoOADealListRes)},
  { 483, 492, sizeof(::ProtoOAExpectedMarginReq)},
  { 496, 505, sizeof(::ProtoOAExpectedMarginRes)},
  { 509, 519, sizeof(::ProtoOAMarginChangedEvent)},
  { 524, 533, sizeof(::ProtoOACashFlowHistoryListReq)},
  { 537, 545, sizeof(::ProtoOACashFlowHistoryListRes)},
  { 548, 555, sizeof(::ProtoOAGetAccountListByAccessTokenReq)},
  { 557, 566, sizeof(::ProtoOAGetAccountListByAccessTokenRes)},
  { 570, 577, sizeof(::ProtoOARefreshTokenReq)},
  { 579, 589, sizeof(::ProtoOARefreshTokenRes)},
  { 594, 602, sizeof(::ProtoOASubscribeSpotsReq)},
  { 605, 612, sizeof(::ProtoOASubscribeSpotsRes)},
  { 614, 622, sizeof(::ProtoOAUnsubscribeSpotsReq)},
  { 625, 632, sizeof(::ProtoOAUnsubscribeSpotsRes)},
  { 634, 646, sizeof(::ProtoOASpotEvent)},
  { 653, 662, sizeof(::ProtoOASubscribeLiveTrendbarReq)},
  { 666, 673, sizeof(::ProtoOASubscribeLiveTrendbarRes)},
  { 675, 684, sizeof(::ProtoOAUnsubscribeLiveTrendbarReq)},
  { 688, 695, sizeof(::ProtoOAUnsubscribeLiveTrendbarRes)},
  { 697, 708, sizeof(::ProtoOAGetTrendbarsReq)},
  { 714, 725, sizeof(::ProtoOAGetTrendbarsRes)},
  { 731, 742, sizeof(::ProtoOAGetTickDataReq)},
  { 748, 757, sizeof(::ProtoOAGetTickDataRes)},
  { 761, 768, sizeof(::ProtoOAGetCtidProfileByTokenReq)},
  { 770, 777, sizeof(::ProtoOAGetCtidProfileByTokenRes)},
  { 779, 789, sizeof(::ProtoOADepthEvent)},
  { 794, 802, sizeof(::ProtoOASubscribeDepthQuotesReq)},
  { 805, 812, sizeof(::ProtoOASubscribeDepthQuotesRes)},
  { 814, 822, sizeof(::ProtoOAUnsubscribeDepthQuotesReq)},
  { 825, 832, sizeof(::ProtoOAUnsubscribeDepthQuotesRes)},
  { 834, 841, sizeof(::ProtoOASymbolCategoryListReq)},
  { 843, 851, sizeof(::ProtoOASymbolCategoryListRes)},
  { 854, 861, sizeof(::ProtoOAAccountLogoutReq)},
  { 863, 870, sizeof(::ProtoOAAccountLogoutRes)},
  { 872, 879, sizeof(::ProtoOAAccountDisconnectEvent)},
  { 881, 888, sizeof(::ProtoOAMarginCallListReq)},
  { 890, 897, sizeof(::ProtoOAMarginCallListRes)},
  { 899, 907, sizeof(::ProtoOAMarginCallUpdateReq)},
  { 910, 916, sizeof(::ProtoOAMarginCallUpdateRes)},
  { 917, 925, sizeof(::ProtoOAMarginCallUpdateEvent)},
  { 928, 936, sizeof(::ProtoOAMarginCallTriggerEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAApplicationAuthReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAApplicationAuthRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountAuthReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountAuthRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAErrorRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAClientDisconnectEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountsTokenInvalidatedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAVersionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAVersionRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOANewOrderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAExecutionEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOACancelOrderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAmendOrderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAmendPositionSLTPReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAClosePositionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOATrailingSLChangedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAssetListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAssetListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolsListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolsListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolByIdReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolByIdRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolsForConversionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolsForConversionRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolChangedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAssetClassListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAssetClassListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOATraderReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOATraderRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOATraderUpdatedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAReconcileReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAReconcileRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAOrderErrorEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOADealListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOADealListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAExpectedMarginReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAExpectedMarginRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginChangedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOACashFlowHistoryListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOACashFlowHistoryListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetAccountListByAccessTokenReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetAccountListByAccessTokenRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOARefreshTokenReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOARefreshTokenRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeSpotsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeSpotsRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeSpotsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeSpotsRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASpotEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeLiveTrendbarReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeLiveTrendbarRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeLiveTrendbarReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeLiveTrendbarRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetTrendbarsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetTrendbarsRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetTickDataReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetTickDataRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetCtidProfileByTokenReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAGetCtidProfileByTokenRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOADepthEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeDepthQuotesReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASubscribeDepthQuotesRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeDepthQuotesReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAUnsubscribeDepthQuotesRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolCategoryListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOASymbolCategoryListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountLogoutReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountLogoutRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAAccountDisconnectEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallListReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallListRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallUpdateReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallUpdateRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallUpdateEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoOAMarginCallTriggerEvent_default_instance_),
};

const char descriptor_table_protodef_OpenApiMessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025OpenApiMessages.proto\032\032OpenApiModelMes"
  "sages.proto\"\214\001\n\031ProtoOAApplicationAuthRe"
  "q\022G\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadT"
  "ype:\035PROTO_OA_APPLICATION_AUTH_REQ\022\020\n\010cl"
  "ientId\030\002 \002(\t\022\024\n\014clientSecret\030\003 \002(\t\"d\n\031Pr"
  "otoOAApplicationAuthRes\022G\n\013payloadType\030\001"
  " \001(\0162\023.ProtoOAPayloadType:\035PROTO_OA_APPL"
  "ICATION_AUTH_RES\"\216\001\n\025ProtoOAAccountAuthR"
  "eq\022C\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayload"
  "Type:\031PROTO_OA_ACCOUNT_AUTH_REQ\022\033\n\023ctidT"
  "raderAccountId\030\002 \002(\003\022\023\n\013accessToken\030\003 \002("
  "\t\"y\n\025ProtoOAAccountAuthRes\022C\n\013payloadTyp"
  "e\030\001 \001(\0162\023.ProtoOAPayloadType:\031PROTO_OA_A"
  "CCOUNT_AUTH_RES\022\033\n\023ctidTraderAccountId\030\002"
  " \002(\003\"\265\001\n\017ProtoOAErrorRes\022<\n\013payloadType\030"
  "\001 \001(\0162\023.ProtoOAPayloadType:\022PROTO_OA_ERR"
  "OR_RES\022\033\n\023ctidTraderAccountId\030\002 \001(\003\022\021\n\te"
  "rrorCode\030\003 \002(\t\022\023\n\013description\030\004 \001(\t\022\037\n\027m"
  "aintenanceEndTimestamp\030\005 \001(\003\"z\n\034ProtoOAC"
  "lientDisconnectEvent\022J\n\013payloadType\030\001 \001("
  "\0162\023.ProtoOAPayloadType: PROTO_OA_CLIENT_"
  "DISCONNECT_EVENT\022\016\n\006reason\030\002 \001(\t\"\251\001\n$Pro"
  "toOAAccountsTokenInvalidatedEvent\022S\n\013pay"
  "loadType\030\001 \001(\0162\023.ProtoOAPayloadType:)PRO"
  "TO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT\022\034"
  "\n\024ctidTraderAccountIds\030\002 \003(\003\022\016\n\006reason\030\003"
  " \001(\t\"S\n\021ProtoOAVersionReq\022>\n\013payloadType"
  "\030\001 \001(\0162\023.ProtoOAPayloadType:\024PROTO_OA_VE"
  "RSION_REQ\"d\n\021ProtoOAVersionRes\022>\n\013payloa"
  "dType\030\001 \001(\0162\023.ProtoOAPayloadType:\024PROTO_"
  "OA_VERSION_RES\022\017\n\007version\030\002 \002(\t\"\261\005\n\022Prot"
  "oOANewOrderReq\022@\n\013payloadType\030\001 \001(\0162\023.Pr"
  "otoOAPayloadType:\026PROTO_OA_NEW_ORDER_REQ"
  "\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\020\n\010symbolI"
  "d\030\003 \002(\003\022$\n\torderType\030\004 \002(\0162\021.ProtoOAOrde"
  "rType\022$\n\ttradeSide\030\005 \002(\0162\021.ProtoOATradeS"
  "ide\022\016\n\006volume\030\006 \002(\003\022\022\n\nlimitPrice\030\007 \001(\001\022"
  "\021\n\tstopPrice\030\010 \001(\001\022:\n\013timeInForce\030\t \001(\0162"
  "\023.ProtoOATimeInForce:\020GOOD_TILL_CANCEL\022\033"
  "\n\023expirationTimestamp\030\n \001(\003\022\020\n\010stopLoss\030"
  "\013 \001(\001\022\022\n\ntakeProfit\030\014 \001(\001\022\017\n\007comment\030\r \001"
  "(\t\022\031\n\021baseSlippagePrice\030\016 \001(\001\022\030\n\020slippag"
  "eInPoints\030\017 \001(\005\022\r\n\005label\030\020 \001(\t\022\022\n\npositi"
  "onId\030\021 \001(\003\022\025\n\rclientOrderId\030\022 \001(\t\022\030\n\020rel"
  "ativeStopLoss\030\023 \001(\003\022\032\n\022relativeTakeProfi"
  "t\030\024 \001(\003\022\032\n\022guaranteedStopLoss\030\025 \001(\010\022\030\n\020t"
  "railingStopLoss\030\026 \001(\010\022<\n\021stopTriggerMeth"
  "od\030\027 \001(\0162\032.ProtoOAOrderTriggerMethod:\005TR"
  "ADE\"\234\003\n\025ProtoOAExecutionEvent\022B\n\013payload"
  "Type\030\001 \001(\0162\023.ProtoOAPayloadType:\030PROTO_O"
  "A_EXECUTION_EVENT\022\033\n\023ctidTraderAccountId"
  "\030\002 \002(\003\022,\n\rexecutionType\030\003 \002(\0162\025.ProtoOAE"
  "xecutionType\022\"\n\010position\030\004 \001(\0132\020.ProtoOA"
  "Position\022\034\n\005order\030\005 \001(\0132\r.ProtoOAOrder\022\032"
  "\n\004deal\030\006 \001(\0132\014.ProtoOADeal\022:\n\024bonusDepos"
  "itWithdraw\030\007 \001(\0132\034.ProtoOABonusDepositWi"
  "thdraw\0220\n\017depositWithdraw\030\010 \001(\0132\027.ProtoO"
  "ADepositWithdraw\022\021\n\terrorCode\030\t \001(\t\022\025\n\ri"
  "sServerEvent\030\n \001(\010\"\212\001\n\025ProtoOACancelOrde"
  "rReq\022C\n\013payloadType\030\001 \001(\0162\023.ProtoOAPaylo"
  "adType:\031PROTO_OA_CANCEL_ORDER_REQ\022\033\n\023cti"
  "dTraderAccountId\030\002 \002(\003\022\017\n\007orderId\030\003 \002(\003\""
  "\306\003\n\024ProtoOAAmendOrderReq\022B\n\013payloadType\030"
  "\001 \001(\0162\023.ProtoOAPayloadType:\030PROTO_OA_AME"
  "ND_ORDER_REQ\022\033\n\023ctidTraderAccountId\030\002 \002("
  "\003\022\017\n\007orderId\030\003 \002(\003\022\016\n\006volume\030\004 \001(\003\022\022\n\nli"
  "mitPrice\030\005 \001(\001\022\021\n\tstopPrice\030\006 \001(\001\022\033\n\023exp"
  "irationTimestamp\030\007 \001(\003\022\020\n\010stopLoss\030\010 \001(\001"
  "\022\022\n\ntakeProfit\030\t \001(\001\022\030\n\020slippageInPoints"
  "\030\n \001(\005\022\030\n\020relativeStopLoss\030\013 \001(\003\022\032\n\022rela"
  "tiveTakeProfit\030\014 \001(\003\022\032\n\022guaranteedStopLo"
  "ss\030\r \001(\010\022\030\n\020trailingStopLoss\030\016 \001(\010\022<\n\021st"
  "opTriggerMethod\030\017 \001(\0162\032.ProtoOAOrderTrig"
  "gerMethod:\005TRADE\"\270\002\n\033ProtoOAAmendPositio"
  "nSLTPReq\022J\n\013payloadType\030\001 \001(\0162\023.ProtoOAP"
  "ayloadType: PROTO_OA_AMEND_POSITION_SLTP"
  "_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\022\n\npos"
  "itionId\030\003 \002(\003\022\020\n\010stopLoss\030\004 \001(\001\022\022\n\ntakeP"
  "rofit\030\005 \001(\001\022\032\n\022guaranteedStopLoss\030\007 \001(\010\022"
  "\030\n\020trailingStopLoss\030\010 \001(\010\022@\n\025stopLossTri"
  "ggerMethod\030\t \001(\0162\032.ProtoOAOrderTriggerMe"
  "thod:\005TRADE\"\241\001\n\027ProtoOAClosePositionReq\022"
  "E\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadTyp"
  "e:\033PROTO_OA_CLOSE_POSITION_REQ\022\033\n\023ctidTr"
  "aderAccountId\030\002 \002(\003\022\022\n\npositionId\030\003 \002(\003\022"
  "\016\n\006volume\030\004 \002(\003\"\342\001\n\035ProtoOATrailingSLCha"
  "ngedEvent\022L\n\013payloadType\030\001 \001(\0162\023.ProtoOA"
  "PayloadType:\"PROTO_OA_TRAILING_SL_CHANGE"
  "D_EVENT\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\022\n\n"
  "positionId\030\003 \002(\003\022\017\n\007orderId\030\004 \002(\003\022\021\n\tsto"
  "pPrice\030\005 \002(\001\022\036\n\026utcLastUpdateTimestamp\030\006"
  " \002(\003\"u\n\023ProtoOAAssetListReq\022A\n\013payloadTy"
  "pe\030\001 \001(\0162\023.ProtoOAPayloadType:\027PROTO_OA_"
  "ASSET_LIST_REQ\022\033\n\023ctidTraderAccountId\030\002 "
  "\002(\003\"\223\001\n\023ProtoOAAssetListRes\022A\n\013payloadTy"
  "pe\030\001 \001(\0162\023.ProtoOAPayloadType:\027PROTO_OA_"
  "ASSET_LIST_RES\022\033\n\023ctidTraderAccountId\030\002 "
  "\002(\003\022\034\n\005asset\030\003 \003(\0132\r.ProtoOAAsset\"\240\001\n\025Pr"
  "otoOASymbolsListReq\022C\n\013payloadType\030\001 \001(\016"
  "2\023.ProtoOAPayloadType:\031PROTO_OA_SYMBOLS_"
  "LIST_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022%\n"
  "\026includeArchivedSymbols\030\003 \001(\010:\005false\"\316\001\n"
  "\025ProtoOASymbolsListRes\022C\n\013payloadType\030\001 "
  "\001(\0162\023.ProtoOAPayloadType:\031PROTO_OA_SYMBO"
  "LS_LIST_RES\022\033\n\023ctidTraderAccountId\030\002 \002(\003"
  "\022#\n\006symbol\030\003 \003(\0132\023.ProtoOALightSymbol\022.\n"
  "\016archivedSymbol\030\004 \003(\0132\026.ProtoOAArchivedS"
  "ymbol\"\212\001\n\024ProtoOASymbolByIdReq\022C\n\013payloa"
  "dType\030\001 \001(\0162\023.ProtoOAPayloadType:\031PROTO_"
  "OA_SYMBOL_BY_ID_REQ\022\033\n\023ctidTraderAccount"
  "Id\030\002 \002(\003\022\020\n\010symbolId\030\003 \003(\003\"\310\001\n\024ProtoOASy"
  "mbolByIdRes\022C\n\013payloadType\030\001 \001(\0162\023.Proto"
  "OAPayloadType:\031PROTO_OA_SYMBOL_BY_ID_RES"
  "\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\036\n\006symbol\030"
  "\003 \003(\0132\016.ProtoOASymbol\022.\n\016archivedSymbol\030"
  "\004 \003(\0132\026.ProtoOAArchivedSymbol\"\267\001\n\036ProtoO"
  "ASymbolsForConversionReq\022M\n\013payloadType\030"
  "\001 \001(\0162\023.ProtoOAPayloadType:#PROTO_OA_SYM"
  "BOLS_FOR_CONVERSION_REQ\022\033\n\023ctidTraderAcc"
  "ountId\030\002 \002(\003\022\024\n\014firstAssetId\030\003 \002(\003\022\023\n\013la"
  "stAssetId\030\004 \002(\003\"\261\001\n\036ProtoOASymbolsForCon"
  "versionRes\022M\n\013payloadType\030\001 \001(\0162\023.ProtoO"
  "APayloadType:#PROTO_OA_SYMBOLS_FOR_CONVE"
  "RSION_RES\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022#"
  "\n\006symbol\030\003 \003(\0132\023.ProtoOALightSymbol\"\223\001\n\031"
  "ProtoOASymbolChangedEvent\022G\n\013payloadType"
  "\030\001 \001(\0162\023.ProtoOAPayloadType:\035PROTO_OA_SY"
  "MBOL_CHANGED_EVENT\022\033\n\023ctidTraderAccountI"
  "d\030\002 \002(\003\022\020\n\010symbolId\030\003 \003(\003\"\200\001\n\030ProtoOAAss"
  "etClassListReq\022G\n\013payloadType\030\001 \001(\0162\023.Pr"
  "otoOAPayloadType:\035PROTO_OA_ASSET_CLASS_L"
  "IST_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\"\250\001\n"
  "\030ProtoOAAssetClassListRes\022G\n\013payloadType"
  "\030\001 \001(\0162\023.ProtoOAPayloadType:\035PROTO_OA_AS"
  "SET_CLASS_LIST_RES\022\033\n\023ctidTraderAccountI"
  "d\030\002 \002(\003\022&\n\nassetClass\030\003 \003(\0132\022.ProtoOAAss"
  "etClass\"n\n\020ProtoOATraderReq\022=\n\013payloadTy"
  "pe\030\001 \001(\0162\023.ProtoOAPayloadType:\023PROTO_OA_"
  "TRADER_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\""
  "\216\001\n\020ProtoOATraderRes\022=\n\013payloadType\030\001 \001("
  "\0162\023.ProtoOAPayloadType:\023PROTO_OA_TRADER_"
  "RES\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\036\n\006trad"
  "er\030\003 \002(\0132\016.ProtoOATrader\"\240\001\n\031ProtoOATrad"
  "erUpdatedEvent\022F\n\013payloadType\030\001 \001(\0162\023.Pr"
  "otoOAPayloadType:\034PROTO_OA_TRADER_UPDATE"
  "_EVENT\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\036\n\006t"
  "rader\030\003 \002(\0132\016.ProtoOATrader\"t\n\023ProtoOARe"
  "concileReq\022@\n\013payloadType\030\001 \001(\0162\023.ProtoO"
  "APayloadType:\026PROTO_OA_RECONCILE_REQ\022\033\n\023"
  "ctidTraderAccountId\030\002 \002(\003\"\266\001\n\023ProtoOARec"
  "oncileRes\022@\n\013payloadType\030\001 \001(\0162\023.ProtoOA"
  "PayloadType:\026PROTO_OA_RECONCILE_RES\022\033\n\023c"
  "tidTraderAccountId\030\002 \002(\003\022\"\n\010position\030\003 \003"
  "(\0132\020.ProtoOAPosition\022\034\n\005order\030\004 \003(\0132\r.Pr"
  "otoOAOrder\"\310\001\n\026ProtoOAOrderErrorEvent\022D\n"
  "\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadType:"
  "\032PROTO_OA_ORDER_ERROR_EVENT\022\033\n\023ctidTrade"
  "rAccountId\030\005 \002(\003\022\021\n\terrorCode\030\002 \002(\t\022\017\n\007o"
  "rderId\030\003 \001(\003\022\022\n\npositionId\030\006 \001(\003\022\023\n\013desc"
  "ription\030\007 \001(\t\"\260\001\n\022ProtoOADealListReq\022@\n\013"
  "payloadType\030\001 \001(\0162\023.ProtoOAPayloadType:\026"
  "PROTO_OA_DEAL_LIST_REQ\022\033\n\023ctidTraderAcco"
  "untId\030\002 \002(\003\022\025\n\rfromTimestamp\030\003 \002(\003\022\023\n\013to"
  "Timestamp\030\004 \002(\003\022\017\n\007maxRows\030\005 \001(\005\"\240\001\n\022Pro"
  "toOADealListRes\022@\n\013payloadType\030\001 \001(\0162\023.P"
  "rotoOAPayloadType:\026PROTO_OA_DEAL_LIST_RE"
  "S\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\032\n\004deal\030\003"
  " \003(\0132\014.ProtoOADeal\022\017\n\007hasMore\030\004 \002(\010\"\241\001\n\030"
  "ProtoOAExpectedMarginReq\022F\n\013payloadType\030"
  "\001 \001(\0162\023.ProtoOAPayloadType:\034PROTO_OA_EXP"
  "ECTED_MARGIN_REQ\022\033\n\023ctidTraderAccountId\030"
  "\002 \002(\003\022\020\n\010symbolId\030\003 \002(\003\022\016\n\006volume\030\004 \003(\003\""
  "\274\001\n\030ProtoOAExpectedMarginRes\022F\n\013payloadT"
  "ype\030\001 \001(\0162\023.ProtoOAPayloadType:\034PROTO_OA"
  "_EXPECTED_MARGIN_RES\022\033\n\023ctidTraderAccoun"
  "tId\030\002 \002(\003\022&\n\006margin\030\003 \003(\0132\026.ProtoOAExpec"
  "tedMargin\022\023\n\013moneyDigits\030\004 \001(\r\"\276\001\n\031Proto"
  "OAMarginChangedEvent\022G\n\013payloadType\030\001 \001("
  "\0162\023.ProtoOAPayloadType:\035PROTO_OA_MARGIN_"
  "CHANGED_EVENT\022\033\n\023ctidTraderAccountId\030\002 \002"
  "(\003\022\022\n\npositionId\030\003 \002(\004\022\022\n\nusedMargin\030\004 \002"
  "(\004\022\023\n\013moneyDigits\030\005 \001(\r\"\267\001\n\035ProtoOACashF"
  "lowHistoryListReq\022M\n\013payloadType\030\001 \001(\0162\023"
  ".ProtoOAPayloadType:#PROTO_OA_CASH_FLOW_"
  "HISTORY_LIST_REQ\022\033\n\023ctidTraderAccountId\030"
  "\002 \002(\003\022\025\n\rfromTimestamp\030\003 \002(\003\022\023\n\013toTimest"
  "amp\030\004 \002(\003\"\275\001\n\035ProtoOACashFlowHistoryList"
  "Res\022M\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloa"
  "dType:#PROTO_OA_CASH_FLOW_HISTORY_LIST_R"
  "ES\022\033\n\023ctidTraderAccountId\030\002 \002(\003\0220\n\017depos"
  "itWithdraw\030\003 \003(\0132\027.ProtoOADepositWithdra"
  "w\"\221\001\n%ProtoOAGetAccountListByAccessToken"
  "Req\022S\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloa"
  "dType:)PROTO_OA_GET_ACCOUNTS_BY_ACCESS_T"
  "OKEN_REQ\022\023\n\013accessToken\030\002 \002(\t\"\377\001\n%ProtoO"
  "AGetAccountListByAccessTokenRes\022S\n\013paylo"
  "adType\030\001 \001(\0162\023.ProtoOAPayloadType:)PROTO"
  "_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES\022\023\n\013"
  "accessToken\030\002 \002(\t\0226\n\017permissionScope\030\003 \001"
  "(\0162\035.ProtoOAClientPermissionScope\0224\n\021cti"
  "dTraderAccount\030\004 \003(\0132\031.ProtoOACtidTrader"
  "Account\"t\n\026ProtoOARefreshTokenReq\022D\n\013pay"
  "loadType\030\001 \001(\0162\023.ProtoOAPayloadType:\032PRO"
  "TO_OA_REFRESH_TOKEN_REQ\022\024\n\014refreshToken\030"
  "\002 \002(\t\"\257\001\n\026ProtoOARefreshTokenRes\022D\n\013payl"
  "oadType\030\001 \001(\0162\023.ProtoOAPayloadType:\032PROT"
  "O_OA_REFRESH_TOKEN_RES\022\023\n\013accessToken\030\002 "
  "\002(\t\022\021\n\ttokenType\030\003 \002(\t\022\021\n\texpiresIn\030\004 \002("
  "\003\022\024\n\014refreshToken\030\005 \002(\t\"\221\001\n\030ProtoOASubsc"
  "ribeSpotsReq\022F\n\013payloadType\030\001 \001(\0162\023.Prot"
  "oOAPayloadType:\034PROTO_OA_SUBSCRIBE_SPOTS"
  "_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\020\n\010sym"
  "bolId\030\003 \003(\003\"\177\n\030ProtoOASubscribeSpotsRes\022"
  "F\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadTyp"
  "e:\034PROTO_OA_SUBSCRIBE_SPOTS_RES\022\033\n\023ctidT"
  "raderAccountId\030\002 \002(\003\"\225\001\n\032ProtoOAUnsubscr"
  "ibeSpotsReq\022H\n\013payloadType\030\001 \001(\0162\023.Proto"
  "OAPayloadType:\036PROTO_OA_UNSUBSCRIBE_SPOT"
  "S_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\020\n\010sy"
  "mbolId\030\003 \003(\003\"\203\001\n\032ProtoOAUnsubscribeSpots"
  "Res\022H\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloa"
  "dType:\036PROTO_OA_UNSUBSCRIBE_SPOTS_RES\022\033\n"
  "\023ctidTraderAccountId\030\002 \002(\003\"\324\001\n\020ProtoOASp"
  "otEvent\022=\n\013payloadType\030\001 \001(\0162\023.ProtoOAPa"
  "yloadType:\023PROTO_OA_SPOT_EVENT\022\033\n\023ctidTr"
  "aderAccountId\030\002 \002(\003\022\020\n\010symbolId\030\003 \002(\003\022\013\n"
  "\003bid\030\004 \001(\004\022\013\n\003ask\030\005 \001(\004\022\"\n\010trendbar\030\006 \003("
  "\0132\020.ProtoOATrendbar\022\024\n\014sessionClose\030\007 \001("
  "\004\"\310\001\n\037ProtoOASubscribeLiveTrendbarReq\022N\n"
  "\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadType:"
  "$PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ\022\033\n"
  "\023ctidTraderAccountId\030\002 \002(\003\022&\n\006period\030\003 \002"
  "(\0162\026.ProtoOATrendbarPeriod\022\020\n\010symbolId\030\004"
  " \002(\003\"\216\001\n\037ProtoOASubscribeLiveTrendbarRes"
  "\022N\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadTy"
  "pe:$PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES"
  "\022\033\n\023ctidTraderAccountId\030\002 \002(\003\"\314\001\n!ProtoO"
  "AUnsubscribeLiveTrendbarReq\022P\n\013payloadTy"
  "pe\030\001 \001(\0162\023.ProtoOAPayloadType:&PROTO_OA_"
  "UNSUBSCRIBE_LIVE_TRENDBAR_REQ\022\033\n\023ctidTra"
  "derAccountId\030\002 \002(\003\022&\n\006period\030\003 \002(\0162\026.Pro"
  "toOATrendbarPeriod\022\020\n\010symbolId\030\004 \002(\003\"\222\001\n"
  "!ProtoOAUnsubscribeLiveTrendbarRes\022P\n\013pa"
  "yloadType\030\001 \001(\0162\023.ProtoOAPayloadType:&PR"
  "OTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES\022\033\n\023"
  "ctidTraderAccountId\030\002 \002(\003\"\341\001\n\026ProtoOAGet"
  "TrendbarsReq\022D\n\013payloadType\030\001 \001(\0162\023.Prot"
  "oOAPayloadType:\032PROTO_OA_GET_TRENDBARS_R"
  "EQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\025\n\rfromT"
  "imestamp\030\003 \002(\003\022\023\n\013toTimestamp\030\004 \002(\003\022&\n\006p"
  "eriod\030\005 \002(\0162\026.ProtoOATrendbarPeriod\022\020\n\010s"
  "ymbolId\030\006 \002(\003\"\354\001\n\026ProtoOAGetTrendbarsRes"
  "\022D\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadTy"
  "pe:\032PROTO_OA_GET_TRENDBARS_RES\022\033\n\023ctidTr"
  "aderAccountId\030\002 \002(\003\022&\n\006period\030\003 \002(\0162\026.Pr"
  "otoOATrendbarPeriod\022\021\n\ttimestamp\030\004 \002(\003\022\""
  "\n\010trendbar\030\005 \003(\0132\020.ProtoOATrendbar\022\020\n\010sy"
  "mbolId\030\006 \001(\003\"\330\001\n\025ProtoOAGetTickDataReq\022C"
  "\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloadType"
  ":\031PROTO_OA_GET_TICKDATA_REQ\022\033\n\023ctidTrade"
  "rAccountId\030\002 \002(\003\022\020\n\010symbolId\030\003 \002(\003\022\037\n\004ty"
  "pe\030\004 \002(\0162\021.ProtoOAQuoteType\022\025\n\rfromTimes"
  "tamp\030\005 \002(\003\022\023\n\013toTimestamp\030\006 \002(\003\"\256\001\n\025Prot"
  "oOAGetTickDataRes\022C\n\013payloadType\030\001 \001(\0162\023"
  ".ProtoOAPayloadType:\031PROTO_OA_GET_TICKDA"
  "TA_RES\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\"\n\010t"
  "ickData\030\003 \003(\0132\020.ProtoOATickData\022\017\n\007hasMo"
  "re\030\004 \002(\010\"\210\001\n\037ProtoOAGetCtidProfileByToke"
  "nReq\022P\n\013payloadType\030\001 \001(\0162\023.ProtoOAPaylo"
  "adType:&PROTO_OA_GET_CTID_PROFILE_BY_TOK"
  "EN_REQ\022\023\n\013accessToken\030\002 \002(\t\"\231\001\n\037ProtoOAG"
  "etCtidProfileByTokenRes\022P\n\013payloadType\030\001"
  " \001(\0162\023.ProtoOAPayloadType:&PROTO_OA_GET_"
  "CTID_PROFILE_BY_TOKEN_RES\022$\n\007profile\030\002 \002"
  "(\0132\023.ProtoOACtidProfile\"\304\001\n\021ProtoOADepth"
  "Event\022>\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayl"
  "oadType:\024PROTO_OA_DEPTH_EVENT\022\033\n\023ctidTra"
  "derAccountId\030\002 \002(\003\022\020\n\010symbolId\030\003 \002(\004\022%\n\t"
  "newQuotes\030\004 \003(\0132\022.ProtoOADepthQuote\022\031\n\rd"
  "eletedQuotes\030\005 \003(\004B\002\020\001\"\236\001\n\036ProtoOASubscr"
  "ibeDepthQuotesReq\022M\n\013payloadType\030\001 \001(\0162\023"
  ".ProtoOAPayloadType:#PROTO_OA_SUBSCRIBE_"
  "DEPTH_QUOTES_REQ\022\033\n\023ctidTraderAccountId\030"
  "\002 \002(\003\022\020\n\010symbolId\030\003 \003(\003\"\214\001\n\036ProtoOASubsc"
  "ribeDepthQuotesRes\022M\n\013payloadType\030\001 \001(\0162"
  "\023.ProtoOAPayloadType:#PROTO_OA_SUBSCRIBE"
  "_DEPTH_QUOTES_RES\022\033\n\023ctidTraderAccountId"
  "\030\002 \002(\003\"\242\001\n ProtoOAUnsubscribeDepthQuotes"
  "Req\022O\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayloa"
  "dType:%PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES"
  "_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022\020\n\010sym"
  "bolId\030\003 \003(\003\"\220\001\n ProtoOAUnsubscribeDepthQ"
  "uotesRes\022O\n\013payloadType\030\001 \001(\0162\023.ProtoOAP"
  "ayloadType:%PROTO_OA_UNSUBSCRIBE_DEPTH_Q"
  "UOTES_RES\022\033\n\023ctidTraderAccountId\030\002 \002(\003\"\203"
  "\001\n\034ProtoOASymbolCategoryListReq\022F\n\013paylo"
  "adType\030\001 \001(\0162\023.ProtoOAPayloadType:\034PROTO"
  "_OA_SYMBOL_CATEGORY_REQ\022\033\n\023ctidTraderAcc"
  "ountId\030\002 \002(\003\"\263\001\n\034ProtoOASymbolCategoryLi"
  "stRes\022F\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayl"
  "oadType:\034PROTO_OA_SYMBOL_CATEGORY_RES\022\033\n"
  "\023ctidTraderAccountId\030\002 \002(\003\022.\n\016symbolCate"
  "gory\030\003 \003(\0132\026.ProtoOASymbolCategory\"}\n\027Pr"
  "otoOAAccountLogoutReq\022E\n\013payloadType\030\001 \001"
  "(\0162\023.ProtoOAPayloadType:\033PROTO_OA_ACCOUN"
  "T_LOGOUT_REQ\022\033\n\023ctidTraderAccountId\030\002 \002("
  "\003\"}\n\027ProtoOAAccountLogoutRes\022E\n\013payloadT"
  "ype\030\001 \001(\0162\023.ProtoOAPayloadType:\033PROTO_OA"
  "_ACCOUNT_LOGOUT_RES\022\033\n\023ctidTraderAccount"
  "Id\030\002 \002(\003\"\211\001\n\035ProtoOAAccountDisconnectEve"
  "nt\022K\n\013payloadType\030\001 \001(\0162\023.ProtoOAPayload"
  "Type:!PROTO_OA_ACCOUNT_DISCONNECT_EVENT\022"
  "\033\n\023ctidTraderAccountId\030\002 \002(\003\"\200\001\n\030ProtoOA"
  "MarginCallListReq\022G\n\013payloadType\030\001 \001(\0162\023"
  ".ProtoOAPayloadType:\035PROTO_OA_MARGIN_CAL"
  "L_LIST_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\""
  "\213\001\n\030ProtoOAMarginCallListRes\022G\n\013payloadT"
  "ype\030\001 \001(\0162\023.ProtoOAPayloadType:\035PROTO_OA"
  "_MARGIN_CALL_LIST_RES\022&\n\nmarginCall\030\002 \003("
  "\0132\022.ProtoOAMarginCall\"\254\001\n\032ProtoOAMarginC"
  "allUpdateReq\022I\n\013payloadType\030\001 \001(\0162\023.Prot"
  "oOAPayloadType:\037PROTO_OA_MARGIN_CALL_UPD"
  "ATE_REQ\022\033\n\023ctidTraderAccountId\030\002 \002(\003\022&\n\n"
  "marginCall\030\003 \002(\0132\022.ProtoOAMarginCall\"g\n\032"
  "ProtoOAMarginCallUpdateRes\022I\n\013payloadTyp"
  "e\030\001 \001(\0162\023.ProtoOAPayloadType:\037PROTO_OA_M"
  "ARGIN_CALL_UPDATE_RES\"\260\001\n\034ProtoOAMarginC"
  "allUpdateEvent\022K\n\013payloadType\030\001 \001(\0162\023.Pr"
  "otoOAPayloadType:!PROTO_OA_MARGIN_CALL_U"
  "PDATE_EVENT\022\033\n\023ctidTraderAccountId\030\002 \002(\003"
  "\022&\n\nmarginCall\030\003 \002(\0132\022.ProtoOAMarginCall"
  "\"\262\001\n\035ProtoOAMarginCallTriggerEvent\022L\n\013pa"
  "yloadType\030\001 \001(\0162\023.ProtoOAPayloadType:\"PR"
  "OTO_OA_MARGIN_CALL_TRIGGER_EVENT\022\033\n\023ctid"
  "TraderAccountId\030\002 \002(\003\022&\n\nmarginCall\030\003 \002("
  "\0132\022.ProtoOAMarginCallBB\n\037com.xtrader.pro"
  "tocol.openapi.v2B\032ContainerOpenApiV2Mess"
  "agesP\001\240\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_OpenApiMessages_2eproto_deps[1] = {
  &::descriptor_table_OpenApiModelMessages_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_OpenApiMessages_2eproto_sccs[75] = {
  &scc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAccountAuthRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAccountDisconnectEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAccountLogoutReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAccountLogoutRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAmendOrderReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAmendPositionSLTPReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAApplicationAuthRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAssetClassListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAssetListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOACancelOrderReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOACashFlowHistoryListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAClosePositionReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOADealListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOADealListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOADepthEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAErrorRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAExpectedMarginReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetTickDataReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetTrendbarsReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginCallUpdateRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAMarginChangedEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAReconcileReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASpotEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeDepthQuotesReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeDepthQuotesRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeLiveTrendbarReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeLiveTrendbarRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeSpotsReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASubscribeSpotsRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolByIdReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolCategoryListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolChangedEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolsForConversionReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolsListReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOATraderReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOATraderRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOATrailingSLChangedEvent_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeDepthQuotesReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeDepthQuotesRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeLiveTrendbarReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeLiveTrendbarRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeSpotsReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAUnsubscribeSpotsRes_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAVersionReq_OpenApiMessages_2eproto.base,
  &scc_info_ProtoOAVersionRes_OpenApiMessages_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_OpenApiMessages_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OpenApiMessages_2eproto = {
  false, false, descriptor_table_protodef_OpenApiMessages_2eproto, "OpenApiMessages.proto", 13489,
  &descriptor_table_OpenApiMessages_2eproto_once, descriptor_table_OpenApiMessages_2eproto_sccs, descriptor_table_OpenApiMessages_2eproto_deps, 75, 1,
  schemas, file_default_instances, TableStruct_OpenApiMessages_2eproto::offsets,
  file_level_metadata_OpenApiMessages_2eproto, 75, file_level_enum_descriptors_OpenApiMessages_2eproto, file_level_service_descriptors_OpenApiMessages_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_OpenApiMessages_2eproto(&descriptor_table_OpenApiMessages_2eproto);

// ===================================================================

class ProtoOAApplicationAuthReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAApplicationAuthReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_clientid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_clientsecret(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOAApplicationAuthReq::ProtoOAApplicationAuthReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAApplicationAuthReq)
}
ProtoOAApplicationAuthReq::ProtoOAApplicationAuthReq(const ProtoOAApplicationAuthReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_clientid()) {
    clientid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientid(), 
      GetArena());
  }
  clientsecret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_clientsecret()) {
    clientsecret_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientsecret(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAApplicationAuthReq)
}

void ProtoOAApplicationAuthReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto.base);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientsecret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2100;
}

ProtoOAApplicationAuthReq::~ProtoOAApplicationAuthReq() {
  // @@protoc_insertion_point(destructor:ProtoOAApplicationAuthReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAApplicationAuthReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  clientid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientsecret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAApplicationAuthReq::ArenaDtor(void* object) {
  ProtoOAApplicationAuthReq* _this = reinterpret_cast< ProtoOAApplicationAuthReq* >(object);
  (void)_this;
}
void ProtoOAApplicationAuthReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAApplicationAuthReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAApplicationAuthReq& ProtoOAApplicationAuthReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAApplicationAuthReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAApplicationAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAApplicationAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      clientid_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      clientsecret_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2100;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAApplicationAuthReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string clientId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_clientid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAApplicationAuthReq.clientId");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string clientSecret = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_clientsecret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAApplicationAuthReq.clientSecret");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAApplicationAuthReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAApplicationAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string clientId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAApplicationAuthReq.clientId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_clientid(), target);
  }

  // required string clientSecret = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientsecret().data(), static_cast<int>(this->_internal_clientsecret().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAApplicationAuthReq.clientSecret");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_clientsecret(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAApplicationAuthReq)
  return target;
}

size_t ProtoOAApplicationAuthReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAApplicationAuthReq)
  size_t total_size = 0;

  if (_internal_has_clientid()) {
    // required string clientId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  if (_internal_has_clientsecret()) {
    // required string clientSecret = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientsecret());
  }

  return total_size;
}
size_t ProtoOAApplicationAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAApplicationAuthReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string clientId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());

    // required string clientSecret = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientsecret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAApplicationAuthReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAApplicationAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAApplicationAuthReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAApplicationAuthReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAApplicationAuthReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAApplicationAuthReq)
    MergeFrom(*source);
  }
}

void ProtoOAApplicationAuthReq::MergeFrom(const ProtoOAApplicationAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAApplicationAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_clientid(from._internal_clientid());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_clientsecret(from._internal_clientsecret());
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAApplicationAuthReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAApplicationAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAApplicationAuthReq::CopyFrom(const ProtoOAApplicationAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAApplicationAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAApplicationAuthReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAApplicationAuthReq::InternalSwap(ProtoOAApplicationAuthReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  clientid_.Swap(&other->clientid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clientsecret_.Swap(&other->clientsecret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAApplicationAuthReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAApplicationAuthRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAApplicationAuthRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoOAApplicationAuthRes::ProtoOAApplicationAuthRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAApplicationAuthRes)
}
ProtoOAApplicationAuthRes::ProtoOAApplicationAuthRes(const ProtoOAApplicationAuthRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAApplicationAuthRes)
}

void ProtoOAApplicationAuthRes::SharedCtor() {
  payloadtype_ = 2101;
}

ProtoOAApplicationAuthRes::~ProtoOAApplicationAuthRes() {
  // @@protoc_insertion_point(destructor:ProtoOAApplicationAuthRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAApplicationAuthRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAApplicationAuthRes::ArenaDtor(void* object) {
  ProtoOAApplicationAuthRes* _this = reinterpret_cast< ProtoOAApplicationAuthRes* >(object);
  (void)_this;
}
void ProtoOAApplicationAuthRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAApplicationAuthRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAApplicationAuthRes& ProtoOAApplicationAuthRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAApplicationAuthRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAApplicationAuthRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAApplicationAuthRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payloadtype_ = 2101;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAApplicationAuthRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAApplicationAuthRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAApplicationAuthRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_RES];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAApplicationAuthRes)
  return target;
}

size_t ProtoOAApplicationAuthRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAApplicationAuthRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_APPLICATION_AUTH_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAApplicationAuthRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAApplicationAuthRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAApplicationAuthRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAApplicationAuthRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAApplicationAuthRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAApplicationAuthRes)
    MergeFrom(*source);
  }
}

void ProtoOAApplicationAuthRes::MergeFrom(const ProtoOAApplicationAuthRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAApplicationAuthRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_payloadtype()) {
    _internal_set_payloadtype(from._internal_payloadtype());
  }
}

void ProtoOAApplicationAuthRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAApplicationAuthRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAApplicationAuthRes::CopyFrom(const ProtoOAApplicationAuthRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAApplicationAuthRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAApplicationAuthRes::IsInitialized() const {
  return true;
}

void ProtoOAApplicationAuthRes::InternalSwap(ProtoOAApplicationAuthRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAApplicationAuthRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountAuthReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountAuthReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_accesstoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOAAccountAuthReq::ProtoOAAccountAuthReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountAuthReq)
}
ProtoOAAccountAuthReq::ProtoOAAccountAuthReq(const ProtoOAAccountAuthReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesstoken()) {
    accesstoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesstoken(), 
      GetArena());
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountAuthReq)
}

void ProtoOAAccountAuthReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2102;
}

ProtoOAAccountAuthReq::~ProtoOAAccountAuthReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountAuthReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountAuthReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesstoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAAccountAuthReq::ArenaDtor(void* object) {
  ProtoOAAccountAuthReq* _this = reinterpret_cast< ProtoOAAccountAuthReq* >(object);
  (void)_this;
}
void ProtoOAAccountAuthReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountAuthReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountAuthReq& ProtoOAAccountAuthReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountAuthReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountAuthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    accesstoken_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2102;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountAuthReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string accessToken = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAAccountAuthReq.accessToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountAuthReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountAuthReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required string accessToken = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAAccountAuthReq.accessToken");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_accesstoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountAuthReq)
  return target;
}

size_t ProtoOAAccountAuthReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAAccountAuthReq)
  size_t total_size = 0;

  if (_internal_has_accesstoken()) {
    // required string accessToken = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOAAccountAuthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountAuthReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string accessToken = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountAuthReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountAuthReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountAuthReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountAuthReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountAuthReq)
    MergeFrom(*source);
  }
}

void ProtoOAAccountAuthReq::MergeFrom(const ProtoOAAccountAuthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountAuthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesstoken(from._internal_accesstoken());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountAuthReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountAuthReq::CopyFrom(const ProtoOAAccountAuthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountAuthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountAuthReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAccountAuthReq::InternalSwap(ProtoOAAccountAuthReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accesstoken_.Swap(&other->accesstoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountAuthReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountAuthRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountAuthRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAccountAuthRes::ProtoOAAccountAuthRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountAuthRes)
}
ProtoOAAccountAuthRes::ProtoOAAccountAuthRes(const ProtoOAAccountAuthRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountAuthRes)
}

void ProtoOAAccountAuthRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2103;
}

ProtoOAAccountAuthRes::~ProtoOAAccountAuthRes() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountAuthRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountAuthRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAccountAuthRes::ArenaDtor(void* object) {
  ProtoOAAccountAuthRes* _this = reinterpret_cast< ProtoOAAccountAuthRes* >(object);
  (void)_this;
}
void ProtoOAAccountAuthRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountAuthRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountAuthRes& ProtoOAAccountAuthRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountAuthRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountAuthRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountAuthRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2103;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountAuthRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountAuthRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountAuthRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountAuthRes)
  return target;
}

size_t ProtoOAAccountAuthRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountAuthRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_AUTH_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountAuthRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountAuthRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountAuthRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountAuthRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountAuthRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountAuthRes)
    MergeFrom(*source);
  }
}

void ProtoOAAccountAuthRes::MergeFrom(const ProtoOAAccountAuthRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountAuthRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountAuthRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountAuthRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountAuthRes::CopyFrom(const ProtoOAAccountAuthRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountAuthRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountAuthRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAccountAuthRes::InternalSwap(ProtoOAAccountAuthRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountAuthRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAErrorRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAErrorRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_maintenanceendtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAErrorRes::ProtoOAErrorRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAErrorRes)
}
ProtoOAErrorRes::ProtoOAErrorRes(const ProtoOAErrorRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errorcode()) {
    errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errorcode(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAErrorRes)
}

void ProtoOAErrorRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAErrorRes_OpenApiMessages_2eproto.base);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&maintenanceendtimestamp_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(maintenanceendtimestamp_));
  payloadtype_ = 2142;
}

ProtoOAErrorRes::~ProtoOAErrorRes() {
  // @@protoc_insertion_point(destructor:ProtoOAErrorRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAErrorRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  errorcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAErrorRes::ArenaDtor(void* object) {
  ProtoOAErrorRes* _this = reinterpret_cast< ProtoOAErrorRes* >(object);
  (void)_this;
}
void ProtoOAErrorRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAErrorRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAErrorRes& ProtoOAErrorRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAErrorRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAErrorRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAErrorRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      errorcode_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000001cu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maintenanceendtimestamp_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(maintenanceendtimestamp_));
    payloadtype_ = 2142;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAErrorRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ERROR_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string errorCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_errorcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAErrorRes.errorCode");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAErrorRes.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 maintenanceEndTimestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_maintenanceendtimestamp(&has_bits);
          maintenanceendtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAErrorRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAErrorRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ERROR_RES];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // optional int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required string errorCode = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_errorcode().data(), static_cast<int>(this->_internal_errorcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAErrorRes.errorCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_errorcode(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAErrorRes.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // optional int64 maintenanceEndTimestamp = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_maintenanceendtimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAErrorRes)
  return target;
}

size_t ProtoOAErrorRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAErrorRes)
  size_t total_size = 0;

  // required string errorCode = 3;
  if (_internal_has_errorcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errorcode());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001eu) {
    // optional string description = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional int64 ctidTraderAccountId = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_ctidtraderaccountid());
    }

    // optional int64 maintenanceEndTimestamp = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_maintenanceendtimestamp());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ERROR_RES];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAErrorRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAErrorRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAErrorRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAErrorRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAErrorRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAErrorRes)
    MergeFrom(*source);
  }
}

void ProtoOAErrorRes::MergeFrom(const ProtoOAErrorRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAErrorRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_errorcode(from._internal_errorcode());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000008u) {
      maintenanceendtimestamp_ = from.maintenanceendtimestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAErrorRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAErrorRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAErrorRes::CopyFrom(const ProtoOAErrorRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAErrorRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAErrorRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAErrorRes::InternalSwap(ProtoOAErrorRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errorcode_.Swap(&other->errorcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAErrorRes, maintenanceendtimestamp_)
      + sizeof(ProtoOAErrorRes::maintenanceendtimestamp_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAErrorRes, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAErrorRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAClientDisconnectEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAClientDisconnectEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoOAClientDisconnectEvent::ProtoOAClientDisconnectEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAClientDisconnectEvent)
}
ProtoOAClientDisconnectEvent::ProtoOAClientDisconnectEvent(const ProtoOAClientDisconnectEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_reason()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAClientDisconnectEvent)
}

void ProtoOAClientDisconnectEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto.base);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2148;
}

ProtoOAClientDisconnectEvent::~ProtoOAClientDisconnectEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAClientDisconnectEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAClientDisconnectEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAClientDisconnectEvent::ArenaDtor(void* object) {
  ProtoOAClientDisconnectEvent* _this = reinterpret_cast< ProtoOAClientDisconnectEvent* >(object);
  (void)_this;
}
void ProtoOAClientDisconnectEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAClientDisconnectEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAClientDisconnectEvent& ProtoOAClientDisconnectEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAClientDisconnectEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAClientDisconnectEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAClientDisconnectEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      reason_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2148;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAClientDisconnectEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLIENT_DISCONNECT_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string reason = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAClientDisconnectEvent.reason");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAClientDisconnectEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAClientDisconnectEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLIENT_DISCONNECT_EVENT];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // optional string reason = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAClientDisconnectEvent.reason");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAClientDisconnectEvent)
  return target;
}

size_t ProtoOAClientDisconnectEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAClientDisconnectEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string reason = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reason());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLIENT_DISCONNECT_EVENT];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAClientDisconnectEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAClientDisconnectEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAClientDisconnectEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAClientDisconnectEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAClientDisconnectEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAClientDisconnectEvent)
    MergeFrom(*source);
  }
}

void ProtoOAClientDisconnectEvent::MergeFrom(const ProtoOAClientDisconnectEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAClientDisconnectEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAClientDisconnectEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAClientDisconnectEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAClientDisconnectEvent::CopyFrom(const ProtoOAClientDisconnectEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAClientDisconnectEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAClientDisconnectEvent::IsInitialized() const {
  return true;
}

void ProtoOAClientDisconnectEvent::InternalSwap(ProtoOAClientDisconnectEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAClientDisconnectEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountsTokenInvalidatedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountsTokenInvalidatedEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoOAAccountsTokenInvalidatedEvent::ProtoOAAccountsTokenInvalidatedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ctidtraderaccountids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountsTokenInvalidatedEvent)
}
ProtoOAAccountsTokenInvalidatedEvent::ProtoOAAccountsTokenInvalidatedEvent(const ProtoOAAccountsTokenInvalidatedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      ctidtraderaccountids_(from.ctidtraderaccountids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_reason()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountsTokenInvalidatedEvent)
}

void ProtoOAAccountsTokenInvalidatedEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto.base);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2147;
}

ProtoOAAccountsTokenInvalidatedEvent::~ProtoOAAccountsTokenInvalidatedEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountsTokenInvalidatedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountsTokenInvalidatedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAAccountsTokenInvalidatedEvent::ArenaDtor(void* object) {
  ProtoOAAccountsTokenInvalidatedEvent* _this = reinterpret_cast< ProtoOAAccountsTokenInvalidatedEvent* >(object);
  (void)_this;
}
void ProtoOAAccountsTokenInvalidatedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountsTokenInvalidatedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountsTokenInvalidatedEvent& ProtoOAAccountsTokenInvalidatedEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountsTokenInvalidatedEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountsTokenInvalidatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountsTokenInvalidatedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctidtraderaccountids_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      reason_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2147;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountsTokenInvalidatedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated int64 ctidTraderAccountIds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_ctidtraderaccountids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_ctidtraderaccountids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string reason = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAAccountsTokenInvalidatedEvent.reason");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountsTokenInvalidatedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountsTokenInvalidatedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // repeated int64 ctidTraderAccountIds = 2;
  for (int i = 0, n = this->_internal_ctidtraderaccountids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountids(i), target);
  }

  // optional string reason = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAAccountsTokenInvalidatedEvent.reason");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountsTokenInvalidatedEvent)
  return target;
}

size_t ProtoOAAccountsTokenInvalidatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountsTokenInvalidatedEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 ctidTraderAccountIds = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->ctidtraderaccountids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_ctidtraderaccountids_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string reason = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reason());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountsTokenInvalidatedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountsTokenInvalidatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountsTokenInvalidatedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountsTokenInvalidatedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountsTokenInvalidatedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountsTokenInvalidatedEvent)
    MergeFrom(*source);
  }
}

void ProtoOAAccountsTokenInvalidatedEvent::MergeFrom(const ProtoOAAccountsTokenInvalidatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountsTokenInvalidatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ctidtraderaccountids_.MergeFrom(from.ctidtraderaccountids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountsTokenInvalidatedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountsTokenInvalidatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountsTokenInvalidatedEvent::CopyFrom(const ProtoOAAccountsTokenInvalidatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountsTokenInvalidatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountsTokenInvalidatedEvent::IsInitialized() const {
  return true;
}

void ProtoOAAccountsTokenInvalidatedEvent::InternalSwap(ProtoOAAccountsTokenInvalidatedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ctidtraderaccountids_.InternalSwap(&other->ctidtraderaccountids_);
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountsTokenInvalidatedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAVersionReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAVersionReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoOAVersionReq::ProtoOAVersionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAVersionReq)
}
ProtoOAVersionReq::ProtoOAVersionReq(const ProtoOAVersionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAVersionReq)
}

void ProtoOAVersionReq::SharedCtor() {
  payloadtype_ = 2104;
}

ProtoOAVersionReq::~ProtoOAVersionReq() {
  // @@protoc_insertion_point(destructor:ProtoOAVersionReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAVersionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAVersionReq::ArenaDtor(void* object) {
  ProtoOAVersionReq* _this = reinterpret_cast< ProtoOAVersionReq* >(object);
  (void)_this;
}
void ProtoOAVersionReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAVersionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAVersionReq& ProtoOAVersionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAVersionReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAVersionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payloadtype_ = 2104;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAVersionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAVersionReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAVersionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_REQ];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAVersionReq)
  return target;
}

size_t ProtoOAVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAVersionReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAVersionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAVersionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAVersionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAVersionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAVersionReq)
    MergeFrom(*source);
  }
}

void ProtoOAVersionReq::MergeFrom(const ProtoOAVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_payloadtype()) {
    _internal_set_payloadtype(from._internal_payloadtype());
  }
}

void ProtoOAVersionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAVersionReq::CopyFrom(const ProtoOAVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAVersionReq::IsInitialized() const {
  return true;
}

void ProtoOAVersionReq::InternalSwap(ProtoOAVersionReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAVersionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAVersionRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAVersionRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_version(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAVersionRes::ProtoOAVersionRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAVersionRes)
}
ProtoOAVersionRes::ProtoOAVersionRes(const ProtoOAVersionRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version()) {
    version_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAVersionRes)
}

void ProtoOAVersionRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAVersionRes_OpenApiMessages_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2105;
}

ProtoOAVersionRes::~ProtoOAVersionRes() {
  // @@protoc_insertion_point(destructor:ProtoOAVersionRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAVersionRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAVersionRes::ArenaDtor(void* object) {
  ProtoOAVersionRes* _this = reinterpret_cast< ProtoOAVersionRes* >(object);
  (void)_this;
}
void ProtoOAVersionRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAVersionRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAVersionRes& ProtoOAVersionRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAVersionRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAVersionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAVersionRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      version_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2105;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAVersionRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAVersionRes.version");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAVersionRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAVersionRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAVersionRes.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAVersionRes)
  return target;
}

size_t ProtoOAVersionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAVersionRes)
  size_t total_size = 0;

  // required string version = 2;
  if (_internal_has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_VERSION_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAVersionRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAVersionRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAVersionRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAVersionRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAVersionRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAVersionRes)
    MergeFrom(*source);
  }
}

void ProtoOAVersionRes::MergeFrom(const ProtoOAVersionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAVersionRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_version(from._internal_version());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAVersionRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAVersionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAVersionRes::CopyFrom(const ProtoOAVersionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAVersionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAVersionRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAVersionRes::InternalSwap(ProtoOAVersionRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAVersionRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOANewOrderReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOANewOrderReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ordertype(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_tradeside(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_limitprice(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_stopprice(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_timeinforce(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_expirationtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_stoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_takeprofit(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_comment(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_baseslippageprice(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_slippageinpoints(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_label(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_clientorderid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_relativestoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_relativetakeprofit(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_guaranteedstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_trailingstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_stoptriggermethod(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00300038) ^ 0x00300038) != 0;
  }
};

ProtoOANewOrderReq::ProtoOANewOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOANewOrderReq)
}
ProtoOANewOrderReq::ProtoOANewOrderReq(const ProtoOANewOrderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_comment()) {
    comment_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_comment(), 
      GetArena());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_label()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArena());
  }
  clientorderid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_clientorderid()) {
    clientorderid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientorderid(), 
      GetArena());
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeinforce_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(timeinforce_));
  // @@protoc_insertion_point(copy_constructor:ProtoOANewOrderReq)
}

void ProtoOANewOrderReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto.base);
  comment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientorderid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&relativetakeprofit_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(relativetakeprofit_));
  stoptriggermethod_ = 1;
  payloadtype_ = 2106;
  ordertype_ = 1;
  tradeside_ = 1;
  timeinforce_ = 2;
}

ProtoOANewOrderReq::~ProtoOANewOrderReq() {
  // @@protoc_insertion_point(destructor:ProtoOANewOrderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOANewOrderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  comment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientorderid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOANewOrderReq::ArenaDtor(void* object) {
  ProtoOANewOrderReq* _this = reinterpret_cast< ProtoOANewOrderReq* >(object);
  (void)_this;
}
void ProtoOANewOrderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOANewOrderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOANewOrderReq& ProtoOANewOrderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOANewOrderReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOANewOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOANewOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      comment_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      label_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      clientorderid_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stopprice_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(stopprice_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&expirationtimestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guaranteedstoploss_) -
        reinterpret_cast<char*>(&expirationtimestamp_)) + sizeof(guaranteedstoploss_));
  }
  if (cached_has_bits & 0x007f0000u) {
    ::memset(&trailingstoploss_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&relativetakeprofit_) -
        reinterpret_cast<char*>(&trailingstoploss_)) + sizeof(relativetakeprofit_));
    stoptriggermethod_ = 1;
    payloadtype_ = 2106;
    ordertype_ = 1;
    tradeside_ = 1;
    timeinforce_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOANewOrderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_NEW_ORDER_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAOrderType orderType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAOrderType_IsValid(val))) {
            _internal_set_ordertype(static_cast<::ProtoOAOrderType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required .ProtoOATradeSide tradeSide = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATradeSide_IsValid(val))) {
            _internal_set_tradeside(static_cast<::ProtoOATradeSide>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 volume = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_volume(&has_bits);
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double limitPrice = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_limitprice(&has_bits);
          limitprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double stopPrice = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_stopprice(&has_bits);
          stopprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOATimeInForce timeInForce = 9 [default = GOOD_TILL_CANCEL];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATimeInForce_IsValid(val))) {
            _internal_set_timeinforce(static_cast<::ProtoOATimeInForce>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional int64 expirationTimestamp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_expirationtimestamp(&has_bits);
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double stopLoss = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          _Internal::set_has_stoploss(&has_bits);
          stoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double takeProfit = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          _Internal::set_has_takeprofit(&has_bits);
          takeprofit_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional string comment = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_comment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOANewOrderReq.comment");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double baseSlippagePrice = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          _Internal::set_has_baseslippageprice(&has_bits);
          baseslippageprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int32 slippageInPoints = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_slippageinpoints(&has_bits);
          slippageinpoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string label = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOANewOrderReq.label");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 positionId = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string clientOrderId = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_clientorderid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOANewOrderReq.clientOrderId");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 relativeStopLoss = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          _Internal::set_has_relativestoploss(&has_bits);
          relativestoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 relativeTakeProfit = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          _Internal::set_has_relativetakeprofit(&has_bits);
          relativetakeprofit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool guaranteedStopLoss = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          _Internal::set_has_guaranteedstoploss(&has_bits);
          guaranteedstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool trailingStopLoss = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          _Internal::set_has_trailingstoploss(&has_bits);
          trailingstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 23 [default = TRADE];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAOrderTriggerMethod_IsValid(val))) {
            _internal_set_stoptriggermethod(static_cast<::ProtoOAOrderTriggerMethod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(23, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOANewOrderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOANewOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_NEW_ORDER_REQ];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 symbolId = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(), target);
  }

  // required .ProtoOAOrderType orderType = 4;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_ordertype(), target);
  }

  // required .ProtoOATradeSide tradeSide = 5;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_tradeside(), target);
  }

  // required int64 volume = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_volume(), target);
  }

  // optional double limitPrice = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_limitprice(), target);
  }

  // optional double stopPrice = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_stopprice(), target);
  }

  // optional .ProtoOATimeInForce timeInForce = 9 [default = GOOD_TILL_CANCEL];
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_timeinforce(), target);
  }

  // optional int64 expirationTimestamp = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_expirationtimestamp(), target);
  }

  // optional double stopLoss = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_stoploss(), target);
  }

  // optional double takeProfit = 12;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_takeprofit(), target);
  }

  // optional string comment = 13;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOANewOrderReq.comment");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_comment(), target);
  }

  // optional double baseSlippagePrice = 14;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_baseslippageprice(), target);
  }

  // optional int32 slippageInPoints = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_slippageinpoints(), target);
  }

  // optional string label = 16;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOANewOrderReq.label");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_label(), target);
  }

  // optional int64 positionId = 17;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(17, this->_internal_positionid(), target);
  }

  // optional string clientOrderId = 18;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientorderid().data(), static_cast<int>(this->_internal_clientorderid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOANewOrderReq.clientOrderId");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_clientorderid(), target);
  }

  // optional int64 relativeStopLoss = 19;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(19, this->_internal_relativestoploss(), target);
  }

  // optional int64 relativeTakeProfit = 20;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(20, this->_internal_relativetakeprofit(), target);
  }

  // optional bool guaranteedStopLoss = 21;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(21, this->_internal_guaranteedstoploss(), target);
  }

  // optional bool trailingStopLoss = 22;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(22, this->_internal_trailingstoploss(), target);
  }

  // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 23 [default = TRADE];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      23, this->_internal_stoptriggermethod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOANewOrderReq)
  return target;
}

size_t ProtoOANewOrderReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOANewOrderReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  if (_internal_has_volume()) {
    // required int64 volume = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_volume());
  }

  if (_internal_has_ordertype()) {
    // required .ProtoOAOrderType orderType = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ordertype());
  }

  if (_internal_has_tradeside()) {
    // required .ProtoOATradeSide tradeSide = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tradeside());
  }

  return total_size;
}
size_t ProtoOANewOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOANewOrderReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00300038) ^ 0x00300038) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

    // required int64 volume = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_volume());

    // required .ProtoOAOrderType orderType = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ordertype());

    // required .ProtoOATradeSide tradeSide = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_tradeside());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string comment = 13;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_comment());
    }

    // optional string label = 16;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_label());
    }

    // optional string clientOrderId = 18;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_clientorderid());
    }

  }
  if (cached_has_bits & 0x000000c0u) {
    // optional double limitPrice = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 8;
    }

    // optional double stopPrice = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional int64 expirationTimestamp = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_expirationtimestamp());
    }

    // optional double stopLoss = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 8;
    }

    // optional double takeProfit = 12;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 8;
    }

    // optional double baseSlippagePrice = 14;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 8;
    }

    // optional int64 positionId = 17;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_positionid());
    }

    // optional int64 relativeStopLoss = 19;
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_relativestoploss());
    }

    // optional int32 slippageInPoints = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_slippageinpoints());
    }

    // optional bool guaranteedStopLoss = 21;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 + 1;
    }

  }
  if (cached_has_bits & 0x000f0000u) {
    // optional bool trailingStopLoss = 22;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 + 1;
    }

    // optional int64 relativeTakeProfit = 20;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_relativetakeprofit());
    }

    // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 23 [default = TRADE];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stoptriggermethod());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_NEW_ORDER_REQ];
    if (cached_has_bits & 0x00080000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  // optional .ProtoOATimeInForce timeInForce = 9 [default = GOOD_TILL_CANCEL];
  if (cached_has_bits & 0x00400000u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_timeinforce());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOANewOrderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOANewOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOANewOrderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOANewOrderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOANewOrderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOANewOrderReq)
    MergeFrom(*source);
  }
}

void ProtoOANewOrderReq::MergeFrom(const ProtoOANewOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOANewOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_comment(from._internal_comment());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_label(from._internal_label());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_clientorderid(from._internal_clientorderid());
    }
    if (cached_has_bits & 0x00000008u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000010u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000020u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000040u) {
      limitprice_ = from.limitprice_;
    }
    if (cached_has_bits & 0x00000080u) {
      stopprice_ = from.stopprice_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      expirationtimestamp_ = from.expirationtimestamp_;
    }
    if (cached_has_bits & 0x00000200u) {
      stoploss_ = from.stoploss_;
    }
    if (cached_has_bits & 0x00000400u) {
      takeprofit_ = from.takeprofit_;
    }
    if (cached_has_bits & 0x00000800u) {
      baseslippageprice_ = from.baseslippageprice_;
    }
    if (cached_has_bits & 0x00001000u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00002000u) {
      relativestoploss_ = from.relativestoploss_;
    }
    if (cached_has_bits & 0x00004000u) {
      slippageinpoints_ = from.slippageinpoints_;
    }
    if (cached_has_bits & 0x00008000u) {
      guaranteedstoploss_ = from.guaranteedstoploss_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x007f0000u) {
    if (cached_has_bits & 0x00010000u) {
      trailingstoploss_ = from.trailingstoploss_;
    }
    if (cached_has_bits & 0x00020000u) {
      relativetakeprofit_ = from.relativetakeprofit_;
    }
    if (cached_has_bits & 0x00040000u) {
      stoptriggermethod_ = from.stoptriggermethod_;
    }
    if (cached_has_bits & 0x00080000u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00100000u) {
      ordertype_ = from.ordertype_;
    }
    if (cached_has_bits & 0x00200000u) {
      tradeside_ = from.tradeside_;
    }
    if (cached_has_bits & 0x00400000u) {
      timeinforce_ = from.timeinforce_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOANewOrderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOANewOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOANewOrderReq::CopyFrom(const ProtoOANewOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOANewOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOANewOrderReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOANewOrderReq::InternalSwap(ProtoOANewOrderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  comment_.Swap(&other->comment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clientorderid_.Swap(&other->clientorderid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOANewOrderReq, relativetakeprofit_)
      + sizeof(ProtoOANewOrderReq::relativetakeprofit_)
      - PROTOBUF_FIELD_OFFSET(ProtoOANewOrderReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(stoptriggermethod_, other->stoptriggermethod_);
  swap(payloadtype_, other->payloadtype_);
  swap(ordertype_, other->ordertype_);
  swap(tradeside_, other->tradeside_);
  swap(timeinforce_, other->timeinforce_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOANewOrderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAExecutionEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAExecutionEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_executiontype(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::ProtoOAPosition& position(const ProtoOAExecutionEvent* msg);
  static void set_has_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOAOrder& order(const ProtoOAExecutionEvent* msg);
  static void set_has_order(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::ProtoOADeal& deal(const ProtoOAExecutionEvent* msg);
  static void set_has_deal(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::ProtoOABonusDepositWithdraw& bonusdepositwithdraw(const ProtoOAExecutionEvent* msg);
  static void set_has_bonusdepositwithdraw(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::ProtoOADepositWithdraw& depositwithdraw(const ProtoOAExecutionEvent* msg);
  static void set_has_depositwithdraw(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_isserverevent(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000240) ^ 0x00000240) != 0;
  }
};

const ::ProtoOAPosition&
ProtoOAExecutionEvent::_Internal::position(const ProtoOAExecutionEvent* msg) {
  return *msg->position_;
}
const ::ProtoOAOrder&
ProtoOAExecutionEvent::_Internal::order(const ProtoOAExecutionEvent* msg) {
  return *msg->order_;
}
const ::ProtoOADeal&
ProtoOAExecutionEvent::_Internal::deal(const ProtoOAExecutionEvent* msg) {
  return *msg->deal_;
}
const ::ProtoOABonusDepositWithdraw&
ProtoOAExecutionEvent::_Internal::bonusdepositwithdraw(const ProtoOAExecutionEvent* msg) {
  return *msg->bonusdepositwithdraw_;
}
const ::ProtoOADepositWithdraw&
ProtoOAExecutionEvent::_Internal::depositwithdraw(const ProtoOAExecutionEvent* msg) {
  return *msg->depositwithdraw_;
}
void ProtoOAExecutionEvent::clear_position() {
  if (position_ != nullptr) position_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ProtoOAExecutionEvent::clear_order() {
  if (order_ != nullptr) order_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ProtoOAExecutionEvent::clear_deal() {
  if (deal_ != nullptr) deal_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ProtoOAExecutionEvent::clear_bonusdepositwithdraw() {
  if (bonusdepositwithdraw_ != nullptr) bonusdepositwithdraw_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
void ProtoOAExecutionEvent::clear_depositwithdraw() {
  if (depositwithdraw_ != nullptr) depositwithdraw_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
ProtoOAExecutionEvent::ProtoOAExecutionEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAExecutionEvent)
}
ProtoOAExecutionEvent::ProtoOAExecutionEvent(const ProtoOAExecutionEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errorcode()) {
    errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errorcode(), 
      GetArena());
  }
  if (from._internal_has_position()) {
    position_ = new ::ProtoOAPosition(*from.position_);
  } else {
    position_ = nullptr;
  }
  if (from._internal_has_order()) {
    order_ = new ::ProtoOAOrder(*from.order_);
  } else {
    order_ = nullptr;
  }
  if (from._internal_has_deal()) {
    deal_ = new ::ProtoOADeal(*from.deal_);
  } else {
    deal_ = nullptr;
  }
  if (from._internal_has_bonusdepositwithdraw()) {
    bonusdepositwithdraw_ = new ::ProtoOABonusDepositWithdraw(*from.bonusdepositwithdraw_);
  } else {
    bonusdepositwithdraw_ = nullptr;
  }
  if (from._internal_has_depositwithdraw()) {
    depositwithdraw_ = new ::ProtoOADepositWithdraw(*from.depositwithdraw_);
  } else {
    depositwithdraw_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&executiontype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(executiontype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAExecutionEvent)
}

void ProtoOAExecutionEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto.base);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&position_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&isserverevent_) -
      reinterpret_cast<char*>(&position_)) + sizeof(isserverevent_));
  payloadtype_ = 2126;
  executiontype_ = 2;
}

ProtoOAExecutionEvent::~ProtoOAExecutionEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAExecutionEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAExecutionEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  errorcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete order_;
  if (this != internal_default_instance()) delete deal_;
  if (this != internal_default_instance()) delete bonusdepositwithdraw_;
  if (this != internal_default_instance()) delete depositwithdraw_;
}

void ProtoOAExecutionEvent::ArenaDtor(void* object) {
  ProtoOAExecutionEvent* _this = reinterpret_cast< ProtoOAExecutionEvent* >(object);
  (void)_this;
}
void ProtoOAExecutionEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAExecutionEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAExecutionEvent& ProtoOAExecutionEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAExecutionEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAExecutionEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAExecutionEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      errorcode_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(position_ != nullptr);
      position_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(order_ != nullptr);
      order_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(deal_ != nullptr);
      deal_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(bonusdepositwithdraw_ != nullptr);
      bonusdepositwithdraw_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(depositwithdraw_ != nullptr);
      depositwithdraw_->Clear();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&isserverevent_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(isserverevent_));
  }
  if (cached_has_bits & 0x00000300u) {
    payloadtype_ = 2126;
    executiontype_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAExecutionEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXECUTION_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAExecutionType executionType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAExecutionType_IsValid(val))) {
            _internal_set_executiontype(static_cast<::ProtoOAExecutionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAPosition position = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAOrder order = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_order(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOADeal deal = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_deal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOABonusDepositWithdraw bonusDepositWithdraw = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_bonusdepositwithdraw(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOADepositWithdraw depositWithdraw = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_depositwithdraw(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string errorCode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_errorcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAExecutionEvent.errorCode");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool isServerEvent = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_isserverevent(&has_bits);
          isserverevent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAExecutionEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAExecutionEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXECUTION_EVENT];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOAExecutionType executionType = 3;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_executiontype(), target);
  }

  // optional .ProtoOAPosition position = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::position(this), target, stream);
  }

  // optional .ProtoOAOrder order = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::order(this), target, stream);
  }

  // optional .ProtoOADeal deal = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::deal(this), target, stream);
  }

  // optional .ProtoOABonusDepositWithdraw bonusDepositWithdraw = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::bonusdepositwithdraw(this), target, stream);
  }

  // optional .ProtoOADepositWithdraw depositWithdraw = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::depositwithdraw(this), target, stream);
  }

  // optional string errorCode = 9;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_errorcode().data(), static_cast<int>(this->_internal_errorcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAExecutionEvent.errorCode");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_errorcode(), target);
  }

  // optional bool isServerEvent = 10;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(10, this->_internal_isserverevent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAExecutionEvent)
  return target;
}

size_t ProtoOAExecutionEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAExecutionEvent)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_executiontype()) {
    // required .ProtoOAExecutionType executionType = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_executiontype());
  }

  return total_size;
}
size_t ProtoOAExecutionEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAExecutionEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000240) ^ 0x00000240) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required .ProtoOAExecutionType executionType = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_executiontype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string errorCode = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_errorcode());
    }

    // optional .ProtoOAPosition position = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *position_);
    }

    // optional .ProtoOAOrder order = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *order_);
    }

    // optional .ProtoOADeal deal = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *deal_);
    }

    // optional .ProtoOABonusDepositWithdraw bonusDepositWithdraw = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *bonusdepositwithdraw_);
    }

    // optional .ProtoOADepositWithdraw depositWithdraw = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *depositwithdraw_);
    }

  }
  // optional bool isServerEvent = 10;
  if (cached_has_bits & 0x00000080u) {
    total_size += 1 + 1;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXECUTION_EVENT];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAExecutionEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAExecutionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAExecutionEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAExecutionEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAExecutionEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAExecutionEvent)
    MergeFrom(*source);
  }
}

void ProtoOAExecutionEvent::MergeFrom(const ProtoOAExecutionEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAExecutionEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_errorcode(from._internal_errorcode());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_position()->::ProtoOAPosition::MergeFrom(from._internal_position());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_order()->::ProtoOAOrder::MergeFrom(from._internal_order());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_deal()->::ProtoOADeal::MergeFrom(from._internal_deal());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_bonusdepositwithdraw()->::ProtoOABonusDepositWithdraw::MergeFrom(from._internal_bonusdepositwithdraw());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_depositwithdraw()->::ProtoOADepositWithdraw::MergeFrom(from._internal_depositwithdraw());
    }
    if (cached_has_bits & 0x00000040u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000080u) {
      isserverevent_ = from.isserverevent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000200u) {
      executiontype_ = from.executiontype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAExecutionEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAExecutionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAExecutionEvent::CopyFrom(const ProtoOAExecutionEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAExecutionEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAExecutionEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_position()) {
    if (!position_->IsInitialized()) return false;
  }
  if (_internal_has_order()) {
    if (!order_->IsInitialized()) return false;
  }
  if (_internal_has_deal()) {
    if (!deal_->IsInitialized()) return false;
  }
  if (_internal_has_bonusdepositwithdraw()) {
    if (!bonusdepositwithdraw_->IsInitialized()) return false;
  }
  if (_internal_has_depositwithdraw()) {
    if (!depositwithdraw_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOAExecutionEvent::InternalSwap(ProtoOAExecutionEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errorcode_.Swap(&other->errorcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAExecutionEvent, isserverevent_)
      + sizeof(ProtoOAExecutionEvent::isserverevent_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAExecutionEvent, position_)>(
          reinterpret_cast<char*>(&position_),
          reinterpret_cast<char*>(&other->position_));
  swap(payloadtype_, other->payloadtype_);
  swap(executiontype_, other->executiontype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAExecutionEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOACancelOrderReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOACancelOrderReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_orderid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOACancelOrderReq::ProtoOACancelOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOACancelOrderReq)
}
ProtoOACancelOrderReq::ProtoOACancelOrderReq(const ProtoOACancelOrderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOACancelOrderReq)
}

void ProtoOACancelOrderReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&orderid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(orderid_));
  payloadtype_ = 2108;
}

ProtoOACancelOrderReq::~ProtoOACancelOrderReq() {
  // @@protoc_insertion_point(destructor:ProtoOACancelOrderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOACancelOrderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOACancelOrderReq::ArenaDtor(void* object) {
  ProtoOACancelOrderReq* _this = reinterpret_cast< ProtoOACancelOrderReq* >(object);
  (void)_this;
}
void ProtoOACancelOrderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOACancelOrderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOACancelOrderReq& ProtoOACancelOrderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOACancelOrderReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOACancelOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOACancelOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&orderid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(orderid_));
    payloadtype_ = 2108;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOACancelOrderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CANCEL_ORDER_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 orderId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_orderid(&has_bits);
          orderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOACancelOrderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOACancelOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CANCEL_ORDER_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 orderId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_orderid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOACancelOrderReq)
  return target;
}

size_t ProtoOACancelOrderReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOACancelOrderReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_orderid()) {
    // required int64 orderId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());
  }

  return total_size;
}
size_t ProtoOACancelOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOACancelOrderReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 orderId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CANCEL_ORDER_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOACancelOrderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOACancelOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOACancelOrderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOACancelOrderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOACancelOrderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOACancelOrderReq)
    MergeFrom(*source);
  }
}

void ProtoOACancelOrderReq::MergeFrom(const ProtoOACancelOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOACancelOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOACancelOrderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOACancelOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOACancelOrderReq::CopyFrom(const ProtoOACancelOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOACancelOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOACancelOrderReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOACancelOrderReq::InternalSwap(ProtoOACancelOrderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOACancelOrderReq, orderid_)
      + sizeof(ProtoOACancelOrderReq::orderid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOACancelOrderReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOACancelOrderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAmendOrderReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAmendOrderReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_orderid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_limitprice(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stopprice(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_expirationtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_stoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_takeprofit(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_slippageinpoints(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_relativestoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_relativetakeprofit(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_guaranteedstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_trailingstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_stoptriggermethod(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOAAmendOrderReq::ProtoOAAmendOrderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAmendOrderReq)
}
ProtoOAAmendOrderReq::ProtoOAAmendOrderReq(const ProtoOAAmendOrderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&stoptriggermethod_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(stoptriggermethod_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAmendOrderReq)
}

void ProtoOAAmendOrderReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&trailingstoploss_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(trailingstoploss_));
  payloadtype_ = 2109;
  stoptriggermethod_ = 1;
}

ProtoOAAmendOrderReq::~ProtoOAAmendOrderReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAmendOrderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAmendOrderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAmendOrderReq::ArenaDtor(void* object) {
  ProtoOAAmendOrderReq* _this = reinterpret_cast< ProtoOAAmendOrderReq* >(object);
  (void)_this;
}
void ProtoOAAmendOrderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAmendOrderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAmendOrderReq& ProtoOAAmendOrderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAmendOrderReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAmendOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAmendOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&takeprofit_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(takeprofit_));
  }
  if (cached_has_bits & 0x00007f00u) {
    ::memset(&relativestoploss_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trailingstoploss_) -
        reinterpret_cast<char*>(&relativestoploss_)) + sizeof(trailingstoploss_));
    payloadtype_ = 2109;
    stoptriggermethod_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAmendOrderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_ORDER_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 orderId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_orderid(&has_bits);
          orderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 volume = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_volume(&has_bits);
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double limitPrice = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_limitprice(&has_bits);
          limitprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double stopPrice = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_stopprice(&has_bits);
          stopprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int64 expirationTimestamp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_expirationtimestamp(&has_bits);
          expirationtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double stopLoss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_stoploss(&has_bits);
          stoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double takeProfit = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          _Internal::set_has_takeprofit(&has_bits);
          takeprofit_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional int32 slippageInPoints = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_slippageinpoints(&has_bits);
          slippageinpoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 relativeStopLoss = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_relativestoploss(&has_bits);
          relativestoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 relativeTakeProfit = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_relativetakeprofit(&has_bits);
          relativetakeprofit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool guaranteedStopLoss = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_guaranteedstoploss(&has_bits);
          guaranteedstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool trailingStopLoss = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_trailingstoploss(&has_bits);
          trailingstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 15 [default = TRADE];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAOrderTriggerMethod_IsValid(val))) {
            _internal_set_stoptriggermethod(static_cast<::ProtoOAOrderTriggerMethod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAmendOrderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAmendOrderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_ORDER_REQ];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 orderId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_orderid(), target);
  }

  // optional int64 volume = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_volume(), target);
  }

  // optional double limitPrice = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_limitprice(), target);
  }

  // optional double stopPrice = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_stopprice(), target);
  }

  // optional int64 expirationTimestamp = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_expirationtimestamp(), target);
  }

  // optional double stopLoss = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_stoploss(), target);
  }

  // optional double takeProfit = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_takeprofit(), target);
  }

  // optional int32 slippageInPoints = 10;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_slippageinpoints(), target);
  }

  // optional int64 relativeStopLoss = 11;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(11, this->_internal_relativestoploss(), target);
  }

  // optional int64 relativeTakeProfit = 12;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_relativetakeprofit(), target);
  }

  // optional bool guaranteedStopLoss = 13;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(13, this->_internal_guaranteedstoploss(), target);
  }

  // optional bool trailingStopLoss = 14;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(14, this->_internal_trailingstoploss(), target);
  }

  // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 15 [default = TRADE];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_stoptriggermethod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAmendOrderReq)
  return target;
}

size_t ProtoOAAmendOrderReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAAmendOrderReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_orderid()) {
    // required int64 orderId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());
  }

  return total_size;
}
size_t ProtoOAAmendOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAmendOrderReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 orderId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000fcu) {
    // optional int64 volume = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_volume());
    }

    // optional double limitPrice = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double stopPrice = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional int64 expirationTimestamp = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_expirationtimestamp());
    }

    // optional double stopLoss = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 8;
    }

    // optional double takeProfit = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x00007f00u) {
    // optional int64 relativeStopLoss = 11;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_relativestoploss());
    }

    // optional int64 relativeTakeProfit = 12;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_relativetakeprofit());
    }

    // optional int32 slippageInPoints = 10;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_slippageinpoints());
    }

    // optional bool guaranteedStopLoss = 13;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 1;
    }

    // optional bool trailingStopLoss = 14;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 1;
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_ORDER_REQ];
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

    // optional .ProtoOAOrderTriggerMethod stopTriggerMethod = 15 [default = TRADE];
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stoptriggermethod());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAmendOrderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAmendOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAmendOrderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAmendOrderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAmendOrderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAmendOrderReq)
    MergeFrom(*source);
  }
}

void ProtoOAAmendOrderReq::MergeFrom(const ProtoOAAmendOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAmendOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000004u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000008u) {
      limitprice_ = from.limitprice_;
    }
    if (cached_has_bits & 0x00000010u) {
      stopprice_ = from.stopprice_;
    }
    if (cached_has_bits & 0x00000020u) {
      expirationtimestamp_ = from.expirationtimestamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      stoploss_ = from.stoploss_;
    }
    if (cached_has_bits & 0x00000080u) {
      takeprofit_ = from.takeprofit_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      relativestoploss_ = from.relativestoploss_;
    }
    if (cached_has_bits & 0x00000200u) {
      relativetakeprofit_ = from.relativetakeprofit_;
    }
    if (cached_has_bits & 0x00000400u) {
      slippageinpoints_ = from.slippageinpoints_;
    }
    if (cached_has_bits & 0x00000800u) {
      guaranteedstoploss_ = from.guaranteedstoploss_;
    }
    if (cached_has_bits & 0x00001000u) {
      trailingstoploss_ = from.trailingstoploss_;
    }
    if (cached_has_bits & 0x00002000u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00004000u) {
      stoptriggermethod_ = from.stoptriggermethod_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAmendOrderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAmendOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAmendOrderReq::CopyFrom(const ProtoOAAmendOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAmendOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAmendOrderReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAmendOrderReq::InternalSwap(ProtoOAAmendOrderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAAmendOrderReq, trailingstoploss_)
      + sizeof(ProtoOAAmendOrderReq::trailingstoploss_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAAmendOrderReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(stoptriggermethod_, other->stoptriggermethod_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAmendOrderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAmendPositionSLTPReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAmendPositionSLTPReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_stoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_takeprofit(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_guaranteedstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_trailingstoploss(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_stoplosstriggermethod(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOAAmendPositionSLTPReq::ProtoOAAmendPositionSLTPReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAmendPositionSLTPReq)
}
ProtoOAAmendPositionSLTPReq::ProtoOAAmendPositionSLTPReq(const ProtoOAAmendPositionSLTPReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&stoplosstriggermethod_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(stoplosstriggermethod_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAmendPositionSLTPReq)
}

void ProtoOAAmendPositionSLTPReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&trailingstoploss_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(trailingstoploss_));
  payloadtype_ = 2110;
  stoplosstriggermethod_ = 1;
}

ProtoOAAmendPositionSLTPReq::~ProtoOAAmendPositionSLTPReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAmendPositionSLTPReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAmendPositionSLTPReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAmendPositionSLTPReq::ArenaDtor(void* object) {
  ProtoOAAmendPositionSLTPReq* _this = reinterpret_cast< ProtoOAAmendPositionSLTPReq* >(object);
  (void)_this;
}
void ProtoOAAmendPositionSLTPReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAmendPositionSLTPReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAmendPositionSLTPReq& ProtoOAAmendPositionSLTPReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAmendPositionSLTPReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAmendPositionSLTPReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAmendPositionSLTPReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&trailingstoploss_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(trailingstoploss_));
    payloadtype_ = 2110;
    stoplosstriggermethod_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAmendPositionSLTPReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_POSITION_SLTP_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 positionId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double stopLoss = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_stoploss(&has_bits);
          stoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double takeProfit = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_takeprofit(&has_bits);
          takeprofit_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional bool guaranteedStopLoss = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_guaranteedstoploss(&has_bits);
          guaranteedstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool trailingStopLoss = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_trailingstoploss(&has_bits);
          trailingstoploss_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAOrderTriggerMethod stopLossTriggerMethod = 9 [default = TRADE];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAOrderTriggerMethod_IsValid(val))) {
            _internal_set_stoplosstriggermethod(static_cast<::ProtoOAOrderTriggerMethod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAmendPositionSLTPReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAmendPositionSLTPReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_POSITION_SLTP_REQ];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 positionId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_positionid(), target);
  }

  // optional double stopLoss = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_stoploss(), target);
  }

  // optional double takeProfit = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_takeprofit(), target);
  }

  // optional bool guaranteedStopLoss = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(7, this->_internal_guaranteedstoploss(), target);
  }

  // optional bool trailingStopLoss = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(8, this->_internal_trailingstoploss(), target);
  }

  // optional .ProtoOAOrderTriggerMethod stopLossTriggerMethod = 9 [default = TRADE];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_stoplosstriggermethod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAmendPositionSLTPReq)
  return target;
}

size_t ProtoOAAmendPositionSLTPReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAAmendPositionSLTPReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_positionid()) {
    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());
  }

  return total_size;
}
size_t ProtoOAAmendPositionSLTPReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAmendPositionSLTPReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000fcu) {
    // optional double stopLoss = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double takeProfit = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional bool guaranteedStopLoss = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional bool trailingStopLoss = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_AMEND_POSITION_SLTP_REQ];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

    // optional .ProtoOAOrderTriggerMethod stopLossTriggerMethod = 9 [default = TRADE];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_stoplosstriggermethod());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAmendPositionSLTPReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAmendPositionSLTPReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAmendPositionSLTPReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAmendPositionSLTPReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAmendPositionSLTPReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAmendPositionSLTPReq)
    MergeFrom(*source);
  }
}

void ProtoOAAmendPositionSLTPReq::MergeFrom(const ProtoOAAmendPositionSLTPReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAmendPositionSLTPReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00000004u) {
      stoploss_ = from.stoploss_;
    }
    if (cached_has_bits & 0x00000008u) {
      takeprofit_ = from.takeprofit_;
    }
    if (cached_has_bits & 0x00000010u) {
      guaranteedstoploss_ = from.guaranteedstoploss_;
    }
    if (cached_has_bits & 0x00000020u) {
      trailingstoploss_ = from.trailingstoploss_;
    }
    if (cached_has_bits & 0x00000040u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      stoplosstriggermethod_ = from.stoplosstriggermethod_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAmendPositionSLTPReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAmendPositionSLTPReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAmendPositionSLTPReq::CopyFrom(const ProtoOAAmendPositionSLTPReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAmendPositionSLTPReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAmendPositionSLTPReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAmendPositionSLTPReq::InternalSwap(ProtoOAAmendPositionSLTPReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAAmendPositionSLTPReq, trailingstoploss_)
      + sizeof(ProtoOAAmendPositionSLTPReq::trailingstoploss_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAAmendPositionSLTPReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(stoplosstriggermethod_, other->stoplosstriggermethod_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAmendPositionSLTPReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAClosePositionReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAClosePositionReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_volume(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProtoOAClosePositionReq::ProtoOAClosePositionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAClosePositionReq)
}
ProtoOAClosePositionReq::ProtoOAClosePositionReq(const ProtoOAClosePositionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAClosePositionReq)
}

void ProtoOAClosePositionReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&volume_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(volume_));
  payloadtype_ = 2111;
}

ProtoOAClosePositionReq::~ProtoOAClosePositionReq() {
  // @@protoc_insertion_point(destructor:ProtoOAClosePositionReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAClosePositionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAClosePositionReq::ArenaDtor(void* object) {
  ProtoOAClosePositionReq* _this = reinterpret_cast< ProtoOAClosePositionReq* >(object);
  (void)_this;
}
void ProtoOAClosePositionReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAClosePositionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAClosePositionReq& ProtoOAClosePositionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAClosePositionReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAClosePositionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAClosePositionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&volume_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(volume_));
    payloadtype_ = 2111;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAClosePositionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLOSE_POSITION_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 positionId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 volume = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_volume(&has_bits);
          volume_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAClosePositionReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAClosePositionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLOSE_POSITION_REQ];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 positionId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_positionid(), target);
  }

  // required int64 volume = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_volume(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAClosePositionReq)
  return target;
}

size_t ProtoOAClosePositionReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAClosePositionReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_positionid()) {
    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());
  }

  if (_internal_has_volume()) {
    // required int64 volume = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_volume());
  }

  return total_size;
}
size_t ProtoOAClosePositionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAClosePositionReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());

    // required int64 volume = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_volume());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CLOSE_POSITION_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAClosePositionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAClosePositionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAClosePositionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAClosePositionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAClosePositionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAClosePositionReq)
    MergeFrom(*source);
  }
}

void ProtoOAClosePositionReq::MergeFrom(const ProtoOAClosePositionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAClosePositionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00000004u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000008u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAClosePositionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAClosePositionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAClosePositionReq::CopyFrom(const ProtoOAClosePositionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAClosePositionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAClosePositionReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAClosePositionReq::InternalSwap(ProtoOAClosePositionReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAClosePositionReq, volume_)
      + sizeof(ProtoOAClosePositionReq::volume_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAClosePositionReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAClosePositionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOATrailingSLChangedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOATrailingSLChangedEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_orderid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_stopprice(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_utclastupdatetimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000001f) ^ 0x0000001f) != 0;
  }
};

ProtoOATrailingSLChangedEvent::ProtoOATrailingSLChangedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOATrailingSLChangedEvent)
}
ProtoOATrailingSLChangedEvent::ProtoOATrailingSLChangedEvent(const ProtoOATrailingSLChangedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOATrailingSLChangedEvent)
}

void ProtoOATrailingSLChangedEvent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&utclastupdatetimestamp_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(utclastupdatetimestamp_));
  payloadtype_ = 2107;
}

ProtoOATrailingSLChangedEvent::~ProtoOATrailingSLChangedEvent() {
  // @@protoc_insertion_point(destructor:ProtoOATrailingSLChangedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOATrailingSLChangedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOATrailingSLChangedEvent::ArenaDtor(void* object) {
  ProtoOATrailingSLChangedEvent* _this = reinterpret_cast< ProtoOATrailingSLChangedEvent* >(object);
  (void)_this;
}
void ProtoOATrailingSLChangedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOATrailingSLChangedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOATrailingSLChangedEvent& ProtoOATrailingSLChangedEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOATrailingSLChangedEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOATrailingSLChangedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOATrailingSLChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&utclastupdatetimestamp_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(utclastupdatetimestamp_));
    payloadtype_ = 2107;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOATrailingSLChangedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRAILING_SL_CHANGED_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 positionId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 orderId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_orderid(&has_bits);
          orderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required double stopPrice = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_stopprice(&has_bits);
          stopprice_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required int64 utcLastUpdateTimestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_utclastupdatetimestamp(&has_bits);
          utclastupdatetimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOATrailingSLChangedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOATrailingSLChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRAILING_SL_CHANGED_EVENT];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 positionId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_positionid(), target);
  }

  // required int64 orderId = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_orderid(), target);
  }

  // required double stopPrice = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_stopprice(), target);
  }

  // required int64 utcLastUpdateTimestamp = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_utclastupdatetimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOATrailingSLChangedEvent)
  return target;
}

size_t ProtoOATrailingSLChangedEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOATrailingSLChangedEvent)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_positionid()) {
    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());
  }

  if (_internal_has_orderid()) {
    // required int64 orderId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());
  }

  if (_internal_has_stopprice()) {
    // required double stopPrice = 5;
    total_size += 1 + 8;
  }

  if (_internal_has_utclastupdatetimestamp()) {
    // required int64 utcLastUpdateTimestamp = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_utclastupdatetimestamp());
  }

  return total_size;
}
size_t ProtoOATrailingSLChangedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOATrailingSLChangedEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_positionid());

    // required int64 orderId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_orderid());

    // required double stopPrice = 5;
    total_size += 1 + 8;

    // required int64 utcLastUpdateTimestamp = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_utclastupdatetimestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRAILING_SL_CHANGED_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000020u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOATrailingSLChangedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOATrailingSLChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOATrailingSLChangedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOATrailingSLChangedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOATrailingSLChangedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOATrailingSLChangedEvent)
    MergeFrom(*source);
  }
}

void ProtoOATrailingSLChangedEvent::MergeFrom(const ProtoOATrailingSLChangedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOATrailingSLChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00000004u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000008u) {
      stopprice_ = from.stopprice_;
    }
    if (cached_has_bits & 0x00000010u) {
      utclastupdatetimestamp_ = from.utclastupdatetimestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOATrailingSLChangedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOATrailingSLChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOATrailingSLChangedEvent::CopyFrom(const ProtoOATrailingSLChangedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOATrailingSLChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOATrailingSLChangedEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOATrailingSLChangedEvent::InternalSwap(ProtoOATrailingSLChangedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOATrailingSLChangedEvent, utclastupdatetimestamp_)
      + sizeof(ProtoOATrailingSLChangedEvent::utclastupdatetimestamp_)
      - PROTOBUF_FIELD_OFFSET(ProtoOATrailingSLChangedEvent, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOATrailingSLChangedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAssetListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAssetListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAssetListReq::ProtoOAAssetListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAssetListReq)
}
ProtoOAAssetListReq::ProtoOAAssetListReq(const ProtoOAAssetListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAssetListReq)
}

void ProtoOAAssetListReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2112;
}

ProtoOAAssetListReq::~ProtoOAAssetListReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAssetListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAssetListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAssetListReq::ArenaDtor(void* object) {
  ProtoOAAssetListReq* _this = reinterpret_cast< ProtoOAAssetListReq* >(object);
  (void)_this;
}
void ProtoOAAssetListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAssetListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAssetListReq& ProtoOAAssetListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAssetListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAssetListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAssetListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2112;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAssetListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAssetListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAssetListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAssetListReq)
  return target;
}

size_t ProtoOAAssetListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAssetListReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAssetListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAssetListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAssetListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAssetListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAssetListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAssetListReq)
    MergeFrom(*source);
  }
}

void ProtoOAAssetListReq::MergeFrom(const ProtoOAAssetListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAssetListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAssetListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAssetListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAssetListReq::CopyFrom(const ProtoOAAssetListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAssetListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAssetListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAssetListReq::InternalSwap(ProtoOAAssetListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAssetListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAssetListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAssetListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOAAssetListRes::clear_asset() {
  asset_.Clear();
}
ProtoOAAssetListRes::ProtoOAAssetListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  asset_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAssetListRes)
}
ProtoOAAssetListRes::ProtoOAAssetListRes(const ProtoOAAssetListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      asset_(from.asset_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAssetListRes)
}

void ProtoOAAssetListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2113;
}

ProtoOAAssetListRes::~ProtoOAAssetListRes() {
  // @@protoc_insertion_point(destructor:ProtoOAAssetListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAssetListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAssetListRes::ArenaDtor(void* object) {
  ProtoOAAssetListRes* _this = reinterpret_cast< ProtoOAAssetListRes* >(object);
  (void)_this;
}
void ProtoOAAssetListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAssetListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAssetListRes& ProtoOAAssetListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAssetListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAssetListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAssetListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asset_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2113;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAssetListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAAsset asset = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_asset(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAssetListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAssetListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOAAsset asset = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_asset_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_asset(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAssetListRes)
  return target;
}

size_t ProtoOAAssetListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAssetListRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOAAsset asset = 3;
  total_size += 1UL * this->_internal_asset_size();
  for (const auto& msg : this->asset_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAssetListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAssetListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAssetListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAssetListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAssetListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAssetListRes)
    MergeFrom(*source);
  }
}

void ProtoOAAssetListRes::MergeFrom(const ProtoOAAssetListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAssetListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  asset_.MergeFrom(from.asset_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAssetListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAssetListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAssetListRes::CopyFrom(const ProtoOAAssetListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAssetListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAssetListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(asset_)) return false;
  return true;
}

void ProtoOAAssetListRes::InternalSwap(ProtoOAAssetListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  asset_.InternalSwap(&other->asset_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAssetListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolsListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolsListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_includearchivedsymbols(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASymbolsListReq::ProtoOASymbolsListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolsListReq)
}
ProtoOASymbolsListReq::ProtoOASymbolsListReq(const ProtoOASymbolsListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolsListReq)
}

void ProtoOASymbolsListReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&includearchivedsymbols_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(includearchivedsymbols_));
  payloadtype_ = 2114;
}

ProtoOASymbolsListReq::~ProtoOASymbolsListReq() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolsListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolsListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolsListReq::ArenaDtor(void* object) {
  ProtoOASymbolsListReq* _this = reinterpret_cast< ProtoOASymbolsListReq* >(object);
  (void)_this;
}
void ProtoOASymbolsListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolsListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolsListReq& ProtoOASymbolsListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolsListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolsListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolsListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&includearchivedsymbols_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(includearchivedsymbols_));
    payloadtype_ = 2114;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolsListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool includeArchivedSymbols = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_includearchivedsymbols(&has_bits);
          includearchivedsymbols_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolsListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolsListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // optional bool includeArchivedSymbols = 3 [default = false];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_includearchivedsymbols(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolsListReq)
  return target;
}

size_t ProtoOASymbolsListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolsListReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional bool includeArchivedSymbols = 3 [default = false];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_REQ];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolsListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolsListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolsListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolsListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolsListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolsListReq)
    MergeFrom(*source);
  }
}

void ProtoOASymbolsListReq::MergeFrom(const ProtoOASymbolsListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolsListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      includearchivedsymbols_ = from.includearchivedsymbols_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolsListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolsListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolsListReq::CopyFrom(const ProtoOASymbolsListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolsListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolsListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASymbolsListReq::InternalSwap(ProtoOASymbolsListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOASymbolsListReq, includearchivedsymbols_)
      + sizeof(ProtoOASymbolsListReq::includearchivedsymbols_)
      - PROTOBUF_FIELD_OFFSET(ProtoOASymbolsListReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolsListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolsListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolsListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOASymbolsListRes::clear_symbol() {
  symbol_.Clear();
}
void ProtoOASymbolsListRes::clear_archivedsymbol() {
  archivedsymbol_.Clear();
}
ProtoOASymbolsListRes::ProtoOASymbolsListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbol_(arena),
  archivedsymbol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolsListRes)
}
ProtoOASymbolsListRes::ProtoOASymbolsListRes(const ProtoOASymbolsListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbol_(from.symbol_),
      archivedsymbol_(from.archivedsymbol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolsListRes)
}

void ProtoOASymbolsListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2115;
}

ProtoOASymbolsListRes::~ProtoOASymbolsListRes() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolsListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolsListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolsListRes::ArenaDtor(void* object) {
  ProtoOASymbolsListRes* _this = reinterpret_cast< ProtoOASymbolsListRes* >(object);
  (void)_this;
}
void ProtoOASymbolsListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolsListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolsListRes& ProtoOASymbolsListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolsListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolsListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolsListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.Clear();
  archivedsymbol_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2115;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolsListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOALightSymbol symbol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_symbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_archivedsymbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolsListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolsListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOALightSymbol symbol = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_symbol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_symbol(i), target, stream);
  }

  // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_archivedsymbol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_archivedsymbol(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolsListRes)
  return target;
}

size_t ProtoOASymbolsListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolsListRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOALightSymbol symbol = 3;
  total_size += 1UL * this->_internal_symbol_size();
  for (const auto& msg : this->symbol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
  total_size += 1UL * this->_internal_archivedsymbol_size();
  for (const auto& msg : this->archivedsymbol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolsListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolsListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolsListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolsListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolsListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolsListRes)
    MergeFrom(*source);
  }
}

void ProtoOASymbolsListRes::MergeFrom(const ProtoOASymbolsListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolsListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbol_.MergeFrom(from.symbol_);
  archivedsymbol_.MergeFrom(from.archivedsymbol_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolsListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolsListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolsListRes::CopyFrom(const ProtoOASymbolsListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolsListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolsListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(symbol_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(archivedsymbol_)) return false;
  return true;
}

void ProtoOASymbolsListRes::InternalSwap(ProtoOASymbolsListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbol_.InternalSwap(&other->symbol_);
  archivedsymbol_.InternalSwap(&other->archivedsymbol_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolsListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolByIdReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolByIdReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASymbolByIdReq::ProtoOASymbolByIdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolByIdReq)
}
ProtoOASymbolByIdReq::ProtoOASymbolByIdReq(const ProtoOASymbolByIdReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolByIdReq)
}

void ProtoOASymbolByIdReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2116;
}

ProtoOASymbolByIdReq::~ProtoOASymbolByIdReq() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolByIdReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolByIdReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolByIdReq::ArenaDtor(void* object) {
  ProtoOASymbolByIdReq* _this = reinterpret_cast< ProtoOASymbolByIdReq* >(object);
  (void)_this;
}
void ProtoOASymbolByIdReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolByIdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolByIdReq& ProtoOASymbolByIdReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolByIdReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolByIdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolByIdReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2116;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolByIdReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolByIdReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolByIdReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolByIdReq)
  return target;
}

size_t ProtoOASymbolByIdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolByIdReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolByIdReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolByIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolByIdReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolByIdReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolByIdReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolByIdReq)
    MergeFrom(*source);
  }
}

void ProtoOASymbolByIdReq::MergeFrom(const ProtoOASymbolByIdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolByIdReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolByIdReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolByIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolByIdReq::CopyFrom(const ProtoOASymbolByIdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolByIdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolByIdReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASymbolByIdReq::InternalSwap(ProtoOASymbolByIdReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolByIdReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolByIdRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolByIdRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOASymbolByIdRes::clear_symbol() {
  symbol_.Clear();
}
void ProtoOASymbolByIdRes::clear_archivedsymbol() {
  archivedsymbol_.Clear();
}
ProtoOASymbolByIdRes::ProtoOASymbolByIdRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbol_(arena),
  archivedsymbol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolByIdRes)
}
ProtoOASymbolByIdRes::ProtoOASymbolByIdRes(const ProtoOASymbolByIdRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbol_(from.symbol_),
      archivedsymbol_(from.archivedsymbol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolByIdRes)
}

void ProtoOASymbolByIdRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2117;
}

ProtoOASymbolByIdRes::~ProtoOASymbolByIdRes() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolByIdRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolByIdRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolByIdRes::ArenaDtor(void* object) {
  ProtoOASymbolByIdRes* _this = reinterpret_cast< ProtoOASymbolByIdRes* >(object);
  (void)_this;
}
void ProtoOASymbolByIdRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolByIdRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolByIdRes& ProtoOASymbolByIdRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolByIdRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolByIdRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolByIdRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.Clear();
  archivedsymbol_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2117;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolByIdRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOASymbol symbol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_symbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_archivedsymbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolByIdRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolByIdRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOASymbol symbol = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_symbol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_symbol(i), target, stream);
  }

  // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_archivedsymbol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_archivedsymbol(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolByIdRes)
  return target;
}

size_t ProtoOASymbolByIdRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolByIdRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOASymbol symbol = 3;
  total_size += 1UL * this->_internal_symbol_size();
  for (const auto& msg : this->symbol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoOAArchivedSymbol archivedSymbol = 4;
  total_size += 1UL * this->_internal_archivedsymbol_size();
  for (const auto& msg : this->archivedsymbol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_BY_ID_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolByIdRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolByIdRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolByIdRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolByIdRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolByIdRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolByIdRes)
    MergeFrom(*source);
  }
}

void ProtoOASymbolByIdRes::MergeFrom(const ProtoOASymbolByIdRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolByIdRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbol_.MergeFrom(from.symbol_);
  archivedsymbol_.MergeFrom(from.archivedsymbol_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolByIdRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolByIdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolByIdRes::CopyFrom(const ProtoOASymbolByIdRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolByIdRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolByIdRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(symbol_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(archivedsymbol_)) return false;
  return true;
}

void ProtoOASymbolByIdRes::InternalSwap(ProtoOASymbolByIdRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbol_.InternalSwap(&other->symbol_);
  archivedsymbol_.InternalSwap(&other->archivedsymbol_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolByIdRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolsForConversionReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolsForConversionReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_firstassetid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_lastassetid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProtoOASymbolsForConversionReq::ProtoOASymbolsForConversionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolsForConversionReq)
}
ProtoOASymbolsForConversionReq::ProtoOASymbolsForConversionReq(const ProtoOASymbolsForConversionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolsForConversionReq)
}

void ProtoOASymbolsForConversionReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&lastassetid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(lastassetid_));
  payloadtype_ = 2118;
}

ProtoOASymbolsForConversionReq::~ProtoOASymbolsForConversionReq() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolsForConversionReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolsForConversionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolsForConversionReq::ArenaDtor(void* object) {
  ProtoOASymbolsForConversionReq* _this = reinterpret_cast< ProtoOASymbolsForConversionReq* >(object);
  (void)_this;
}
void ProtoOASymbolsForConversionReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolsForConversionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolsForConversionReq& ProtoOASymbolsForConversionReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolsForConversionReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolsForConversionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolsForConversionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&lastassetid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(lastassetid_));
    payloadtype_ = 2118;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolsForConversionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 firstAssetId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_firstassetid(&has_bits);
          firstassetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 lastAssetId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_lastassetid(&has_bits);
          lastassetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolsForConversionReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolsForConversionReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 firstAssetId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_firstassetid(), target);
  }

  // required int64 lastAssetId = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_lastassetid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolsForConversionReq)
  return target;
}

size_t ProtoOASymbolsForConversionReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOASymbolsForConversionReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_firstassetid()) {
    // required int64 firstAssetId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_firstassetid());
  }

  if (_internal_has_lastassetid()) {
    // required int64 lastAssetId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastassetid());
  }

  return total_size;
}
size_t ProtoOASymbolsForConversionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolsForConversionReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 firstAssetId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_firstassetid());

    // required int64 lastAssetId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_lastassetid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolsForConversionReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolsForConversionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolsForConversionReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolsForConversionReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolsForConversionReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolsForConversionReq)
    MergeFrom(*source);
  }
}

void ProtoOASymbolsForConversionReq::MergeFrom(const ProtoOASymbolsForConversionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolsForConversionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      firstassetid_ = from.firstassetid_;
    }
    if (cached_has_bits & 0x00000004u) {
      lastassetid_ = from.lastassetid_;
    }
    if (cached_has_bits & 0x00000008u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolsForConversionReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolsForConversionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolsForConversionReq::CopyFrom(const ProtoOASymbolsForConversionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolsForConversionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolsForConversionReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASymbolsForConversionReq::InternalSwap(ProtoOASymbolsForConversionReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOASymbolsForConversionReq, lastassetid_)
      + sizeof(ProtoOASymbolsForConversionReq::lastassetid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOASymbolsForConversionReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolsForConversionReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolsForConversionRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolsForConversionRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOASymbolsForConversionRes::clear_symbol() {
  symbol_.Clear();
}
ProtoOASymbolsForConversionRes::ProtoOASymbolsForConversionRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbol_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolsForConversionRes)
}
ProtoOASymbolsForConversionRes::ProtoOASymbolsForConversionRes(const ProtoOASymbolsForConversionRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbol_(from.symbol_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolsForConversionRes)
}

void ProtoOASymbolsForConversionRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2119;
}

ProtoOASymbolsForConversionRes::~ProtoOASymbolsForConversionRes() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolsForConversionRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolsForConversionRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolsForConversionRes::ArenaDtor(void* object) {
  ProtoOASymbolsForConversionRes* _this = reinterpret_cast< ProtoOASymbolsForConversionRes* >(object);
  (void)_this;
}
void ProtoOASymbolsForConversionRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolsForConversionRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolsForConversionRes& ProtoOASymbolsForConversionRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolsForConversionRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolsForConversionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolsForConversionRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbol_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2119;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolsForConversionRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOALightSymbol symbol = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_symbol(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolsForConversionRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolsForConversionRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOALightSymbol symbol = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_symbol_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_symbol(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolsForConversionRes)
  return target;
}

size_t ProtoOASymbolsForConversionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolsForConversionRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOALightSymbol symbol = 3;
  total_size += 1UL * this->_internal_symbol_size();
  for (const auto& msg : this->symbol_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOLS_FOR_CONVERSION_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolsForConversionRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolsForConversionRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolsForConversionRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolsForConversionRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolsForConversionRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolsForConversionRes)
    MergeFrom(*source);
  }
}

void ProtoOASymbolsForConversionRes::MergeFrom(const ProtoOASymbolsForConversionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolsForConversionRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbol_.MergeFrom(from.symbol_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolsForConversionRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolsForConversionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolsForConversionRes::CopyFrom(const ProtoOASymbolsForConversionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolsForConversionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolsForConversionRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(symbol_)) return false;
  return true;
}

void ProtoOASymbolsForConversionRes::InternalSwap(ProtoOASymbolsForConversionRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbol_.InternalSwap(&other->symbol_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolsForConversionRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolChangedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolChangedEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASymbolChangedEvent::ProtoOASymbolChangedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolChangedEvent)
}
ProtoOASymbolChangedEvent::ProtoOASymbolChangedEvent(const ProtoOASymbolChangedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolChangedEvent)
}

void ProtoOASymbolChangedEvent::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2120;
}

ProtoOASymbolChangedEvent::~ProtoOASymbolChangedEvent() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolChangedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolChangedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolChangedEvent::ArenaDtor(void* object) {
  ProtoOASymbolChangedEvent* _this = reinterpret_cast< ProtoOASymbolChangedEvent* >(object);
  (void)_this;
}
void ProtoOASymbolChangedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolChangedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolChangedEvent& ProtoOASymbolChangedEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolChangedEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolChangedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2120;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolChangedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CHANGED_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolChangedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CHANGED_EVENT];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolChangedEvent)
  return target;
}

size_t ProtoOASymbolChangedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolChangedEvent)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CHANGED_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolChangedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolChangedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolChangedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolChangedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolChangedEvent)
    MergeFrom(*source);
  }
}

void ProtoOASymbolChangedEvent::MergeFrom(const ProtoOASymbolChangedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolChangedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolChangedEvent::CopyFrom(const ProtoOASymbolChangedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolChangedEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASymbolChangedEvent::InternalSwap(ProtoOASymbolChangedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolChangedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAssetClassListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAssetClassListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAssetClassListReq::ProtoOAAssetClassListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAssetClassListReq)
}
ProtoOAAssetClassListReq::ProtoOAAssetClassListReq(const ProtoOAAssetClassListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAssetClassListReq)
}

void ProtoOAAssetClassListReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2153;
}

ProtoOAAssetClassListReq::~ProtoOAAssetClassListReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAssetClassListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAssetClassListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAssetClassListReq::ArenaDtor(void* object) {
  ProtoOAAssetClassListReq* _this = reinterpret_cast< ProtoOAAssetClassListReq* >(object);
  (void)_this;
}
void ProtoOAAssetClassListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAssetClassListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAssetClassListReq& ProtoOAAssetClassListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAssetClassListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAssetClassListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAssetClassListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2153;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAssetClassListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAssetClassListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAssetClassListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAssetClassListReq)
  return target;
}

size_t ProtoOAAssetClassListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAssetClassListReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAssetClassListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAssetClassListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAssetClassListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAssetClassListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAssetClassListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAssetClassListReq)
    MergeFrom(*source);
  }
}

void ProtoOAAssetClassListReq::MergeFrom(const ProtoOAAssetClassListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAssetClassListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAssetClassListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAssetClassListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAssetClassListReq::CopyFrom(const ProtoOAAssetClassListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAssetClassListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAssetClassListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAssetClassListReq::InternalSwap(ProtoOAAssetClassListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAssetClassListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAssetClassListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAssetClassListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOAAssetClassListRes::clear_assetclass() {
  assetclass_.Clear();
}
ProtoOAAssetClassListRes::ProtoOAAssetClassListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  assetclass_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAssetClassListRes)
}
ProtoOAAssetClassListRes::ProtoOAAssetClassListRes(const ProtoOAAssetClassListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      assetclass_(from.assetclass_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAssetClassListRes)
}

void ProtoOAAssetClassListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2154;
}

ProtoOAAssetClassListRes::~ProtoOAAssetClassListRes() {
  // @@protoc_insertion_point(destructor:ProtoOAAssetClassListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAssetClassListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAssetClassListRes::ArenaDtor(void* object) {
  ProtoOAAssetClassListRes* _this = reinterpret_cast< ProtoOAAssetClassListRes* >(object);
  (void)_this;
}
void ProtoOAAssetClassListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAssetClassListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAssetClassListRes& ProtoOAAssetClassListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAssetClassListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAssetClassListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAssetClassListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  assetclass_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2154;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAssetClassListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAAssetClass assetClass = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_assetclass(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAssetClassListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAssetClassListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOAAssetClass assetClass = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_assetclass_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_assetclass(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAssetClassListRes)
  return target;
}

size_t ProtoOAAssetClassListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAssetClassListRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOAAssetClass assetClass = 3;
  total_size += 1UL * this->_internal_assetclass_size();
  for (const auto& msg : this->assetclass_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ASSET_CLASS_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAssetClassListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAssetClassListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAssetClassListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAssetClassListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAssetClassListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAssetClassListRes)
    MergeFrom(*source);
  }
}

void ProtoOAAssetClassListRes::MergeFrom(const ProtoOAAssetClassListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAssetClassListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  assetclass_.MergeFrom(from.assetclass_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAssetClassListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAssetClassListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAssetClassListRes::CopyFrom(const ProtoOAAssetClassListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAssetClassListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAssetClassListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAssetClassListRes::InternalSwap(ProtoOAAssetClassListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  assetclass_.InternalSwap(&other->assetclass_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAssetClassListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOATraderReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOATraderReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOATraderReq::ProtoOATraderReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOATraderReq)
}
ProtoOATraderReq::ProtoOATraderReq(const ProtoOATraderReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOATraderReq)
}

void ProtoOATraderReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2121;
}

ProtoOATraderReq::~ProtoOATraderReq() {
  // @@protoc_insertion_point(destructor:ProtoOATraderReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOATraderReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOATraderReq::ArenaDtor(void* object) {
  ProtoOATraderReq* _this = reinterpret_cast< ProtoOATraderReq* >(object);
  (void)_this;
}
void ProtoOATraderReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOATraderReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOATraderReq& ProtoOATraderReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOATraderReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOATraderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOATraderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2121;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOATraderReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOATraderReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOATraderReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOATraderReq)
  return target;
}

size_t ProtoOATraderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOATraderReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOATraderReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOATraderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOATraderReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOATraderReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOATraderReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOATraderReq)
    MergeFrom(*source);
  }
}

void ProtoOATraderReq::MergeFrom(const ProtoOATraderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOATraderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOATraderReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOATraderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOATraderReq::CopyFrom(const ProtoOATraderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOATraderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOATraderReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOATraderReq::InternalSwap(ProtoOATraderReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOATraderReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOATraderRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOATraderRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOATrader& trader(const ProtoOATraderRes* msg);
  static void set_has_trader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ProtoOATrader&
ProtoOATraderRes::_Internal::trader(const ProtoOATraderRes* msg) {
  return *msg->trader_;
}
void ProtoOATraderRes::clear_trader() {
  if (trader_ != nullptr) trader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOATraderRes::ProtoOATraderRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOATraderRes)
}
ProtoOATraderRes::ProtoOATraderRes(const ProtoOATraderRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_trader()) {
    trader_ = new ::ProtoOATrader(*from.trader_);
  } else {
    trader_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOATraderRes)
}

void ProtoOATraderRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOATraderRes_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&trader_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctidtraderaccountid_) -
      reinterpret_cast<char*>(&trader_)) + sizeof(ctidtraderaccountid_));
  payloadtype_ = 2122;
}

ProtoOATraderRes::~ProtoOATraderRes() {
  // @@protoc_insertion_point(destructor:ProtoOATraderRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOATraderRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete trader_;
}

void ProtoOATraderRes::ArenaDtor(void* object) {
  ProtoOATraderRes* _this = reinterpret_cast< ProtoOATraderRes* >(object);
  (void)_this;
}
void ProtoOATraderRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOATraderRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOATraderRes& ProtoOATraderRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOATraderRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOATraderRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOATraderRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(trader_ != nullptr);
    trader_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2122;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOATraderRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrader trader = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOATraderRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOATraderRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_RES];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOATrader trader = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::trader(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOATraderRes)
  return target;
}

size_t ProtoOATraderRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOATraderRes)
  size_t total_size = 0;

  if (_internal_has_trader()) {
    // required .ProtoOATrader trader = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trader_);
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOATraderRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOATraderRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ProtoOATrader trader = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trader_);

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOATraderRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOATraderRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOATraderRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOATraderRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOATraderRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOATraderRes)
    MergeFrom(*source);
  }
}

void ProtoOATraderRes::MergeFrom(const ProtoOATraderRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOATraderRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_trader()->::ProtoOATrader::MergeFrom(from._internal_trader());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOATraderRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOATraderRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOATraderRes::CopyFrom(const ProtoOATraderRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOATraderRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOATraderRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_trader()) {
    if (!trader_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOATraderRes::InternalSwap(ProtoOATraderRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOATraderRes, ctidtraderaccountid_)
      + sizeof(ProtoOATraderRes::ctidtraderaccountid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOATraderRes, trader_)>(
          reinterpret_cast<char*>(&trader_),
          reinterpret_cast<char*>(&other->trader_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOATraderRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOATraderUpdatedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOATraderUpdatedEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOATrader& trader(const ProtoOATraderUpdatedEvent* msg);
  static void set_has_trader(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ProtoOATrader&
ProtoOATraderUpdatedEvent::_Internal::trader(const ProtoOATraderUpdatedEvent* msg) {
  return *msg->trader_;
}
void ProtoOATraderUpdatedEvent::clear_trader() {
  if (trader_ != nullptr) trader_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOATraderUpdatedEvent::ProtoOATraderUpdatedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOATraderUpdatedEvent)
}
ProtoOATraderUpdatedEvent::ProtoOATraderUpdatedEvent(const ProtoOATraderUpdatedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_trader()) {
    trader_ = new ::ProtoOATrader(*from.trader_);
  } else {
    trader_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOATraderUpdatedEvent)
}

void ProtoOATraderUpdatedEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&trader_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctidtraderaccountid_) -
      reinterpret_cast<char*>(&trader_)) + sizeof(ctidtraderaccountid_));
  payloadtype_ = 2123;
}

ProtoOATraderUpdatedEvent::~ProtoOATraderUpdatedEvent() {
  // @@protoc_insertion_point(destructor:ProtoOATraderUpdatedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOATraderUpdatedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete trader_;
}

void ProtoOATraderUpdatedEvent::ArenaDtor(void* object) {
  ProtoOATraderUpdatedEvent* _this = reinterpret_cast< ProtoOATraderUpdatedEvent* >(object);
  (void)_this;
}
void ProtoOATraderUpdatedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOATraderUpdatedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOATraderUpdatedEvent& ProtoOATraderUpdatedEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOATraderUpdatedEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOATraderUpdatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOATraderUpdatedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(trader_ != nullptr);
    trader_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2123;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOATraderUpdatedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_UPDATE_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrader trader = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_trader(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOATraderUpdatedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOATraderUpdatedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_UPDATE_EVENT];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOATrader trader = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::trader(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOATraderUpdatedEvent)
  return target;
}

size_t ProtoOATraderUpdatedEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOATraderUpdatedEvent)
  size_t total_size = 0;

  if (_internal_has_trader()) {
    // required .ProtoOATrader trader = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trader_);
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOATraderUpdatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOATraderUpdatedEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ProtoOATrader trader = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *trader_);

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_TRADER_UPDATE_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOATraderUpdatedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOATraderUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOATraderUpdatedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOATraderUpdatedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOATraderUpdatedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOATraderUpdatedEvent)
    MergeFrom(*source);
  }
}

void ProtoOATraderUpdatedEvent::MergeFrom(const ProtoOATraderUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOATraderUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_trader()->::ProtoOATrader::MergeFrom(from._internal_trader());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOATraderUpdatedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOATraderUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOATraderUpdatedEvent::CopyFrom(const ProtoOATraderUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOATraderUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOATraderUpdatedEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_trader()) {
    if (!trader_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOATraderUpdatedEvent::InternalSwap(ProtoOATraderUpdatedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOATraderUpdatedEvent, ctidtraderaccountid_)
      + sizeof(ProtoOATraderUpdatedEvent::ctidtraderaccountid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOATraderUpdatedEvent, trader_)>(
          reinterpret_cast<char*>(&trader_),
          reinterpret_cast<char*>(&other->trader_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOATraderUpdatedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAReconcileReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAReconcileReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAReconcileReq::ProtoOAReconcileReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAReconcileReq)
}
ProtoOAReconcileReq::ProtoOAReconcileReq(const ProtoOAReconcileReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAReconcileReq)
}

void ProtoOAReconcileReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2124;
}

ProtoOAReconcileReq::~ProtoOAReconcileReq() {
  // @@protoc_insertion_point(destructor:ProtoOAReconcileReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAReconcileReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAReconcileReq::ArenaDtor(void* object) {
  ProtoOAReconcileReq* _this = reinterpret_cast< ProtoOAReconcileReq* >(object);
  (void)_this;
}
void ProtoOAReconcileReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAReconcileReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAReconcileReq& ProtoOAReconcileReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAReconcileReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAReconcileReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAReconcileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2124;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAReconcileReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAReconcileReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAReconcileReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAReconcileReq)
  return target;
}

size_t ProtoOAReconcileReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAReconcileReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAReconcileReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAReconcileReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAReconcileReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAReconcileReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAReconcileReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAReconcileReq)
    MergeFrom(*source);
  }
}

void ProtoOAReconcileReq::MergeFrom(const ProtoOAReconcileReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAReconcileReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAReconcileReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAReconcileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAReconcileReq::CopyFrom(const ProtoOAReconcileReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAReconcileReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAReconcileReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAReconcileReq::InternalSwap(ProtoOAReconcileReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAReconcileReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAReconcileRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAReconcileRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOAReconcileRes::clear_position() {
  position_.Clear();
}
void ProtoOAReconcileRes::clear_order() {
  order_.Clear();
}
ProtoOAReconcileRes::ProtoOAReconcileRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  position_(arena),
  order_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAReconcileRes)
}
ProtoOAReconcileRes::ProtoOAReconcileRes(const ProtoOAReconcileRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      position_(from.position_),
      order_(from.order_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAReconcileRes)
}

void ProtoOAReconcileRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2125;
}

ProtoOAReconcileRes::~ProtoOAReconcileRes() {
  // @@protoc_insertion_point(destructor:ProtoOAReconcileRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAReconcileRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAReconcileRes::ArenaDtor(void* object) {
  ProtoOAReconcileRes* _this = reinterpret_cast< ProtoOAReconcileRes* >(object);
  (void)_this;
}
void ProtoOAReconcileRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAReconcileRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAReconcileRes& ProtoOAReconcileRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAReconcileRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAReconcileRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAReconcileRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  position_.Clear();
  order_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2125;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAReconcileRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAPosition position = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_position(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAOrder order = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_order(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAReconcileRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAReconcileRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOAPosition position = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_position_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_position(i), target, stream);
  }

  // repeated .ProtoOAOrder order = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_order_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_order(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAReconcileRes)
  return target;
}

size_t ProtoOAReconcileRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAReconcileRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOAPosition position = 3;
  total_size += 1UL * this->_internal_position_size();
  for (const auto& msg : this->position_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoOAOrder order = 4;
  total_size += 1UL * this->_internal_order_size();
  for (const auto& msg : this->order_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_RECONCILE_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAReconcileRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAReconcileRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAReconcileRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAReconcileRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAReconcileRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAReconcileRes)
    MergeFrom(*source);
  }
}

void ProtoOAReconcileRes::MergeFrom(const ProtoOAReconcileRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAReconcileRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  position_.MergeFrom(from.position_);
  order_.MergeFrom(from.order_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAReconcileRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAReconcileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAReconcileRes::CopyFrom(const ProtoOAReconcileRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAReconcileRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAReconcileRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(position_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(order_)) return false;
  return true;
}

void ProtoOAReconcileRes::InternalSwap(ProtoOAReconcileRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  position_.InternalSwap(&other->position_);
  order_.InternalSwap(&other->order_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAReconcileRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAOrderErrorEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAOrderErrorEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_orderid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000009) ^ 0x00000009) != 0;
  }
};

ProtoOAOrderErrorEvent::ProtoOAOrderErrorEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAOrderErrorEvent)
}
ProtoOAOrderErrorEvent::ProtoOAOrderErrorEvent(const ProtoOAOrderErrorEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errorcode()) {
    errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errorcode(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  ::memcpy(&orderid_, &from.orderid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&orderid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAOrderErrorEvent)
}

void ProtoOAOrderErrorEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto.base);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&orderid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&positionid_) -
      reinterpret_cast<char*>(&orderid_)) + sizeof(positionid_));
  payloadtype_ = 2132;
}

ProtoOAOrderErrorEvent::~ProtoOAOrderErrorEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAOrderErrorEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAOrderErrorEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  errorcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAOrderErrorEvent::ArenaDtor(void* object) {
  ProtoOAOrderErrorEvent* _this = reinterpret_cast< ProtoOAOrderErrorEvent* >(object);
  (void)_this;
}
void ProtoOAOrderErrorEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAOrderErrorEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAOrderErrorEvent& ProtoOAOrderErrorEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAOrderErrorEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAOrderErrorEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAOrderErrorEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      errorcode_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000003cu) {
    ::memset(&orderid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&positionid_) -
        reinterpret_cast<char*>(&orderid_)) + sizeof(positionid_));
    payloadtype_ = 2132;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAOrderErrorEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ORDER_ERROR_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string errorCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_errorcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAOrderErrorEvent.errorCode");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 orderId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_orderid(&has_bits);
          orderid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 positionId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAOrderErrorEvent.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAOrderErrorEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAOrderErrorEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ORDER_ERROR_EVENT];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string errorCode = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_errorcode().data(), static_cast<int>(this->_internal_errorcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAOrderErrorEvent.errorCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_errorcode(), target);
  }

  // optional int64 orderId = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_orderid(), target);
  }

  // required int64 ctidTraderAccountId = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_ctidtraderaccountid(), target);
  }

  // optional int64 positionId = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_positionid(), target);
  }

  // optional string description = 7;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAOrderErrorEvent.description");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAOrderErrorEvent)
  return target;
}

size_t ProtoOAOrderErrorEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAOrderErrorEvent)
  size_t total_size = 0;

  if (_internal_has_errorcode()) {
    // required string errorCode = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errorcode());
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOAOrderErrorEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAOrderErrorEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string errorCode = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errorcode());

    // required int64 ctidTraderAccountId = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional string description = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional int64 orderId = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_orderid());
    }

  }
  if (cached_has_bits & 0x00000030u) {
    // optional int64 positionId = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_positionid());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ORDER_ERROR_EVENT];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAOrderErrorEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAOrderErrorEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAOrderErrorEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAOrderErrorEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAOrderErrorEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAOrderErrorEvent)
    MergeFrom(*source);
  }
}

void ProtoOAOrderErrorEvent::MergeFrom(const ProtoOAOrderErrorEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAOrderErrorEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_errorcode(from._internal_errorcode());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      orderid_ = from.orderid_;
    }
    if (cached_has_bits & 0x00000008u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000010u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00000020u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAOrderErrorEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAOrderErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAOrderErrorEvent::CopyFrom(const ProtoOAOrderErrorEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAOrderErrorEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAOrderErrorEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAOrderErrorEvent::InternalSwap(ProtoOAOrderErrorEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errorcode_.Swap(&other->errorcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAOrderErrorEvent, positionid_)
      + sizeof(ProtoOAOrderErrorEvent::positionid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAOrderErrorEvent, orderid_)>(
          reinterpret_cast<char*>(&orderid_),
          reinterpret_cast<char*>(&other->orderid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAOrderErrorEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOADealListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOADealListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fromtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_totimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_maxrows(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProtoOADealListReq::ProtoOADealListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOADealListReq)
}
ProtoOADealListReq::ProtoOADealListReq(const ProtoOADealListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOADealListReq)
}

void ProtoOADealListReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&maxrows_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(maxrows_));
  payloadtype_ = 2133;
}

ProtoOADealListReq::~ProtoOADealListReq() {
  // @@protoc_insertion_point(destructor:ProtoOADealListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOADealListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOADealListReq::ArenaDtor(void* object) {
  ProtoOADealListReq* _this = reinterpret_cast< ProtoOADealListReq* >(object);
  (void)_this;
}
void ProtoOADealListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOADealListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOADealListReq& ProtoOADealListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOADealListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOADealListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOADealListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&maxrows_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(maxrows_));
    payloadtype_ = 2133;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOADealListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 fromTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fromtimestamp(&has_bits);
          fromtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 toTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_totimestamp(&has_bits);
          totimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 maxRows = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_maxrows(&has_bits);
          maxrows_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOADealListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOADealListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_REQ];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 fromTimestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_fromtimestamp(), target);
  }

  // required int64 toTimestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_totimestamp(), target);
  }

  // optional int32 maxRows = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_maxrows(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOADealListReq)
  return target;
}

size_t ProtoOADealListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOADealListReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_fromtimestamp()) {
    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());
  }

  if (_internal_has_totimestamp()) {
    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());
  }

  return total_size;
}
size_t ProtoOADealListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOADealListReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());

    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000018u) {
    // optional int32 maxRows = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_maxrows());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_REQ];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOADealListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOADealListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOADealListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOADealListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOADealListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOADealListReq)
    MergeFrom(*source);
  }
}

void ProtoOADealListReq::MergeFrom(const ProtoOADealListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOADealListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      fromtimestamp_ = from.fromtimestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      totimestamp_ = from.totimestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      maxrows_ = from.maxrows_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOADealListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOADealListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOADealListReq::CopyFrom(const ProtoOADealListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOADealListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOADealListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOADealListReq::InternalSwap(ProtoOADealListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOADealListReq, maxrows_)
      + sizeof(ProtoOADealListReq::maxrows_)
      - PROTOBUF_FIELD_OFFSET(ProtoOADealListReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOADealListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOADealListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOADealListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hasmore(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

void ProtoOADealListRes::clear_deal() {
  deal_.Clear();
}
ProtoOADealListRes::ProtoOADealListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  deal_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOADealListRes)
}
ProtoOADealListRes::ProtoOADealListRes(const ProtoOADealListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      deal_(from.deal_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOADealListRes)
}

void ProtoOADealListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOADealListRes_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&hasmore_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(hasmore_));
  payloadtype_ = 2134;
}

ProtoOADealListRes::~ProtoOADealListRes() {
  // @@protoc_insertion_point(destructor:ProtoOADealListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOADealListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOADealListRes::ArenaDtor(void* object) {
  ProtoOADealListRes* _this = reinterpret_cast< ProtoOADealListRes* >(object);
  (void)_this;
}
void ProtoOADealListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOADealListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOADealListRes& ProtoOADealListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOADealListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOADealListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOADealListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  deal_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hasmore_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(hasmore_));
    payloadtype_ = 2134;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOADealListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOADeal deal = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_deal(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // required bool hasMore = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_hasmore(&has_bits);
          hasmore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOADealListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOADealListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_RES];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOADeal deal = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_deal_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_deal(i), target, stream);
  }

  // required bool hasMore = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_hasmore(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOADealListRes)
  return target;
}

size_t ProtoOADealListRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOADealListRes)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_hasmore()) {
    // required bool hasMore = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ProtoOADealListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOADealListRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required bool hasMore = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOADeal deal = 3;
  total_size += 1UL * this->_internal_deal_size();
  for (const auto& msg : this->deal_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEAL_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOADealListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOADealListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOADealListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOADealListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOADealListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOADealListRes)
    MergeFrom(*source);
  }
}

void ProtoOADealListRes::MergeFrom(const ProtoOADealListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOADealListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  deal_.MergeFrom(from.deal_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      hasmore_ = from.hasmore_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOADealListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOADealListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOADealListRes::CopyFrom(const ProtoOADealListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOADealListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOADealListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(deal_)) return false;
  return true;
}

void ProtoOADealListRes::InternalSwap(ProtoOADealListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  deal_.InternalSwap(&other->deal_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOADealListRes, hasmore_)
      + sizeof(ProtoOADealListRes::hasmore_)
      - PROTOBUF_FIELD_OFFSET(ProtoOADealListRes, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOADealListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAExpectedMarginReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAExpectedMarginReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

ProtoOAExpectedMarginReq::ProtoOAExpectedMarginReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  volume_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAExpectedMarginReq)
}
ProtoOAExpectedMarginReq::ProtoOAExpectedMarginReq(const ProtoOAExpectedMarginReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      volume_(from.volume_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAExpectedMarginReq)
}

void ProtoOAExpectedMarginReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2139;
}

ProtoOAExpectedMarginReq::~ProtoOAExpectedMarginReq() {
  // @@protoc_insertion_point(destructor:ProtoOAExpectedMarginReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAExpectedMarginReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAExpectedMarginReq::ArenaDtor(void* object) {
  ProtoOAExpectedMarginReq* _this = reinterpret_cast< ProtoOAExpectedMarginReq* >(object);
  (void)_this;
}
void ProtoOAExpectedMarginReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAExpectedMarginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAExpectedMarginReq& ProtoOAExpectedMarginReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAExpectedMarginReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAExpectedMarginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAExpectedMarginReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  volume_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2139;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAExpectedMarginReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 volume = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_volume(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<32>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_volume(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAExpectedMarginReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAExpectedMarginReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 symbolId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(), target);
  }

  // repeated int64 volume = 4;
  for (int i = 0, n = this->_internal_volume_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_volume(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAExpectedMarginReq)
  return target;
}

size_t ProtoOAExpectedMarginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAExpectedMarginReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  return total_size;
}
size_t ProtoOAExpectedMarginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAExpectedMarginReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 volume = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->volume_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_volume_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAExpectedMarginReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAExpectedMarginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAExpectedMarginReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAExpectedMarginReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAExpectedMarginReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAExpectedMarginReq)
    MergeFrom(*source);
  }
}

void ProtoOAExpectedMarginReq::MergeFrom(const ProtoOAExpectedMarginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAExpectedMarginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  volume_.MergeFrom(from.volume_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAExpectedMarginReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAExpectedMarginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAExpectedMarginReq::CopyFrom(const ProtoOAExpectedMarginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAExpectedMarginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAExpectedMarginReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAExpectedMarginReq::InternalSwap(ProtoOAExpectedMarginReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  volume_.InternalSwap(&other->volume_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAExpectedMarginReq, symbolid_)
      + sizeof(ProtoOAExpectedMarginReq::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAExpectedMarginReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAExpectedMarginReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAExpectedMarginRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAExpectedMarginRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_moneydigits(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOAExpectedMarginRes::clear_margin() {
  margin_.Clear();
}
ProtoOAExpectedMarginRes::ProtoOAExpectedMarginRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  margin_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAExpectedMarginRes)
}
ProtoOAExpectedMarginRes::ProtoOAExpectedMarginRes(const ProtoOAExpectedMarginRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      margin_(from.margin_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAExpectedMarginRes)
}

void ProtoOAExpectedMarginRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&moneydigits_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(moneydigits_));
  payloadtype_ = 2140;
}

ProtoOAExpectedMarginRes::~ProtoOAExpectedMarginRes() {
  // @@protoc_insertion_point(destructor:ProtoOAExpectedMarginRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAExpectedMarginRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAExpectedMarginRes::ArenaDtor(void* object) {
  ProtoOAExpectedMarginRes* _this = reinterpret_cast< ProtoOAExpectedMarginRes* >(object);
  (void)_this;
}
void ProtoOAExpectedMarginRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAExpectedMarginRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAExpectedMarginRes& ProtoOAExpectedMarginRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAExpectedMarginRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAExpectedMarginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAExpectedMarginRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  margin_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&moneydigits_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(moneydigits_));
    payloadtype_ = 2140;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAExpectedMarginRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAExpectedMargin margin = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_margin(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint32 moneyDigits = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_moneydigits(&has_bits);
          moneydigits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAExpectedMarginRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAExpectedMarginRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_RES];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOAExpectedMargin margin = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_margin_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_margin(i), target, stream);
  }

  // optional uint32 moneyDigits = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_moneydigits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAExpectedMarginRes)
  return target;
}

size_t ProtoOAExpectedMarginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAExpectedMarginRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOAExpectedMargin margin = 3;
  total_size += 1UL * this->_internal_margin_size();
  for (const auto& msg : this->margin_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional uint32 moneyDigits = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_moneydigits());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_EXPECTED_MARGIN_RES];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAExpectedMarginRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAExpectedMarginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAExpectedMarginRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAExpectedMarginRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAExpectedMarginRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAExpectedMarginRes)
    MergeFrom(*source);
  }
}

void ProtoOAExpectedMarginRes::MergeFrom(const ProtoOAExpectedMarginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAExpectedMarginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  margin_.MergeFrom(from.margin_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      moneydigits_ = from.moneydigits_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAExpectedMarginRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAExpectedMarginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAExpectedMarginRes::CopyFrom(const ProtoOAExpectedMarginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAExpectedMarginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAExpectedMarginRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(margin_)) return false;
  return true;
}

void ProtoOAExpectedMarginRes::InternalSwap(ProtoOAExpectedMarginRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  margin_.InternalSwap(&other->margin_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAExpectedMarginRes, moneydigits_)
      + sizeof(ProtoOAExpectedMarginRes::moneydigits_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAExpectedMarginRes, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAExpectedMarginRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginChangedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginChangedEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_positionid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_usedmargin(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_moneydigits(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProtoOAMarginChangedEvent::ProtoOAMarginChangedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginChangedEvent)
}
ProtoOAMarginChangedEvent::ProtoOAMarginChangedEvent(const ProtoOAMarginChangedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginChangedEvent)
}

void ProtoOAMarginChangedEvent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&moneydigits_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(moneydigits_));
  payloadtype_ = 2141;
}

ProtoOAMarginChangedEvent::~ProtoOAMarginChangedEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginChangedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginChangedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAMarginChangedEvent::ArenaDtor(void* object) {
  ProtoOAMarginChangedEvent* _this = reinterpret_cast< ProtoOAMarginChangedEvent* >(object);
  (void)_this;
}
void ProtoOAMarginChangedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginChangedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginChangedEvent& ProtoOAMarginChangedEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginChangedEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginChangedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&moneydigits_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(moneydigits_));
    payloadtype_ = 2141;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginChangedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CHANGED_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 positionId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_positionid(&has_bits);
          positionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 usedMargin = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_usedmargin(&has_bits);
          usedmargin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 moneyDigits = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_moneydigits(&has_bits);
          moneydigits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginChangedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginChangedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CHANGED_EVENT];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required uint64 positionId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_positionid(), target);
  }

  // required uint64 usedMargin = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_usedmargin(), target);
  }

  // optional uint32 moneyDigits = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_moneydigits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginChangedEvent)
  return target;
}

size_t ProtoOAMarginChangedEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAMarginChangedEvent)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_positionid()) {
    // required uint64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_positionid());
  }

  if (_internal_has_usedmargin()) {
    // required uint64 usedMargin = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_usedmargin());
  }

  return total_size;
}
size_t ProtoOAMarginChangedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginChangedEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required uint64 positionId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_positionid());

    // required uint64 usedMargin = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_usedmargin());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000018u) {
    // optional uint32 moneyDigits = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_moneydigits());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CHANGED_EVENT];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginChangedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginChangedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginChangedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginChangedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginChangedEvent)
    MergeFrom(*source);
  }
}

void ProtoOAMarginChangedEvent::MergeFrom(const ProtoOAMarginChangedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginChangedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      positionid_ = from.positionid_;
    }
    if (cached_has_bits & 0x00000004u) {
      usedmargin_ = from.usedmargin_;
    }
    if (cached_has_bits & 0x00000008u) {
      moneydigits_ = from.moneydigits_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAMarginChangedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginChangedEvent::CopyFrom(const ProtoOAMarginChangedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginChangedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginChangedEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAMarginChangedEvent::InternalSwap(ProtoOAMarginChangedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAMarginChangedEvent, moneydigits_)
      + sizeof(ProtoOAMarginChangedEvent::moneydigits_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAMarginChangedEvent, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginChangedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOACashFlowHistoryListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOACashFlowHistoryListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fromtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_totimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000007) ^ 0x00000007) != 0;
  }
};

ProtoOACashFlowHistoryListReq::ProtoOACashFlowHistoryListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOACashFlowHistoryListReq)
}
ProtoOACashFlowHistoryListReq::ProtoOACashFlowHistoryListReq(const ProtoOACashFlowHistoryListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOACashFlowHistoryListReq)
}

void ProtoOACashFlowHistoryListReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&totimestamp_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(totimestamp_));
  payloadtype_ = 2143;
}

ProtoOACashFlowHistoryListReq::~ProtoOACashFlowHistoryListReq() {
  // @@protoc_insertion_point(destructor:ProtoOACashFlowHistoryListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOACashFlowHistoryListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOACashFlowHistoryListReq::ArenaDtor(void* object) {
  ProtoOACashFlowHistoryListReq* _this = reinterpret_cast< ProtoOACashFlowHistoryListReq* >(object);
  (void)_this;
}
void ProtoOACashFlowHistoryListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOACashFlowHistoryListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOACashFlowHistoryListReq& ProtoOACashFlowHistoryListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOACashFlowHistoryListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOACashFlowHistoryListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOACashFlowHistoryListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&totimestamp_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(totimestamp_));
    payloadtype_ = 2143;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOACashFlowHistoryListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 fromTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fromtimestamp(&has_bits);
          fromtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 toTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_totimestamp(&has_bits);
          totimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOACashFlowHistoryListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOACashFlowHistoryListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 fromTimestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_fromtimestamp(), target);
  }

  // required int64 toTimestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_totimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOACashFlowHistoryListReq)
  return target;
}

size_t ProtoOACashFlowHistoryListReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOACashFlowHistoryListReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_fromtimestamp()) {
    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());
  }

  if (_internal_has_totimestamp()) {
    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());
  }

  return total_size;
}
size_t ProtoOACashFlowHistoryListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOACashFlowHistoryListReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());

    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOACashFlowHistoryListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOACashFlowHistoryListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOACashFlowHistoryListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOACashFlowHistoryListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOACashFlowHistoryListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOACashFlowHistoryListReq)
    MergeFrom(*source);
  }
}

void ProtoOACashFlowHistoryListReq::MergeFrom(const ProtoOACashFlowHistoryListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOACashFlowHistoryListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      fromtimestamp_ = from.fromtimestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      totimestamp_ = from.totimestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOACashFlowHistoryListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOACashFlowHistoryListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOACashFlowHistoryListReq::CopyFrom(const ProtoOACashFlowHistoryListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOACashFlowHistoryListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOACashFlowHistoryListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOACashFlowHistoryListReq::InternalSwap(ProtoOACashFlowHistoryListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOACashFlowHistoryListReq, totimestamp_)
      + sizeof(ProtoOACashFlowHistoryListReq::totimestamp_)
      - PROTOBUF_FIELD_OFFSET(ProtoOACashFlowHistoryListReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOACashFlowHistoryListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOACashFlowHistoryListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOACashFlowHistoryListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOACashFlowHistoryListRes::clear_depositwithdraw() {
  depositwithdraw_.Clear();
}
ProtoOACashFlowHistoryListRes::ProtoOACashFlowHistoryListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  depositwithdraw_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOACashFlowHistoryListRes)
}
ProtoOACashFlowHistoryListRes::ProtoOACashFlowHistoryListRes(const ProtoOACashFlowHistoryListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      depositwithdraw_(from.depositwithdraw_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOACashFlowHistoryListRes)
}

void ProtoOACashFlowHistoryListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2144;
}

ProtoOACashFlowHistoryListRes::~ProtoOACashFlowHistoryListRes() {
  // @@protoc_insertion_point(destructor:ProtoOACashFlowHistoryListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOACashFlowHistoryListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOACashFlowHistoryListRes::ArenaDtor(void* object) {
  ProtoOACashFlowHistoryListRes* _this = reinterpret_cast< ProtoOACashFlowHistoryListRes* >(object);
  (void)_this;
}
void ProtoOACashFlowHistoryListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOACashFlowHistoryListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOACashFlowHistoryListRes& ProtoOACashFlowHistoryListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOACashFlowHistoryListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOACashFlowHistoryListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOACashFlowHistoryListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depositwithdraw_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2144;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOACashFlowHistoryListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOADepositWithdraw depositWithdraw = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_depositwithdraw(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOACashFlowHistoryListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOACashFlowHistoryListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOADepositWithdraw depositWithdraw = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_depositwithdraw_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_depositwithdraw(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOACashFlowHistoryListRes)
  return target;
}

size_t ProtoOACashFlowHistoryListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOACashFlowHistoryListRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOADepositWithdraw depositWithdraw = 3;
  total_size += 1UL * this->_internal_depositwithdraw_size();
  for (const auto& msg : this->depositwithdraw_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_CASH_FLOW_HISTORY_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOACashFlowHistoryListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOACashFlowHistoryListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOACashFlowHistoryListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOACashFlowHistoryListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOACashFlowHistoryListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOACashFlowHistoryListRes)
    MergeFrom(*source);
  }
}

void ProtoOACashFlowHistoryListRes::MergeFrom(const ProtoOACashFlowHistoryListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOACashFlowHistoryListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depositwithdraw_.MergeFrom(from.depositwithdraw_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOACashFlowHistoryListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOACashFlowHistoryListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOACashFlowHistoryListRes::CopyFrom(const ProtoOACashFlowHistoryListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOACashFlowHistoryListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOACashFlowHistoryListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(depositwithdraw_)) return false;
  return true;
}

void ProtoOACashFlowHistoryListRes::InternalSwap(ProtoOACashFlowHistoryListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  depositwithdraw_.InternalSwap(&other->depositwithdraw_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOACashFlowHistoryListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetAccountListByAccessTokenReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetAccountListByAccessTokenReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_accesstoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAGetAccountListByAccessTokenReq::ProtoOAGetAccountListByAccessTokenReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetAccountListByAccessTokenReq)
}
ProtoOAGetAccountListByAccessTokenReq::ProtoOAGetAccountListByAccessTokenReq(const ProtoOAGetAccountListByAccessTokenReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesstoken()) {
    accesstoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesstoken(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetAccountListByAccessTokenReq)
}

void ProtoOAGetAccountListByAccessTokenReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2149;
}

ProtoOAGetAccountListByAccessTokenReq::~ProtoOAGetAccountListByAccessTokenReq() {
  // @@protoc_insertion_point(destructor:ProtoOAGetAccountListByAccessTokenReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetAccountListByAccessTokenReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesstoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAGetAccountListByAccessTokenReq::ArenaDtor(void* object) {
  ProtoOAGetAccountListByAccessTokenReq* _this = reinterpret_cast< ProtoOAGetAccountListByAccessTokenReq* >(object);
  (void)_this;
}
void ProtoOAGetAccountListByAccessTokenReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetAccountListByAccessTokenReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetAccountListByAccessTokenReq& ProtoOAGetAccountListByAccessTokenReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetAccountListByAccessTokenReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetAccountListByAccessTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetAccountListByAccessTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      accesstoken_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2149;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetAccountListByAccessTokenReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string accessToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAGetAccountListByAccessTokenReq.accessToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetAccountListByAccessTokenReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetAccountListByAccessTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string accessToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAGetAccountListByAccessTokenReq.accessToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accesstoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetAccountListByAccessTokenReq)
  return target;
}

size_t ProtoOAGetAccountListByAccessTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetAccountListByAccessTokenReq)
  size_t total_size = 0;

  // required string accessToken = 2;
  if (_internal_has_accesstoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetAccountListByAccessTokenReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetAccountListByAccessTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetAccountListByAccessTokenReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetAccountListByAccessTokenReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetAccountListByAccessTokenReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetAccountListByAccessTokenReq)
    MergeFrom(*source);
  }
}

void ProtoOAGetAccountListByAccessTokenReq::MergeFrom(const ProtoOAGetAccountListByAccessTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetAccountListByAccessTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesstoken(from._internal_accesstoken());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetAccountListByAccessTokenReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetAccountListByAccessTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetAccountListByAccessTokenReq::CopyFrom(const ProtoOAGetAccountListByAccessTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetAccountListByAccessTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetAccountListByAccessTokenReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAGetAccountListByAccessTokenReq::InternalSwap(ProtoOAGetAccountListByAccessTokenReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accesstoken_.Swap(&other->accesstoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetAccountListByAccessTokenReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetAccountListByAccessTokenRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetAccountListByAccessTokenRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_accesstoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_permissionscope(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOAGetAccountListByAccessTokenRes::clear_ctidtraderaccount() {
  ctidtraderaccount_.Clear();
}
ProtoOAGetAccountListByAccessTokenRes::ProtoOAGetAccountListByAccessTokenRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ctidtraderaccount_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetAccountListByAccessTokenRes)
}
ProtoOAGetAccountListByAccessTokenRes::ProtoOAGetAccountListByAccessTokenRes(const ProtoOAGetAccountListByAccessTokenRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      ctidtraderaccount_(from.ctidtraderaccount_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesstoken()) {
    accesstoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesstoken(), 
      GetArena());
  }
  ::memcpy(&permissionscope_, &from.permissionscope_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&permissionscope_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetAccountListByAccessTokenRes)
}

void ProtoOAGetAccountListByAccessTokenRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  permissionscope_ = 0;
  payloadtype_ = 2150;
}

ProtoOAGetAccountListByAccessTokenRes::~ProtoOAGetAccountListByAccessTokenRes() {
  // @@protoc_insertion_point(destructor:ProtoOAGetAccountListByAccessTokenRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetAccountListByAccessTokenRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesstoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAGetAccountListByAccessTokenRes::ArenaDtor(void* object) {
  ProtoOAGetAccountListByAccessTokenRes* _this = reinterpret_cast< ProtoOAGetAccountListByAccessTokenRes* >(object);
  (void)_this;
}
void ProtoOAGetAccountListByAccessTokenRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetAccountListByAccessTokenRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetAccountListByAccessTokenRes& ProtoOAGetAccountListByAccessTokenRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetAccountListByAccessTokenRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetAccountListByAccessTokenRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetAccountListByAccessTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ctidtraderaccount_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    accesstoken_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    permissionscope_ = 0;
    payloadtype_ = 2150;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetAccountListByAccessTokenRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string accessToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAGetAccountListByAccessTokenRes.accessToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ProtoOAClientPermissionScope permissionScope = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAClientPermissionScope_IsValid(val))) {
            _internal_set_permissionscope(static_cast<::ProtoOAClientPermissionScope>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOACtidTraderAccount ctidTraderAccount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ctidtraderaccount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetAccountListByAccessTokenRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetAccountListByAccessTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string accessToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAGetAccountListByAccessTokenRes.accessToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accesstoken(), target);
  }

  // optional .ProtoOAClientPermissionScope permissionScope = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_permissionscope(), target);
  }

  // repeated .ProtoOACtidTraderAccount ctidTraderAccount = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ctidtraderaccount_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_ctidtraderaccount(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetAccountListByAccessTokenRes)
  return target;
}

size_t ProtoOAGetAccountListByAccessTokenRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetAccountListByAccessTokenRes)
  size_t total_size = 0;

  // required string accessToken = 2;
  if (_internal_has_accesstoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOACtidTraderAccount ctidTraderAccount = 4;
  total_size += 1UL * this->_internal_ctidtraderaccount_size();
  for (const auto& msg : this->ctidtraderaccount_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000006u) {
    // optional .ProtoOAClientPermissionScope permissionScope = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_permissionscope());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetAccountListByAccessTokenRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetAccountListByAccessTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetAccountListByAccessTokenRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetAccountListByAccessTokenRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetAccountListByAccessTokenRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetAccountListByAccessTokenRes)
    MergeFrom(*source);
  }
}

void ProtoOAGetAccountListByAccessTokenRes::MergeFrom(const ProtoOAGetAccountListByAccessTokenRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetAccountListByAccessTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ctidtraderaccount_.MergeFrom(from.ctidtraderaccount_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesstoken(from._internal_accesstoken());
    }
    if (cached_has_bits & 0x00000002u) {
      permissionscope_ = from.permissionscope_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetAccountListByAccessTokenRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetAccountListByAccessTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetAccountListByAccessTokenRes::CopyFrom(const ProtoOAGetAccountListByAccessTokenRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetAccountListByAccessTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetAccountListByAccessTokenRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(ctidtraderaccount_)) return false;
  return true;
}

void ProtoOAGetAccountListByAccessTokenRes::InternalSwap(ProtoOAGetAccountListByAccessTokenRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ctidtraderaccount_.InternalSwap(&other->ctidtraderaccount_);
  accesstoken_.Swap(&other->accesstoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(permissionscope_, other->permissionscope_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetAccountListByAccessTokenRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOARefreshTokenReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOARefreshTokenReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_refreshtoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOARefreshTokenReq::ProtoOARefreshTokenReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOARefreshTokenReq)
}
ProtoOARefreshTokenReq::ProtoOARefreshTokenReq(const ProtoOARefreshTokenReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  refreshtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_refreshtoken()) {
    refreshtoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refreshtoken(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOARefreshTokenReq)
}

void ProtoOARefreshTokenReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto.base);
  refreshtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2173;
}

ProtoOARefreshTokenReq::~ProtoOARefreshTokenReq() {
  // @@protoc_insertion_point(destructor:ProtoOARefreshTokenReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOARefreshTokenReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  refreshtoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOARefreshTokenReq::ArenaDtor(void* object) {
  ProtoOARefreshTokenReq* _this = reinterpret_cast< ProtoOARefreshTokenReq* >(object);
  (void)_this;
}
void ProtoOARefreshTokenReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOARefreshTokenReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOARefreshTokenReq& ProtoOARefreshTokenReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOARefreshTokenReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOARefreshTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOARefreshTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      refreshtoken_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2173;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOARefreshTokenReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string refreshToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_refreshtoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOARefreshTokenReq.refreshToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOARefreshTokenReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOARefreshTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string refreshToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_refreshtoken().data(), static_cast<int>(this->_internal_refreshtoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOARefreshTokenReq.refreshToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_refreshtoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOARefreshTokenReq)
  return target;
}

size_t ProtoOARefreshTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOARefreshTokenReq)
  size_t total_size = 0;

  // required string refreshToken = 2;
  if (_internal_has_refreshtoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refreshtoken());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOARefreshTokenReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOARefreshTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOARefreshTokenReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOARefreshTokenReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOARefreshTokenReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOARefreshTokenReq)
    MergeFrom(*source);
  }
}

void ProtoOARefreshTokenReq::MergeFrom(const ProtoOARefreshTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOARefreshTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_refreshtoken(from._internal_refreshtoken());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOARefreshTokenReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOARefreshTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOARefreshTokenReq::CopyFrom(const ProtoOARefreshTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOARefreshTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOARefreshTokenReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOARefreshTokenReq::InternalSwap(ProtoOARefreshTokenReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  refreshtoken_.Swap(&other->refreshtoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOARefreshTokenReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOARefreshTokenRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOARefreshTokenRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_accesstoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tokentype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_expiresin(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_refreshtoken(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000f) ^ 0x0000000f) != 0;
  }
};

ProtoOARefreshTokenRes::ProtoOARefreshTokenRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOARefreshTokenRes)
}
ProtoOARefreshTokenRes::ProtoOARefreshTokenRes(const ProtoOARefreshTokenRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesstoken()) {
    accesstoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesstoken(), 
      GetArena());
  }
  tokentype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_tokentype()) {
    tokentype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tokentype(), 
      GetArena());
  }
  refreshtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_refreshtoken()) {
    refreshtoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_refreshtoken(), 
      GetArena());
  }
  ::memcpy(&expiresin_, &from.expiresin_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&expiresin_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOARefreshTokenRes)
}

void ProtoOARefreshTokenRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tokentype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  expiresin_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2174;
}

ProtoOARefreshTokenRes::~ProtoOARefreshTokenRes() {
  // @@protoc_insertion_point(destructor:ProtoOARefreshTokenRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOARefreshTokenRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesstoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tokentype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  refreshtoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOARefreshTokenRes::ArenaDtor(void* object) {
  ProtoOARefreshTokenRes* _this = reinterpret_cast< ProtoOARefreshTokenRes* >(object);
  (void)_this;
}
void ProtoOARefreshTokenRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOARefreshTokenRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOARefreshTokenRes& ProtoOARefreshTokenRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOARefreshTokenRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOARefreshTokenRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOARefreshTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      accesstoken_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      tokentype_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      refreshtoken_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    expiresin_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2174;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOARefreshTokenRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string accessToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOARefreshTokenRes.accessToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string tokenType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_tokentype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOARefreshTokenRes.tokenType");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 expiresIn = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_expiresin(&has_bits);
          expiresin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required string refreshToken = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_refreshtoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOARefreshTokenRes.refreshToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOARefreshTokenRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOARefreshTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_RES];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string accessToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOARefreshTokenRes.accessToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accesstoken(), target);
  }

  // required string tokenType = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_tokentype().data(), static_cast<int>(this->_internal_tokentype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOARefreshTokenRes.tokenType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_tokentype(), target);
  }

  // required int64 expiresIn = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_expiresin(), target);
  }

  // required string refreshToken = 5;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_refreshtoken().data(), static_cast<int>(this->_internal_refreshtoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOARefreshTokenRes.refreshToken");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_refreshtoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOARefreshTokenRes)
  return target;
}

size_t ProtoOARefreshTokenRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOARefreshTokenRes)
  size_t total_size = 0;

  if (_internal_has_accesstoken()) {
    // required string accessToken = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }

  if (_internal_has_tokentype()) {
    // required string tokenType = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tokentype());
  }

  if (_internal_has_refreshtoken()) {
    // required string refreshToken = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refreshtoken());
  }

  if (_internal_has_expiresin()) {
    // required int64 expiresIn = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expiresin());
  }

  return total_size;
}
size_t ProtoOARefreshTokenRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOARefreshTokenRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string accessToken = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());

    // required string tokenType = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tokentype());

    // required string refreshToken = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_refreshtoken());

    // required int64 expiresIn = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_expiresin());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_REFRESH_TOKEN_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOARefreshTokenRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOARefreshTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOARefreshTokenRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOARefreshTokenRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOARefreshTokenRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOARefreshTokenRes)
    MergeFrom(*source);
  }
}

void ProtoOARefreshTokenRes::MergeFrom(const ProtoOARefreshTokenRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOARefreshTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesstoken(from._internal_accesstoken());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_tokentype(from._internal_tokentype());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_refreshtoken(from._internal_refreshtoken());
    }
    if (cached_has_bits & 0x00000008u) {
      expiresin_ = from.expiresin_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOARefreshTokenRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOARefreshTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOARefreshTokenRes::CopyFrom(const ProtoOARefreshTokenRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOARefreshTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOARefreshTokenRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOARefreshTokenRes::InternalSwap(ProtoOARefreshTokenRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accesstoken_.Swap(&other->accesstoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tokentype_.Swap(&other->tokentype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  refreshtoken_.Swap(&other->refreshtoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(expiresin_, other->expiresin_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOARefreshTokenRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeSpotsReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeSpotsReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASubscribeSpotsReq::ProtoOASubscribeSpotsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeSpotsReq)
}
ProtoOASubscribeSpotsReq::ProtoOASubscribeSpotsReq(const ProtoOASubscribeSpotsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeSpotsReq)
}

void ProtoOASubscribeSpotsReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2127;
}

ProtoOASubscribeSpotsReq::~ProtoOASubscribeSpotsReq() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeSpotsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeSpotsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeSpotsReq::ArenaDtor(void* object) {
  ProtoOASubscribeSpotsReq* _this = reinterpret_cast< ProtoOASubscribeSpotsReq* >(object);
  (void)_this;
}
void ProtoOASubscribeSpotsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeSpotsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeSpotsReq& ProtoOASubscribeSpotsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeSpotsReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeSpotsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeSpotsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2127;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeSpotsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeSpotsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeSpotsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeSpotsReq)
  return target;
}

size_t ProtoOASubscribeSpotsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeSpotsReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeSpotsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeSpotsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeSpotsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeSpotsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeSpotsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeSpotsReq)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeSpotsReq::MergeFrom(const ProtoOASubscribeSpotsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeSpotsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeSpotsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeSpotsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeSpotsReq::CopyFrom(const ProtoOASubscribeSpotsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeSpotsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeSpotsReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeSpotsReq::InternalSwap(ProtoOASubscribeSpotsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeSpotsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeSpotsRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeSpotsRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASubscribeSpotsRes::ProtoOASubscribeSpotsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeSpotsRes)
}
ProtoOASubscribeSpotsRes::ProtoOASubscribeSpotsRes(const ProtoOASubscribeSpotsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeSpotsRes)
}

void ProtoOASubscribeSpotsRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2128;
}

ProtoOASubscribeSpotsRes::~ProtoOASubscribeSpotsRes() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeSpotsRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeSpotsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeSpotsRes::ArenaDtor(void* object) {
  ProtoOASubscribeSpotsRes* _this = reinterpret_cast< ProtoOASubscribeSpotsRes* >(object);
  (void)_this;
}
void ProtoOASubscribeSpotsRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeSpotsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeSpotsRes& ProtoOASubscribeSpotsRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeSpotsRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeSpotsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeSpotsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2128;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeSpotsRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeSpotsRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeSpotsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeSpotsRes)
  return target;
}

size_t ProtoOASubscribeSpotsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeSpotsRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_SPOTS_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeSpotsRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeSpotsRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeSpotsRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeSpotsRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeSpotsRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeSpotsRes)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeSpotsRes::MergeFrom(const ProtoOASubscribeSpotsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeSpotsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeSpotsRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeSpotsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeSpotsRes::CopyFrom(const ProtoOASubscribeSpotsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeSpotsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeSpotsRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeSpotsRes::InternalSwap(ProtoOASubscribeSpotsRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeSpotsRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeSpotsReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeSpotsReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAUnsubscribeSpotsReq::ProtoOAUnsubscribeSpotsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeSpotsReq)
}
ProtoOAUnsubscribeSpotsReq::ProtoOAUnsubscribeSpotsReq(const ProtoOAUnsubscribeSpotsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeSpotsReq)
}

void ProtoOAUnsubscribeSpotsReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2129;
}

ProtoOAUnsubscribeSpotsReq::~ProtoOAUnsubscribeSpotsReq() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeSpotsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeSpotsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeSpotsReq::ArenaDtor(void* object) {
  ProtoOAUnsubscribeSpotsReq* _this = reinterpret_cast< ProtoOAUnsubscribeSpotsReq* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeSpotsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeSpotsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeSpotsReq& ProtoOAUnsubscribeSpotsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeSpotsReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeSpotsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeSpotsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2129;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeSpotsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeSpotsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeSpotsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeSpotsReq)
  return target;
}

size_t ProtoOAUnsubscribeSpotsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeSpotsReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeSpotsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeSpotsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeSpotsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeSpotsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeSpotsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeSpotsReq)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeSpotsReq::MergeFrom(const ProtoOAUnsubscribeSpotsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeSpotsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeSpotsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeSpotsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeSpotsReq::CopyFrom(const ProtoOAUnsubscribeSpotsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeSpotsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeSpotsReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeSpotsReq::InternalSwap(ProtoOAUnsubscribeSpotsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeSpotsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeSpotsRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeSpotsRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAUnsubscribeSpotsRes::ProtoOAUnsubscribeSpotsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeSpotsRes)
}
ProtoOAUnsubscribeSpotsRes::ProtoOAUnsubscribeSpotsRes(const ProtoOAUnsubscribeSpotsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeSpotsRes)
}

void ProtoOAUnsubscribeSpotsRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2130;
}

ProtoOAUnsubscribeSpotsRes::~ProtoOAUnsubscribeSpotsRes() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeSpotsRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeSpotsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeSpotsRes::ArenaDtor(void* object) {
  ProtoOAUnsubscribeSpotsRes* _this = reinterpret_cast< ProtoOAUnsubscribeSpotsRes* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeSpotsRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeSpotsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeSpotsRes& ProtoOAUnsubscribeSpotsRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeSpotsRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeSpotsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeSpotsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2130;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeSpotsRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeSpotsRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeSpotsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeSpotsRes)
  return target;
}

size_t ProtoOAUnsubscribeSpotsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeSpotsRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_SPOTS_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeSpotsRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeSpotsRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeSpotsRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeSpotsRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeSpotsRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeSpotsRes)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeSpotsRes::MergeFrom(const ProtoOAUnsubscribeSpotsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeSpotsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeSpotsRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeSpotsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeSpotsRes::CopyFrom(const ProtoOAUnsubscribeSpotsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeSpotsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeSpotsRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeSpotsRes::InternalSwap(ProtoOAUnsubscribeSpotsRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeSpotsRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASpotEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASpotEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_bid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ask(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_sessionclose(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

void ProtoOASpotEvent::clear_trendbar() {
  trendbar_.Clear();
}
ProtoOASpotEvent::ProtoOASpotEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  trendbar_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASpotEvent)
}
ProtoOASpotEvent::ProtoOASpotEvent(const ProtoOASpotEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      trendbar_(from.trendbar_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASpotEvent)
}

void ProtoOASpotEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOASpotEvent_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&sessionclose_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(sessionclose_));
  payloadtype_ = 2131;
}

ProtoOASpotEvent::~ProtoOASpotEvent() {
  // @@protoc_insertion_point(destructor:ProtoOASpotEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASpotEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASpotEvent::ArenaDtor(void* object) {
  ProtoOASpotEvent* _this = reinterpret_cast< ProtoOASpotEvent* >(object);
  (void)_this;
}
void ProtoOASpotEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASpotEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASpotEvent& ProtoOASpotEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASpotEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASpotEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASpotEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trendbar_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&sessionclose_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(sessionclose_));
    payloadtype_ = 2131;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASpotEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SPOT_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 bid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_bid(&has_bits);
          bid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 ask = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_ask(&has_bits);
          ask_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOATrendbar trendbar = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trendbar(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint64 sessionClose = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_sessionclose(&has_bits);
          sessionclose_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASpotEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASpotEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SPOT_EVENT];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 symbolId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(), target);
  }

  // optional uint64 bid = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_bid(), target);
  }

  // optional uint64 ask = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_ask(), target);
  }

  // repeated .ProtoOATrendbar trendbar = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_trendbar_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_trendbar(i), target, stream);
  }

  // optional uint64 sessionClose = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_sessionclose(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASpotEvent)
  return target;
}

size_t ProtoOASpotEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOASpotEvent)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  return total_size;
}
size_t ProtoOASpotEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASpotEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOATrendbar trendbar = 6;
  total_size += 1UL * this->_internal_trendbar_size();
  for (const auto& msg : this->trendbar_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003cu) {
    // optional uint64 bid = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_bid());
    }

    // optional uint64 ask = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_ask());
    }

    // optional uint64 sessionClose = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_sessionclose());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SPOT_EVENT];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASpotEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASpotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASpotEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASpotEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASpotEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASpotEvent)
    MergeFrom(*source);
  }
}

void ProtoOASpotEvent::MergeFrom(const ProtoOASpotEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASpotEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trendbar_.MergeFrom(from.trendbar_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      bid_ = from.bid_;
    }
    if (cached_has_bits & 0x00000008u) {
      ask_ = from.ask_;
    }
    if (cached_has_bits & 0x00000010u) {
      sessionclose_ = from.sessionclose_;
    }
    if (cached_has_bits & 0x00000020u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASpotEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASpotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASpotEvent::CopyFrom(const ProtoOASpotEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASpotEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASpotEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(trendbar_)) return false;
  return true;
}

void ProtoOASpotEvent::InternalSwap(ProtoOASpotEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  trendbar_.InternalSwap(&other->trendbar_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOASpotEvent, sessionclose_)
      + sizeof(ProtoOASpotEvent::sessionclose_)
      - PROTOBUF_FIELD_OFFSET(ProtoOASpotEvent, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASpotEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeLiveTrendbarReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeLiveTrendbarReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_period(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

ProtoOASubscribeLiveTrendbarReq::ProtoOASubscribeLiveTrendbarReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeLiveTrendbarReq)
}
ProtoOASubscribeLiveTrendbarReq::ProtoOASubscribeLiveTrendbarReq(const ProtoOASubscribeLiveTrendbarReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&period_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(period_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeLiveTrendbarReq)
}

void ProtoOASubscribeLiveTrendbarReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2135;
  period_ = 1;
}

ProtoOASubscribeLiveTrendbarReq::~ProtoOASubscribeLiveTrendbarReq() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeLiveTrendbarReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeLiveTrendbarReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeLiveTrendbarReq::ArenaDtor(void* object) {
  ProtoOASubscribeLiveTrendbarReq* _this = reinterpret_cast< ProtoOASubscribeLiveTrendbarReq* >(object);
  (void)_this;
}
void ProtoOASubscribeLiveTrendbarReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeLiveTrendbarReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeLiveTrendbarReq& ProtoOASubscribeLiveTrendbarReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeLiveTrendbarReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeLiveTrendbarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeLiveTrendbarReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2135;
    period_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeLiveTrendbarReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrendbarPeriod period = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATrendbarPeriod_IsValid(val))) {
            _internal_set_period(static_cast<::ProtoOATrendbarPeriod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeLiveTrendbarReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeLiveTrendbarReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOATrendbarPeriod period = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_period(), target);
  }

  // required int64 symbolId = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_symbolid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeLiveTrendbarReq)
  return target;
}

size_t ProtoOASubscribeLiveTrendbarReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOASubscribeLiveTrendbarReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  if (_internal_has_period()) {
    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());
  }

  return total_size;
}
size_t ProtoOASubscribeLiveTrendbarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeLiveTrendbarReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeLiveTrendbarReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeLiveTrendbarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeLiveTrendbarReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeLiveTrendbarReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeLiveTrendbarReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeLiveTrendbarReq)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeLiveTrendbarReq::MergeFrom(const ProtoOASubscribeLiveTrendbarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeLiveTrendbarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      period_ = from.period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeLiveTrendbarReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeLiveTrendbarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeLiveTrendbarReq::CopyFrom(const ProtoOASubscribeLiveTrendbarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeLiveTrendbarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeLiveTrendbarReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeLiveTrendbarReq::InternalSwap(ProtoOASubscribeLiveTrendbarReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOASubscribeLiveTrendbarReq, symbolid_)
      + sizeof(ProtoOASubscribeLiveTrendbarReq::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOASubscribeLiveTrendbarReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(period_, other->period_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeLiveTrendbarReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeLiveTrendbarRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeLiveTrendbarRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASubscribeLiveTrendbarRes::ProtoOASubscribeLiveTrendbarRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeLiveTrendbarRes)
}
ProtoOASubscribeLiveTrendbarRes::ProtoOASubscribeLiveTrendbarRes(const ProtoOASubscribeLiveTrendbarRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeLiveTrendbarRes)
}

void ProtoOASubscribeLiveTrendbarRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2165;
}

ProtoOASubscribeLiveTrendbarRes::~ProtoOASubscribeLiveTrendbarRes() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeLiveTrendbarRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeLiveTrendbarRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeLiveTrendbarRes::ArenaDtor(void* object) {
  ProtoOASubscribeLiveTrendbarRes* _this = reinterpret_cast< ProtoOASubscribeLiveTrendbarRes* >(object);
  (void)_this;
}
void ProtoOASubscribeLiveTrendbarRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeLiveTrendbarRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeLiveTrendbarRes& ProtoOASubscribeLiveTrendbarRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeLiveTrendbarRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeLiveTrendbarRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeLiveTrendbarRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2165;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeLiveTrendbarRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeLiveTrendbarRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeLiveTrendbarRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeLiveTrendbarRes)
  return target;
}

size_t ProtoOASubscribeLiveTrendbarRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeLiveTrendbarRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeLiveTrendbarRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeLiveTrendbarRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeLiveTrendbarRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeLiveTrendbarRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeLiveTrendbarRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeLiveTrendbarRes)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeLiveTrendbarRes::MergeFrom(const ProtoOASubscribeLiveTrendbarRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeLiveTrendbarRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeLiveTrendbarRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeLiveTrendbarRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeLiveTrendbarRes::CopyFrom(const ProtoOASubscribeLiveTrendbarRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeLiveTrendbarRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeLiveTrendbarRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeLiveTrendbarRes::InternalSwap(ProtoOASubscribeLiveTrendbarRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeLiveTrendbarRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeLiveTrendbarReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeLiveTrendbarReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_period(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

ProtoOAUnsubscribeLiveTrendbarReq::ProtoOAUnsubscribeLiveTrendbarReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeLiveTrendbarReq)
}
ProtoOAUnsubscribeLiveTrendbarReq::ProtoOAUnsubscribeLiveTrendbarReq(const ProtoOAUnsubscribeLiveTrendbarReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&period_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(period_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeLiveTrendbarReq)
}

void ProtoOAUnsubscribeLiveTrendbarReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2136;
  period_ = 1;
}

ProtoOAUnsubscribeLiveTrendbarReq::~ProtoOAUnsubscribeLiveTrendbarReq() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeLiveTrendbarReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeLiveTrendbarReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeLiveTrendbarReq::ArenaDtor(void* object) {
  ProtoOAUnsubscribeLiveTrendbarReq* _this = reinterpret_cast< ProtoOAUnsubscribeLiveTrendbarReq* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeLiveTrendbarReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeLiveTrendbarReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeLiveTrendbarReq& ProtoOAUnsubscribeLiveTrendbarReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeLiveTrendbarReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeLiveTrendbarReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeLiveTrendbarReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2136;
    period_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeLiveTrendbarReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrendbarPeriod period = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATrendbarPeriod_IsValid(val))) {
            _internal_set_period(static_cast<::ProtoOATrendbarPeriod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeLiveTrendbarReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeLiveTrendbarReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOATrendbarPeriod period = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_period(), target);
  }

  // required int64 symbolId = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_symbolid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeLiveTrendbarReq)
  return target;
}

size_t ProtoOAUnsubscribeLiveTrendbarReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAUnsubscribeLiveTrendbarReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  if (_internal_has_period()) {
    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());
  }

  return total_size;
}
size_t ProtoOAUnsubscribeLiveTrendbarReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeLiveTrendbarReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000b) ^ 0x0000000b) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeLiveTrendbarReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeLiveTrendbarReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeLiveTrendbarReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeLiveTrendbarReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeLiveTrendbarReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeLiveTrendbarReq)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeLiveTrendbarReq::MergeFrom(const ProtoOAUnsubscribeLiveTrendbarReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeLiveTrendbarReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000008u) {
      period_ = from.period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeLiveTrendbarReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeLiveTrendbarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeLiveTrendbarReq::CopyFrom(const ProtoOAUnsubscribeLiveTrendbarReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeLiveTrendbarReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeLiveTrendbarReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeLiveTrendbarReq::InternalSwap(ProtoOAUnsubscribeLiveTrendbarReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAUnsubscribeLiveTrendbarReq, symbolid_)
      + sizeof(ProtoOAUnsubscribeLiveTrendbarReq::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAUnsubscribeLiveTrendbarReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(period_, other->period_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeLiveTrendbarReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeLiveTrendbarRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeLiveTrendbarRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAUnsubscribeLiveTrendbarRes::ProtoOAUnsubscribeLiveTrendbarRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeLiveTrendbarRes)
}
ProtoOAUnsubscribeLiveTrendbarRes::ProtoOAUnsubscribeLiveTrendbarRes(const ProtoOAUnsubscribeLiveTrendbarRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeLiveTrendbarRes)
}

void ProtoOAUnsubscribeLiveTrendbarRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2166;
}

ProtoOAUnsubscribeLiveTrendbarRes::~ProtoOAUnsubscribeLiveTrendbarRes() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeLiveTrendbarRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeLiveTrendbarRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeLiveTrendbarRes::ArenaDtor(void* object) {
  ProtoOAUnsubscribeLiveTrendbarRes* _this = reinterpret_cast< ProtoOAUnsubscribeLiveTrendbarRes* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeLiveTrendbarRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeLiveTrendbarRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeLiveTrendbarRes& ProtoOAUnsubscribeLiveTrendbarRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeLiveTrendbarRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeLiveTrendbarRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeLiveTrendbarRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2166;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeLiveTrendbarRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeLiveTrendbarRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeLiveTrendbarRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeLiveTrendbarRes)
  return target;
}

size_t ProtoOAUnsubscribeLiveTrendbarRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeLiveTrendbarRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeLiveTrendbarRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeLiveTrendbarRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeLiveTrendbarRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeLiveTrendbarRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeLiveTrendbarRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeLiveTrendbarRes)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeLiveTrendbarRes::MergeFrom(const ProtoOAUnsubscribeLiveTrendbarRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeLiveTrendbarRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeLiveTrendbarRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeLiveTrendbarRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeLiveTrendbarRes::CopyFrom(const ProtoOAUnsubscribeLiveTrendbarRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeLiveTrendbarRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeLiveTrendbarRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeLiveTrendbarRes::InternalSwap(ProtoOAUnsubscribeLiveTrendbarRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeLiveTrendbarRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetTrendbarsReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetTrendbarsReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fromtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_totimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_period(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000002f) ^ 0x0000002f) != 0;
  }
};

ProtoOAGetTrendbarsReq::ProtoOAGetTrendbarsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetTrendbarsReq)
}
ProtoOAGetTrendbarsReq::ProtoOAGetTrendbarsReq(const ProtoOAGetTrendbarsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&period_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(period_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetTrendbarsReq)
}

void ProtoOAGetTrendbarsReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2137;
  period_ = 1;
}

ProtoOAGetTrendbarsReq::~ProtoOAGetTrendbarsReq() {
  // @@protoc_insertion_point(destructor:ProtoOAGetTrendbarsReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetTrendbarsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAGetTrendbarsReq::ArenaDtor(void* object) {
  ProtoOAGetTrendbarsReq* _this = reinterpret_cast< ProtoOAGetTrendbarsReq* >(object);
  (void)_this;
}
void ProtoOAGetTrendbarsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetTrendbarsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetTrendbarsReq& ProtoOAGetTrendbarsReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetTrendbarsReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetTrendbarsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetTrendbarsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2137;
    period_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetTrendbarsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 fromTimestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_fromtimestamp(&has_bits);
          fromtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 toTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_totimestamp(&has_bits);
          totimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrendbarPeriod period = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATrendbarPeriod_IsValid(val))) {
            _internal_set_period(static_cast<::ProtoOATrendbarPeriod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetTrendbarsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetTrendbarsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_REQ];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 fromTimestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_fromtimestamp(), target);
  }

  // required int64 toTimestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_totimestamp(), target);
  }

  // required .ProtoOATrendbarPeriod period = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_period(), target);
  }

  // required int64 symbolId = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_symbolid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetTrendbarsReq)
  return target;
}

size_t ProtoOAGetTrendbarsReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAGetTrendbarsReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_fromtimestamp()) {
    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());
  }

  if (_internal_has_totimestamp()) {
    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  if (_internal_has_period()) {
    // required .ProtoOATrendbarPeriod period = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());
  }

  return total_size;
}
size_t ProtoOAGetTrendbarsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetTrendbarsReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000002f) ^ 0x0000002f) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 fromTimestamp = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());

    // required int64 toTimestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());

    // required int64 symbolId = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

    // required .ProtoOATrendbarPeriod period = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetTrendbarsReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetTrendbarsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetTrendbarsReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetTrendbarsReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetTrendbarsReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetTrendbarsReq)
    MergeFrom(*source);
  }
}

void ProtoOAGetTrendbarsReq::MergeFrom(const ProtoOAGetTrendbarsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetTrendbarsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      fromtimestamp_ = from.fromtimestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      totimestamp_ = from.totimestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000020u) {
      period_ = from.period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetTrendbarsReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetTrendbarsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetTrendbarsReq::CopyFrom(const ProtoOAGetTrendbarsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetTrendbarsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetTrendbarsReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAGetTrendbarsReq::InternalSwap(ProtoOAGetTrendbarsReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAGetTrendbarsReq, symbolid_)
      + sizeof(ProtoOAGetTrendbarsReq::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAGetTrendbarsReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(period_, other->period_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetTrendbarsReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetTrendbarsRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetTrendbarsRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_period(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000013) ^ 0x00000013) != 0;
  }
};

void ProtoOAGetTrendbarsRes::clear_trendbar() {
  trendbar_.Clear();
}
ProtoOAGetTrendbarsRes::ProtoOAGetTrendbarsRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  trendbar_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetTrendbarsRes)
}
ProtoOAGetTrendbarsRes::ProtoOAGetTrendbarsRes(const ProtoOAGetTrendbarsRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      trendbar_(from.trendbar_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&period_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(period_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetTrendbarsRes)
}

void ProtoOAGetTrendbarsRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2138;
  period_ = 1;
}

ProtoOAGetTrendbarsRes::~ProtoOAGetTrendbarsRes() {
  // @@protoc_insertion_point(destructor:ProtoOAGetTrendbarsRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetTrendbarsRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAGetTrendbarsRes::ArenaDtor(void* object) {
  ProtoOAGetTrendbarsRes* _this = reinterpret_cast< ProtoOAGetTrendbarsRes* >(object);
  (void)_this;
}
void ProtoOAGetTrendbarsRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetTrendbarsRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetTrendbarsRes& ProtoOAGetTrendbarsRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetTrendbarsRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetTrendbarsRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetTrendbarsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trendbar_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2138;
    period_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetTrendbarsRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOATrendbarPeriod period = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOATrendbarPeriod_IsValid(val))) {
            _internal_set_period(static_cast<::ProtoOATrendbarPeriod>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOATrendbar trendbar = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trendbar(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // optional int64 symbolId = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetTrendbarsRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetTrendbarsRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_RES];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOATrendbarPeriod period = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_period(), target);
  }

  // required int64 timestamp = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_timestamp(), target);
  }

  // repeated .ProtoOATrendbar trendbar = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_trendbar_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_trendbar(i), target, stream);
  }

  // optional int64 symbolId = 6;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_symbolid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetTrendbarsRes)
  return target;
}

size_t ProtoOAGetTrendbarsRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAGetTrendbarsRes)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_timestamp()) {
    // required int64 timestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (_internal_has_period()) {
    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());
  }

  return total_size;
}
size_t ProtoOAGetTrendbarsRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetTrendbarsRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000013) ^ 0x00000013) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 timestamp = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());

    // required .ProtoOATrendbarPeriod period = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_period());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOATrendbar trendbar = 5;
  total_size += 1UL * this->_internal_trendbar_size();
  for (const auto& msg : this->trendbar_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional int64 symbolId = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_symbolid());
    }

    // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TRENDBARS_RES];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetTrendbarsRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetTrendbarsRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetTrendbarsRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetTrendbarsRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetTrendbarsRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetTrendbarsRes)
    MergeFrom(*source);
  }
}

void ProtoOAGetTrendbarsRes::MergeFrom(const ProtoOAGetTrendbarsRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetTrendbarsRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trendbar_.MergeFrom(from.trendbar_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000008u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      period_ = from.period_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetTrendbarsRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetTrendbarsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetTrendbarsRes::CopyFrom(const ProtoOAGetTrendbarsRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetTrendbarsRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetTrendbarsRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(trendbar_)) return false;
  return true;
}

void ProtoOAGetTrendbarsRes::InternalSwap(ProtoOAGetTrendbarsRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  trendbar_.InternalSwap(&other->trendbar_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAGetTrendbarsRes, symbolid_)
      + sizeof(ProtoOAGetTrendbarsRes::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAGetTrendbarsRes, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(period_, other->period_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetTrendbarsRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetTickDataReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetTickDataReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_fromtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_totimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000002f) ^ 0x0000002f) != 0;
  }
};

ProtoOAGetTickDataReq::ProtoOAGetTickDataReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetTickDataReq)
}
ProtoOAGetTickDataReq::ProtoOAGetTickDataReq(const ProtoOAGetTickDataReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetTickDataReq)
}

void ProtoOAGetTickDataReq::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&totimestamp_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(totimestamp_));
  payloadtype_ = 2145;
  type_ = 1;
}

ProtoOAGetTickDataReq::~ProtoOAGetTickDataReq() {
  // @@protoc_insertion_point(destructor:ProtoOAGetTickDataReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetTickDataReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAGetTickDataReq::ArenaDtor(void* object) {
  ProtoOAGetTickDataReq* _this = reinterpret_cast< ProtoOAGetTickDataReq* >(object);
  (void)_this;
}
void ProtoOAGetTickDataReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetTickDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetTickDataReq& ProtoOAGetTickDataReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetTickDataReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetTickDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetTickDataReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&totimestamp_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(totimestamp_));
    payloadtype_ = 2145;
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetTickDataReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAQuoteType type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAQuoteType_IsValid(val))) {
            _internal_set_type(static_cast<::ProtoOAQuoteType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 fromTimestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_fromtimestamp(&has_bits);
          fromtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int64 toTimestamp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_totimestamp(&has_bits);
          totimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetTickDataReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetTickDataReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_REQ];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required int64 symbolId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(), target);
  }

  // required .ProtoOAQuoteType type = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // required int64 fromTimestamp = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_fromtimestamp(), target);
  }

  // required int64 toTimestamp = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_totimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetTickDataReq)
  return target;
}

size_t ProtoOAGetTickDataReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAGetTickDataReq)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());
  }

  if (_internal_has_fromtimestamp()) {
    // required int64 fromTimestamp = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());
  }

  if (_internal_has_totimestamp()) {
    // required int64 toTimestamp = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());
  }

  if (_internal_has_type()) {
    // required .ProtoOAQuoteType type = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return total_size;
}
size_t ProtoOAGetTickDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetTickDataReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000002f) ^ 0x0000002f) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required int64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_symbolid());

    // required int64 fromTimestamp = 5;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_fromtimestamp());

    // required int64 toTimestamp = 6;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_totimestamp());

    // required .ProtoOAQuoteType type = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000010u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetTickDataReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetTickDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetTickDataReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetTickDataReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetTickDataReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetTickDataReq)
    MergeFrom(*source);
  }
}

void ProtoOAGetTickDataReq::MergeFrom(const ProtoOAGetTickDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetTickDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      fromtimestamp_ = from.fromtimestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      totimestamp_ = from.totimestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      payloadtype_ = from.payloadtype_;
    }
    if (cached_has_bits & 0x00000020u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetTickDataReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetTickDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetTickDataReq::CopyFrom(const ProtoOAGetTickDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetTickDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetTickDataReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAGetTickDataReq::InternalSwap(ProtoOAGetTickDataReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAGetTickDataReq, totimestamp_)
      + sizeof(ProtoOAGetTickDataReq::totimestamp_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAGetTickDataReq, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetTickDataReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetTickDataRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetTickDataRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_hasmore(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

void ProtoOAGetTickDataRes::clear_tickdata() {
  tickdata_.Clear();
}
ProtoOAGetTickDataRes::ProtoOAGetTickDataRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tickdata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetTickDataRes)
}
ProtoOAGetTickDataRes::ProtoOAGetTickDataRes(const ProtoOAGetTickDataRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      tickdata_(from.tickdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetTickDataRes)
}

void ProtoOAGetTickDataRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&hasmore_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(hasmore_));
  payloadtype_ = 2146;
}

ProtoOAGetTickDataRes::~ProtoOAGetTickDataRes() {
  // @@protoc_insertion_point(destructor:ProtoOAGetTickDataRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetTickDataRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAGetTickDataRes::ArenaDtor(void* object) {
  ProtoOAGetTickDataRes* _this = reinterpret_cast< ProtoOAGetTickDataRes* >(object);
  (void)_this;
}
void ProtoOAGetTickDataRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetTickDataRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetTickDataRes& ProtoOAGetTickDataRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetTickDataRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetTickDataRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetTickDataRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tickdata_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&hasmore_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(hasmore_));
    payloadtype_ = 2146;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetTickDataRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOATickData tickData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tickdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // required bool hasMore = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_hasmore(&has_bits);
          hasmore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetTickDataRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetTickDataRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_RES];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOATickData tickData = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tickdata_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_tickdata(i), target, stream);
  }

  // required bool hasMore = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_hasmore(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetTickDataRes)
  return target;
}

size_t ProtoOAGetTickDataRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAGetTickDataRes)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_hasmore()) {
    // required bool hasMore = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t ProtoOAGetTickDataRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetTickDataRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required bool hasMore = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOATickData tickData = 3;
  total_size += 1UL * this->_internal_tickdata_size();
  for (const auto& msg : this->tickdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_TICKDATA_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetTickDataRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetTickDataRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetTickDataRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetTickDataRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetTickDataRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetTickDataRes)
    MergeFrom(*source);
  }
}

void ProtoOAGetTickDataRes::MergeFrom(const ProtoOAGetTickDataRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetTickDataRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tickdata_.MergeFrom(from.tickdata_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      hasmore_ = from.hasmore_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetTickDataRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetTickDataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetTickDataRes::CopyFrom(const ProtoOAGetTickDataRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetTickDataRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetTickDataRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(tickdata_)) return false;
  return true;
}

void ProtoOAGetTickDataRes::InternalSwap(ProtoOAGetTickDataRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tickdata_.InternalSwap(&other->tickdata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAGetTickDataRes, hasmore_)
      + sizeof(ProtoOAGetTickDataRes::hasmore_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAGetTickDataRes, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetTickDataRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetCtidProfileByTokenReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetCtidProfileByTokenReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_accesstoken(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAGetCtidProfileByTokenReq::ProtoOAGetCtidProfileByTokenReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetCtidProfileByTokenReq)
}
ProtoOAGetCtidProfileByTokenReq::ProtoOAGetCtidProfileByTokenReq(const ProtoOAGetCtidProfileByTokenReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_accesstoken()) {
    accesstoken_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_accesstoken(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetCtidProfileByTokenReq)
}

void ProtoOAGetCtidProfileByTokenReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto.base);
  accesstoken_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 2151;
}

ProtoOAGetCtidProfileByTokenReq::~ProtoOAGetCtidProfileByTokenReq() {
  // @@protoc_insertion_point(destructor:ProtoOAGetCtidProfileByTokenReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetCtidProfileByTokenReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  accesstoken_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoOAGetCtidProfileByTokenReq::ArenaDtor(void* object) {
  ProtoOAGetCtidProfileByTokenReq* _this = reinterpret_cast< ProtoOAGetCtidProfileByTokenReq* >(object);
  (void)_this;
}
void ProtoOAGetCtidProfileByTokenReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetCtidProfileByTokenReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetCtidProfileByTokenReq& ProtoOAGetCtidProfileByTokenReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetCtidProfileByTokenReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetCtidProfileByTokenReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetCtidProfileByTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      accesstoken_.ClearNonDefaultToEmpty();
    }
    payloadtype_ = 2151;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetCtidProfileByTokenReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string accessToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_accesstoken();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoOAGetCtidProfileByTokenReq.accessToken");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetCtidProfileByTokenReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetCtidProfileByTokenReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string accessToken = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_accesstoken().data(), static_cast<int>(this->_internal_accesstoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoOAGetCtidProfileByTokenReq.accessToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_accesstoken(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetCtidProfileByTokenReq)
  return target;
}

size_t ProtoOAGetCtidProfileByTokenReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetCtidProfileByTokenReq)
  size_t total_size = 0;

  // required string accessToken = 2;
  if (_internal_has_accesstoken()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_accesstoken());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetCtidProfileByTokenReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetCtidProfileByTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetCtidProfileByTokenReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetCtidProfileByTokenReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetCtidProfileByTokenReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetCtidProfileByTokenReq)
    MergeFrom(*source);
  }
}

void ProtoOAGetCtidProfileByTokenReq::MergeFrom(const ProtoOAGetCtidProfileByTokenReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetCtidProfileByTokenReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_accesstoken(from._internal_accesstoken());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetCtidProfileByTokenReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetCtidProfileByTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetCtidProfileByTokenReq::CopyFrom(const ProtoOAGetCtidProfileByTokenReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetCtidProfileByTokenReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetCtidProfileByTokenReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAGetCtidProfileByTokenReq::InternalSwap(ProtoOAGetCtidProfileByTokenReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  accesstoken_.Swap(&other->accesstoken_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetCtidProfileByTokenReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAGetCtidProfileByTokenRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAGetCtidProfileByTokenRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOACtidProfile& profile(const ProtoOAGetCtidProfileByTokenRes* msg);
  static void set_has_profile(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

const ::ProtoOACtidProfile&
ProtoOAGetCtidProfileByTokenRes::_Internal::profile(const ProtoOAGetCtidProfileByTokenRes* msg) {
  return *msg->profile_;
}
void ProtoOAGetCtidProfileByTokenRes::clear_profile() {
  if (profile_ != nullptr) profile_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOAGetCtidProfileByTokenRes::ProtoOAGetCtidProfileByTokenRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAGetCtidProfileByTokenRes)
}
ProtoOAGetCtidProfileByTokenRes::ProtoOAGetCtidProfileByTokenRes(const ProtoOAGetCtidProfileByTokenRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_profile()) {
    profile_ = new ::ProtoOACtidProfile(*from.profile_);
  } else {
    profile_ = nullptr;
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAGetCtidProfileByTokenRes)
}

void ProtoOAGetCtidProfileByTokenRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto.base);
  profile_ = nullptr;
  payloadtype_ = 2152;
}

ProtoOAGetCtidProfileByTokenRes::~ProtoOAGetCtidProfileByTokenRes() {
  // @@protoc_insertion_point(destructor:ProtoOAGetCtidProfileByTokenRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAGetCtidProfileByTokenRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete profile_;
}

void ProtoOAGetCtidProfileByTokenRes::ArenaDtor(void* object) {
  ProtoOAGetCtidProfileByTokenRes* _this = reinterpret_cast< ProtoOAGetCtidProfileByTokenRes* >(object);
  (void)_this;
}
void ProtoOAGetCtidProfileByTokenRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAGetCtidProfileByTokenRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAGetCtidProfileByTokenRes& ProtoOAGetCtidProfileByTokenRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAGetCtidProfileByTokenRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAGetCtidProfileByTokenRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAGetCtidProfileByTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(profile_ != nullptr);
      profile_->Clear();
    }
    payloadtype_ = 2152;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAGetCtidProfileByTokenRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required .ProtoOACtidProfile profile = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_profile(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAGetCtidProfileByTokenRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAGetCtidProfileByTokenRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required .ProtoOACtidProfile profile = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::profile(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAGetCtidProfileByTokenRes)
  return target;
}

size_t ProtoOAGetCtidProfileByTokenRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAGetCtidProfileByTokenRes)
  size_t total_size = 0;

  // required .ProtoOACtidProfile profile = 2;
  if (_internal_has_profile()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *profile_);
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAGetCtidProfileByTokenRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAGetCtidProfileByTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAGetCtidProfileByTokenRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAGetCtidProfileByTokenRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAGetCtidProfileByTokenRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAGetCtidProfileByTokenRes)
    MergeFrom(*source);
  }
}

void ProtoOAGetCtidProfileByTokenRes::MergeFrom(const ProtoOAGetCtidProfileByTokenRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAGetCtidProfileByTokenRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_profile()->::ProtoOACtidProfile::MergeFrom(from._internal_profile());
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAGetCtidProfileByTokenRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAGetCtidProfileByTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAGetCtidProfileByTokenRes::CopyFrom(const ProtoOAGetCtidProfileByTokenRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAGetCtidProfileByTokenRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAGetCtidProfileByTokenRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_profile()) {
    if (!profile_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOAGetCtidProfileByTokenRes::InternalSwap(ProtoOAGetCtidProfileByTokenRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(profile_, other->profile_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAGetCtidProfileByTokenRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOADepthEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOADepthEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_symbolid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

void ProtoOADepthEvent::clear_newquotes() {
  newquotes_.Clear();
}
ProtoOADepthEvent::ProtoOADepthEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  newquotes_(arena),
  deletedquotes_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOADepthEvent)
}
ProtoOADepthEvent::ProtoOADepthEvent(const ProtoOADepthEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      newquotes_(from.newquotes_),
      deletedquotes_(from.deletedquotes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOADepthEvent)
}

void ProtoOADepthEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOADepthEvent_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&ctidtraderaccountid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&symbolid_) -
      reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
  payloadtype_ = 2155;
}

ProtoOADepthEvent::~ProtoOADepthEvent() {
  // @@protoc_insertion_point(destructor:ProtoOADepthEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOADepthEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOADepthEvent::ArenaDtor(void* object) {
  ProtoOADepthEvent* _this = reinterpret_cast< ProtoOADepthEvent* >(object);
  (void)_this;
}
void ProtoOADepthEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOADepthEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOADepthEvent& ProtoOADepthEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOADepthEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOADepthEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOADepthEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  newquotes_.Clear();
  deletedquotes_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&ctidtraderaccountid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&symbolid_) -
        reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(symbolid_));
    payloadtype_ = 2155;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOADepthEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEPTH_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required uint64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_symbolid(&has_bits);
          symbolid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOADepthQuote newQuotes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_newquotes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint64 deletedQuotes = 5 [packed = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_deletedquotes(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_deletedquotes(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOADepthEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOADepthEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEPTH_EVENT];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required uint64 symbolId = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_symbolid(), target);
  }

  // repeated .ProtoOADepthQuote newQuotes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_newquotes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_newquotes(i), target, stream);
  }

  // repeated uint64 deletedQuotes = 5 [packed = true];
  {
    int byte_size = _deletedquotes_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          5, _internal_deletedquotes(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOADepthEvent)
  return target;
}

size_t ProtoOADepthEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOADepthEvent)
  size_t total_size = 0;

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  if (_internal_has_symbolid()) {
    // required uint64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_symbolid());
  }

  return total_size;
}
size_t ProtoOADepthEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOADepthEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

    // required uint64 symbolId = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_symbolid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOADepthQuote newQuotes = 4;
  total_size += 1UL * this->_internal_newquotes_size();
  for (const auto& msg : this->newquotes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 deletedQuotes = 5 [packed = true];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->deletedquotes_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _deletedquotes_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_DEPTH_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOADepthEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOADepthEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOADepthEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOADepthEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOADepthEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOADepthEvent)
    MergeFrom(*source);
  }
}

void ProtoOADepthEvent::MergeFrom(const ProtoOADepthEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOADepthEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  newquotes_.MergeFrom(from.newquotes_);
  deletedquotes_.MergeFrom(from.deletedquotes_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      symbolid_ = from.symbolid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOADepthEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOADepthEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOADepthEvent::CopyFrom(const ProtoOADepthEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOADepthEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOADepthEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(newquotes_)) return false;
  return true;
}

void ProtoOADepthEvent::InternalSwap(ProtoOADepthEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  newquotes_.InternalSwap(&other->newquotes_);
  deletedquotes_.InternalSwap(&other->deletedquotes_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOADepthEvent, symbolid_)
      + sizeof(ProtoOADepthEvent::symbolid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOADepthEvent, ctidtraderaccountid_)>(
          reinterpret_cast<char*>(&ctidtraderaccountid_),
          reinterpret_cast<char*>(&other->ctidtraderaccountid_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOADepthEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeDepthQuotesReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeDepthQuotesReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASubscribeDepthQuotesReq::ProtoOASubscribeDepthQuotesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeDepthQuotesReq)
}
ProtoOASubscribeDepthQuotesReq::ProtoOASubscribeDepthQuotesReq(const ProtoOASubscribeDepthQuotesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeDepthQuotesReq)
}

void ProtoOASubscribeDepthQuotesReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2156;
}

ProtoOASubscribeDepthQuotesReq::~ProtoOASubscribeDepthQuotesReq() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeDepthQuotesReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeDepthQuotesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeDepthQuotesReq::ArenaDtor(void* object) {
  ProtoOASubscribeDepthQuotesReq* _this = reinterpret_cast< ProtoOASubscribeDepthQuotesReq* >(object);
  (void)_this;
}
void ProtoOASubscribeDepthQuotesReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeDepthQuotesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeDepthQuotesReq& ProtoOASubscribeDepthQuotesReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeDepthQuotesReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeDepthQuotesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeDepthQuotesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2156;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeDepthQuotesReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeDepthQuotesReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeDepthQuotesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeDepthQuotesReq)
  return target;
}

size_t ProtoOASubscribeDepthQuotesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeDepthQuotesReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeDepthQuotesReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeDepthQuotesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeDepthQuotesReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeDepthQuotesReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeDepthQuotesReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeDepthQuotesReq)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeDepthQuotesReq::MergeFrom(const ProtoOASubscribeDepthQuotesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeDepthQuotesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeDepthQuotesReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeDepthQuotesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeDepthQuotesReq::CopyFrom(const ProtoOASubscribeDepthQuotesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeDepthQuotesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeDepthQuotesReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeDepthQuotesReq::InternalSwap(ProtoOASubscribeDepthQuotesReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeDepthQuotesReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASubscribeDepthQuotesRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASubscribeDepthQuotesRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASubscribeDepthQuotesRes::ProtoOASubscribeDepthQuotesRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASubscribeDepthQuotesRes)
}
ProtoOASubscribeDepthQuotesRes::ProtoOASubscribeDepthQuotesRes(const ProtoOASubscribeDepthQuotesRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASubscribeDepthQuotesRes)
}

void ProtoOASubscribeDepthQuotesRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2157;
}

ProtoOASubscribeDepthQuotesRes::~ProtoOASubscribeDepthQuotesRes() {
  // @@protoc_insertion_point(destructor:ProtoOASubscribeDepthQuotesRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASubscribeDepthQuotesRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASubscribeDepthQuotesRes::ArenaDtor(void* object) {
  ProtoOASubscribeDepthQuotesRes* _this = reinterpret_cast< ProtoOASubscribeDepthQuotesRes* >(object);
  (void)_this;
}
void ProtoOASubscribeDepthQuotesRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASubscribeDepthQuotesRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASubscribeDepthQuotesRes& ProtoOASubscribeDepthQuotesRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASubscribeDepthQuotesRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASubscribeDepthQuotesRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASubscribeDepthQuotesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2157;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASubscribeDepthQuotesRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASubscribeDepthQuotesRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASubscribeDepthQuotesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASubscribeDepthQuotesRes)
  return target;
}

size_t ProtoOASubscribeDepthQuotesRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASubscribeDepthQuotesRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASubscribeDepthQuotesRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASubscribeDepthQuotesRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASubscribeDepthQuotesRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASubscribeDepthQuotesRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASubscribeDepthQuotesRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASubscribeDepthQuotesRes)
    MergeFrom(*source);
  }
}

void ProtoOASubscribeDepthQuotesRes::MergeFrom(const ProtoOASubscribeDepthQuotesRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASubscribeDepthQuotesRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASubscribeDepthQuotesRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASubscribeDepthQuotesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASubscribeDepthQuotesRes::CopyFrom(const ProtoOASubscribeDepthQuotesRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASubscribeDepthQuotesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASubscribeDepthQuotesRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASubscribeDepthQuotesRes::InternalSwap(ProtoOASubscribeDepthQuotesRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASubscribeDepthQuotesRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeDepthQuotesReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeDepthQuotesReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAUnsubscribeDepthQuotesReq::ProtoOAUnsubscribeDepthQuotesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeDepthQuotesReq)
}
ProtoOAUnsubscribeDepthQuotesReq::ProtoOAUnsubscribeDepthQuotesReq(const ProtoOAUnsubscribeDepthQuotesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolid_(from.symbolid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeDepthQuotesReq)
}

void ProtoOAUnsubscribeDepthQuotesReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2158;
}

ProtoOAUnsubscribeDepthQuotesReq::~ProtoOAUnsubscribeDepthQuotesReq() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeDepthQuotesReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeDepthQuotesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeDepthQuotesReq::ArenaDtor(void* object) {
  ProtoOAUnsubscribeDepthQuotesReq* _this = reinterpret_cast< ProtoOAUnsubscribeDepthQuotesReq* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeDepthQuotesReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeDepthQuotesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeDepthQuotesReq& ProtoOAUnsubscribeDepthQuotesReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeDepthQuotesReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeDepthQuotesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeDepthQuotesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolid_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2158;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeDepthQuotesReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 symbolId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_symbolid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_symbolid(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeDepthQuotesReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeDepthQuotesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated int64 symbolId = 3;
  for (int i = 0, n = this->_internal_symbolid_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_symbolid(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeDepthQuotesReq)
  return target;
}

size_t ProtoOAUnsubscribeDepthQuotesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeDepthQuotesReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 symbolId = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->symbolid_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_symbolid_size());
    total_size += data_size;
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeDepthQuotesReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeDepthQuotesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeDepthQuotesReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeDepthQuotesReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeDepthQuotesReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeDepthQuotesReq)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeDepthQuotesReq::MergeFrom(const ProtoOAUnsubscribeDepthQuotesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeDepthQuotesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolid_.MergeFrom(from.symbolid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeDepthQuotesReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeDepthQuotesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeDepthQuotesReq::CopyFrom(const ProtoOAUnsubscribeDepthQuotesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeDepthQuotesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeDepthQuotesReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeDepthQuotesReq::InternalSwap(ProtoOAUnsubscribeDepthQuotesReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolid_.InternalSwap(&other->symbolid_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeDepthQuotesReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAUnsubscribeDepthQuotesRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAUnsubscribeDepthQuotesRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAUnsubscribeDepthQuotesRes::ProtoOAUnsubscribeDepthQuotesRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAUnsubscribeDepthQuotesRes)
}
ProtoOAUnsubscribeDepthQuotesRes::ProtoOAUnsubscribeDepthQuotesRes(const ProtoOAUnsubscribeDepthQuotesRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAUnsubscribeDepthQuotesRes)
}

void ProtoOAUnsubscribeDepthQuotesRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2159;
}

ProtoOAUnsubscribeDepthQuotesRes::~ProtoOAUnsubscribeDepthQuotesRes() {
  // @@protoc_insertion_point(destructor:ProtoOAUnsubscribeDepthQuotesRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAUnsubscribeDepthQuotesRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAUnsubscribeDepthQuotesRes::ArenaDtor(void* object) {
  ProtoOAUnsubscribeDepthQuotesRes* _this = reinterpret_cast< ProtoOAUnsubscribeDepthQuotesRes* >(object);
  (void)_this;
}
void ProtoOAUnsubscribeDepthQuotesRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAUnsubscribeDepthQuotesRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAUnsubscribeDepthQuotesRes& ProtoOAUnsubscribeDepthQuotesRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAUnsubscribeDepthQuotesRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAUnsubscribeDepthQuotesRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAUnsubscribeDepthQuotesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2159;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAUnsubscribeDepthQuotesRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAUnsubscribeDepthQuotesRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAUnsubscribeDepthQuotesRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAUnsubscribeDepthQuotesRes)
  return target;
}

size_t ProtoOAUnsubscribeDepthQuotesRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAUnsubscribeDepthQuotesRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAUnsubscribeDepthQuotesRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAUnsubscribeDepthQuotesRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAUnsubscribeDepthQuotesRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAUnsubscribeDepthQuotesRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAUnsubscribeDepthQuotesRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAUnsubscribeDepthQuotesRes)
    MergeFrom(*source);
  }
}

void ProtoOAUnsubscribeDepthQuotesRes::MergeFrom(const ProtoOAUnsubscribeDepthQuotesRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAUnsubscribeDepthQuotesRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAUnsubscribeDepthQuotesRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAUnsubscribeDepthQuotesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAUnsubscribeDepthQuotesRes::CopyFrom(const ProtoOAUnsubscribeDepthQuotesRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAUnsubscribeDepthQuotesRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAUnsubscribeDepthQuotesRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAUnsubscribeDepthQuotesRes::InternalSwap(ProtoOAUnsubscribeDepthQuotesRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAUnsubscribeDepthQuotesRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolCategoryListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolCategoryListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOASymbolCategoryListReq::ProtoOASymbolCategoryListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolCategoryListReq)
}
ProtoOASymbolCategoryListReq::ProtoOASymbolCategoryListReq(const ProtoOASymbolCategoryListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolCategoryListReq)
}

void ProtoOASymbolCategoryListReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2160;
}

ProtoOASymbolCategoryListReq::~ProtoOASymbolCategoryListReq() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolCategoryListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolCategoryListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolCategoryListReq::ArenaDtor(void* object) {
  ProtoOASymbolCategoryListReq* _this = reinterpret_cast< ProtoOASymbolCategoryListReq* >(object);
  (void)_this;
}
void ProtoOASymbolCategoryListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolCategoryListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolCategoryListReq& ProtoOASymbolCategoryListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolCategoryListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolCategoryListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolCategoryListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2160;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolCategoryListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolCategoryListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolCategoryListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolCategoryListReq)
  return target;
}

size_t ProtoOASymbolCategoryListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolCategoryListReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolCategoryListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolCategoryListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolCategoryListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolCategoryListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolCategoryListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolCategoryListReq)
    MergeFrom(*source);
  }
}

void ProtoOASymbolCategoryListReq::MergeFrom(const ProtoOASymbolCategoryListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolCategoryListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolCategoryListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolCategoryListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolCategoryListReq::CopyFrom(const ProtoOASymbolCategoryListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolCategoryListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolCategoryListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOASymbolCategoryListReq::InternalSwap(ProtoOASymbolCategoryListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolCategoryListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOASymbolCategoryListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOASymbolCategoryListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

void ProtoOASymbolCategoryListRes::clear_symbolcategory() {
  symbolcategory_.Clear();
}
ProtoOASymbolCategoryListRes::ProtoOASymbolCategoryListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  symbolcategory_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOASymbolCategoryListRes)
}
ProtoOASymbolCategoryListRes::ProtoOASymbolCategoryListRes(const ProtoOASymbolCategoryListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      symbolcategory_(from.symbolcategory_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOASymbolCategoryListRes)
}

void ProtoOASymbolCategoryListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto.base);
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2161;
}

ProtoOASymbolCategoryListRes::~ProtoOASymbolCategoryListRes() {
  // @@protoc_insertion_point(destructor:ProtoOASymbolCategoryListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOASymbolCategoryListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOASymbolCategoryListRes::ArenaDtor(void* object) {
  ProtoOASymbolCategoryListRes* _this = reinterpret_cast< ProtoOASymbolCategoryListRes* >(object);
  (void)_this;
}
void ProtoOASymbolCategoryListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOASymbolCategoryListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOASymbolCategoryListRes& ProtoOASymbolCategoryListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOASymbolCategoryListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOASymbolCategoryListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOASymbolCategoryListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  symbolcategory_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2161;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOASymbolCategoryListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOASymbolCategory symbolCategory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_symbolcategory(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOASymbolCategoryListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOASymbolCategoryListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // repeated .ProtoOASymbolCategory symbolCategory = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_symbolcategory_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_symbolcategory(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOASymbolCategoryListRes)
  return target;
}

size_t ProtoOASymbolCategoryListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOASymbolCategoryListRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOASymbolCategory symbolCategory = 3;
  total_size += 1UL * this->_internal_symbolcategory_size();
  for (const auto& msg : this->symbolcategory_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_SYMBOL_CATEGORY_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOASymbolCategoryListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOASymbolCategoryListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOASymbolCategoryListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOASymbolCategoryListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOASymbolCategoryListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOASymbolCategoryListRes)
    MergeFrom(*source);
  }
}

void ProtoOASymbolCategoryListRes::MergeFrom(const ProtoOASymbolCategoryListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOASymbolCategoryListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  symbolcategory_.MergeFrom(from.symbolcategory_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOASymbolCategoryListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOASymbolCategoryListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOASymbolCategoryListRes::CopyFrom(const ProtoOASymbolCategoryListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOASymbolCategoryListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOASymbolCategoryListRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(symbolcategory_)) return false;
  return true;
}

void ProtoOASymbolCategoryListRes::InternalSwap(ProtoOASymbolCategoryListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  symbolcategory_.InternalSwap(&other->symbolcategory_);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOASymbolCategoryListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountLogoutReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountLogoutReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAccountLogoutReq::ProtoOAAccountLogoutReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountLogoutReq)
}
ProtoOAAccountLogoutReq::ProtoOAAccountLogoutReq(const ProtoOAAccountLogoutReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountLogoutReq)
}

void ProtoOAAccountLogoutReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2162;
}

ProtoOAAccountLogoutReq::~ProtoOAAccountLogoutReq() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountLogoutReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountLogoutReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAccountLogoutReq::ArenaDtor(void* object) {
  ProtoOAAccountLogoutReq* _this = reinterpret_cast< ProtoOAAccountLogoutReq* >(object);
  (void)_this;
}
void ProtoOAAccountLogoutReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountLogoutReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountLogoutReq& ProtoOAAccountLogoutReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountLogoutReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountLogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountLogoutReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2162;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountLogoutReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountLogoutReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountLogoutReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountLogoutReq)
  return target;
}

size_t ProtoOAAccountLogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountLogoutReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountLogoutReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountLogoutReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountLogoutReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountLogoutReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountLogoutReq)
    MergeFrom(*source);
  }
}

void ProtoOAAccountLogoutReq::MergeFrom(const ProtoOAAccountLogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountLogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountLogoutReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountLogoutReq::CopyFrom(const ProtoOAAccountLogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountLogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountLogoutReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAccountLogoutReq::InternalSwap(ProtoOAAccountLogoutReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountLogoutReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountLogoutRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountLogoutRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAccountLogoutRes::ProtoOAAccountLogoutRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountLogoutRes)
}
ProtoOAAccountLogoutRes::ProtoOAAccountLogoutRes(const ProtoOAAccountLogoutRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountLogoutRes)
}

void ProtoOAAccountLogoutRes::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2163;
}

ProtoOAAccountLogoutRes::~ProtoOAAccountLogoutRes() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountLogoutRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountLogoutRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAccountLogoutRes::ArenaDtor(void* object) {
  ProtoOAAccountLogoutRes* _this = reinterpret_cast< ProtoOAAccountLogoutRes* >(object);
  (void)_this;
}
void ProtoOAAccountLogoutRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountLogoutRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountLogoutRes& ProtoOAAccountLogoutRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountLogoutRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountLogoutRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountLogoutRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2163;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountLogoutRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountLogoutRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountLogoutRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_RES];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountLogoutRes)
  return target;
}

size_t ProtoOAAccountLogoutRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountLogoutRes)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_LOGOUT_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountLogoutRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountLogoutRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountLogoutRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountLogoutRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountLogoutRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountLogoutRes)
    MergeFrom(*source);
  }
}

void ProtoOAAccountLogoutRes::MergeFrom(const ProtoOAAccountLogoutRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountLogoutRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountLogoutRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountLogoutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountLogoutRes::CopyFrom(const ProtoOAAccountLogoutRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountLogoutRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountLogoutRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAccountLogoutRes::InternalSwap(ProtoOAAccountLogoutRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountLogoutRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAAccountDisconnectEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAAccountDisconnectEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAAccountDisconnectEvent::ProtoOAAccountDisconnectEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAAccountDisconnectEvent)
}
ProtoOAAccountDisconnectEvent::ProtoOAAccountDisconnectEvent(const ProtoOAAccountDisconnectEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAAccountDisconnectEvent)
}

void ProtoOAAccountDisconnectEvent::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2164;
}

ProtoOAAccountDisconnectEvent::~ProtoOAAccountDisconnectEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAAccountDisconnectEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAAccountDisconnectEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAAccountDisconnectEvent::ArenaDtor(void* object) {
  ProtoOAAccountDisconnectEvent* _this = reinterpret_cast< ProtoOAAccountDisconnectEvent* >(object);
  (void)_this;
}
void ProtoOAAccountDisconnectEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAAccountDisconnectEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAAccountDisconnectEvent& ProtoOAAccountDisconnectEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAAccountDisconnectEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAAccountDisconnectEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAAccountDisconnectEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2164;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAAccountDisconnectEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_DISCONNECT_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAAccountDisconnectEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAAccountDisconnectEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_DISCONNECT_EVENT];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAAccountDisconnectEvent)
  return target;
}

size_t ProtoOAAccountDisconnectEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAAccountDisconnectEvent)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_ACCOUNT_DISCONNECT_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAAccountDisconnectEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAAccountDisconnectEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAAccountDisconnectEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAAccountDisconnectEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAAccountDisconnectEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAAccountDisconnectEvent)
    MergeFrom(*source);
  }
}

void ProtoOAAccountDisconnectEvent::MergeFrom(const ProtoOAAccountDisconnectEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAAccountDisconnectEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAAccountDisconnectEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAAccountDisconnectEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAAccountDisconnectEvent::CopyFrom(const ProtoOAAccountDisconnectEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAAccountDisconnectEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAAccountDisconnectEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAAccountDisconnectEvent::InternalSwap(ProtoOAAccountDisconnectEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAAccountDisconnectEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallListReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallListReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoOAMarginCallListReq::ProtoOAMarginCallListReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallListReq)
}
ProtoOAMarginCallListReq::ProtoOAMarginCallListReq(const ProtoOAMarginCallListReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallListReq)
}

void ProtoOAMarginCallListReq::SharedCtor() {
  ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
  payloadtype_ = 2167;
}

ProtoOAMarginCallListReq::~ProtoOAMarginCallListReq() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallListReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallListReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAMarginCallListReq::ArenaDtor(void* object) {
  ProtoOAMarginCallListReq* _this = reinterpret_cast< ProtoOAMarginCallListReq* >(object);
  (void)_this;
}
void ProtoOAMarginCallListReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallListReq& ProtoOAMarginCallListReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallListReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2167;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallListReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallListReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallListReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_REQ];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallListReq)
  return target;
}

size_t ProtoOAMarginCallListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallListReq)
  size_t total_size = 0;

  // required int64 ctidTraderAccountId = 2;
  if (_internal_has_ctidtraderaccountid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000002u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallListReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallListReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallListReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallListReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallListReq)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallListReq::MergeFrom(const ProtoOAMarginCallListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAMarginCallListReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallListReq::CopyFrom(const ProtoOAMarginCallListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallListReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoOAMarginCallListReq::InternalSwap(ProtoOAMarginCallListReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ctidtraderaccountid_, other->ctidtraderaccountid_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallListReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallListRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallListRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void ProtoOAMarginCallListRes::clear_margincall() {
  margincall_.Clear();
}
ProtoOAMarginCallListRes::ProtoOAMarginCallListRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  margincall_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallListRes)
}
ProtoOAMarginCallListRes::ProtoOAMarginCallListRes(const ProtoOAMarginCallListRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      margincall_(from.margincall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallListRes)
}

void ProtoOAMarginCallListRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto.base);
  payloadtype_ = 2168;
}

ProtoOAMarginCallListRes::~ProtoOAMarginCallListRes() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallListRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallListRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAMarginCallListRes::ArenaDtor(void* object) {
  ProtoOAMarginCallListRes* _this = reinterpret_cast< ProtoOAMarginCallListRes* >(object);
  (void)_this;
}
void ProtoOAMarginCallListRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallListRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallListRes& ProtoOAMarginCallListRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallListRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallListRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  margincall_.Clear();
  payloadtype_ = 2168;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallListRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .ProtoOAMarginCall marginCall = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_margincall(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallListRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallListRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_RES];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // repeated .ProtoOAMarginCall marginCall = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_margincall_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_margincall(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallListRes)
  return target;
}

size_t ProtoOAMarginCallListRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallListRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoOAMarginCall marginCall = 2;
  total_size += 1UL * this->_internal_margincall_size();
  for (const auto& msg : this->margincall_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_LIST_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallListRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallListRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallListRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallListRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallListRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallListRes)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallListRes::MergeFrom(const ProtoOAMarginCallListRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallListRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  margincall_.MergeFrom(from.margincall_);
  if (from._internal_has_payloadtype()) {
    _internal_set_payloadtype(from._internal_payloadtype());
  }
}

void ProtoOAMarginCallListRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallListRes::CopyFrom(const ProtoOAMarginCallListRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallListRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallListRes::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(margincall_)) return false;
  return true;
}

void ProtoOAMarginCallListRes::InternalSwap(ProtoOAMarginCallListRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  margincall_.InternalSwap(&other->margincall_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallListRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallUpdateReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallUpdateReq>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOAMarginCall& margincall(const ProtoOAMarginCallUpdateReq* msg);
  static void set_has_margincall(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ProtoOAMarginCall&
ProtoOAMarginCallUpdateReq::_Internal::margincall(const ProtoOAMarginCallUpdateReq* msg) {
  return *msg->margincall_;
}
void ProtoOAMarginCallUpdateReq::clear_margincall() {
  if (margincall_ != nullptr) margincall_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOAMarginCallUpdateReq::ProtoOAMarginCallUpdateReq(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallUpdateReq)
}
ProtoOAMarginCallUpdateReq::ProtoOAMarginCallUpdateReq(const ProtoOAMarginCallUpdateReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_margincall()) {
    margincall_ = new ::ProtoOAMarginCall(*from.margincall_);
  } else {
    margincall_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallUpdateReq)
}

void ProtoOAMarginCallUpdateReq::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&margincall_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctidtraderaccountid_) -
      reinterpret_cast<char*>(&margincall_)) + sizeof(ctidtraderaccountid_));
  payloadtype_ = 2169;
}

ProtoOAMarginCallUpdateReq::~ProtoOAMarginCallUpdateReq() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallUpdateReq)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallUpdateReq::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete margincall_;
}

void ProtoOAMarginCallUpdateReq::ArenaDtor(void* object) {
  ProtoOAMarginCallUpdateReq* _this = reinterpret_cast< ProtoOAMarginCallUpdateReq* >(object);
  (void)_this;
}
void ProtoOAMarginCallUpdateReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallUpdateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallUpdateReq& ProtoOAMarginCallUpdateReq::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallUpdateReq_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallUpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(margincall_ != nullptr);
    margincall_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2169;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallUpdateReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_REQ];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAMarginCall marginCall = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_margincall(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallUpdateReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallUpdateReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_REQ];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOAMarginCall marginCall = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::margincall(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallUpdateReq)
  return target;
}

size_t ProtoOAMarginCallUpdateReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAMarginCallUpdateReq)
  size_t total_size = 0;

  if (_internal_has_margincall()) {
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOAMarginCallUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallUpdateReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_REQ];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallUpdateReq::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallUpdateReq* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallUpdateReq>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallUpdateReq)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallUpdateReq)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallUpdateReq::MergeFrom(const ProtoOAMarginCallUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_margincall()->::ProtoOAMarginCall::MergeFrom(from._internal_margincall());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAMarginCallUpdateReq::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallUpdateReq::CopyFrom(const ProtoOAMarginCallUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallUpdateReq::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_margincall()) {
    if (!margincall_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOAMarginCallUpdateReq::InternalSwap(ProtoOAMarginCallUpdateReq* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallUpdateReq, ctidtraderaccountid_)
      + sizeof(ProtoOAMarginCallUpdateReq::ctidtraderaccountid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallUpdateReq, margincall_)>(
          reinterpret_cast<char*>(&margincall_),
          reinterpret_cast<char*>(&other->margincall_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallUpdateReq::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallUpdateRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallUpdateRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoOAMarginCallUpdateRes::ProtoOAMarginCallUpdateRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallUpdateRes)
}
ProtoOAMarginCallUpdateRes::ProtoOAMarginCallUpdateRes(const ProtoOAMarginCallUpdateRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallUpdateRes)
}

void ProtoOAMarginCallUpdateRes::SharedCtor() {
  payloadtype_ = 2170;
}

ProtoOAMarginCallUpdateRes::~ProtoOAMarginCallUpdateRes() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallUpdateRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallUpdateRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoOAMarginCallUpdateRes::ArenaDtor(void* object) {
  ProtoOAMarginCallUpdateRes* _this = reinterpret_cast< ProtoOAMarginCallUpdateRes* >(object);
  (void)_this;
}
void ProtoOAMarginCallUpdateRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallUpdateRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallUpdateRes& ProtoOAMarginCallUpdateRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallUpdateRes_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallUpdateRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallUpdateRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payloadtype_ = 2170;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallUpdateRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallUpdateRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallUpdateRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_RES];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallUpdateRes)
  return target;
}

size_t ProtoOAMarginCallUpdateRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallUpdateRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_RES];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallUpdateRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallUpdateRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallUpdateRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallUpdateRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallUpdateRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallUpdateRes)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallUpdateRes::MergeFrom(const ProtoOAMarginCallUpdateRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallUpdateRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_payloadtype()) {
    _internal_set_payloadtype(from._internal_payloadtype());
  }
}

void ProtoOAMarginCallUpdateRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallUpdateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallUpdateRes::CopyFrom(const ProtoOAMarginCallUpdateRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallUpdateRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallUpdateRes::IsInitialized() const {
  return true;
}

void ProtoOAMarginCallUpdateRes::InternalSwap(ProtoOAMarginCallUpdateRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallUpdateRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallUpdateEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallUpdateEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOAMarginCall& margincall(const ProtoOAMarginCallUpdateEvent* msg);
  static void set_has_margincall(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ProtoOAMarginCall&
ProtoOAMarginCallUpdateEvent::_Internal::margincall(const ProtoOAMarginCallUpdateEvent* msg) {
  return *msg->margincall_;
}
void ProtoOAMarginCallUpdateEvent::clear_margincall() {
  if (margincall_ != nullptr) margincall_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOAMarginCallUpdateEvent::ProtoOAMarginCallUpdateEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallUpdateEvent)
}
ProtoOAMarginCallUpdateEvent::ProtoOAMarginCallUpdateEvent(const ProtoOAMarginCallUpdateEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_margincall()) {
    margincall_ = new ::ProtoOAMarginCall(*from.margincall_);
  } else {
    margincall_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallUpdateEvent)
}

void ProtoOAMarginCallUpdateEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&margincall_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctidtraderaccountid_) -
      reinterpret_cast<char*>(&margincall_)) + sizeof(ctidtraderaccountid_));
  payloadtype_ = 2171;
}

ProtoOAMarginCallUpdateEvent::~ProtoOAMarginCallUpdateEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallUpdateEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallUpdateEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete margincall_;
}

void ProtoOAMarginCallUpdateEvent::ArenaDtor(void* object) {
  ProtoOAMarginCallUpdateEvent* _this = reinterpret_cast< ProtoOAMarginCallUpdateEvent* >(object);
  (void)_this;
}
void ProtoOAMarginCallUpdateEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallUpdateEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallUpdateEvent& ProtoOAMarginCallUpdateEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallUpdateEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallUpdateEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallUpdateEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(margincall_ != nullptr);
    margincall_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2171;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallUpdateEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAMarginCall marginCall = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_margincall(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallUpdateEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallUpdateEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_EVENT];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOAMarginCall marginCall = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::margincall(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallUpdateEvent)
  return target;
}

size_t ProtoOAMarginCallUpdateEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAMarginCallUpdateEvent)
  size_t total_size = 0;

  if (_internal_has_margincall()) {
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOAMarginCallUpdateEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallUpdateEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_UPDATE_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallUpdateEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallUpdateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallUpdateEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallUpdateEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallUpdateEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallUpdateEvent)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallUpdateEvent::MergeFrom(const ProtoOAMarginCallUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallUpdateEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_margincall()->::ProtoOAMarginCall::MergeFrom(from._internal_margincall());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAMarginCallUpdateEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallUpdateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallUpdateEvent::CopyFrom(const ProtoOAMarginCallUpdateEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallUpdateEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallUpdateEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_margincall()) {
    if (!margincall_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOAMarginCallUpdateEvent::InternalSwap(ProtoOAMarginCallUpdateEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallUpdateEvent, ctidtraderaccountid_)
      + sizeof(ProtoOAMarginCallUpdateEvent::ctidtraderaccountid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallUpdateEvent, margincall_)>(
          reinterpret_cast<char*>(&margincall_),
          reinterpret_cast<char*>(&other->margincall_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallUpdateEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoOAMarginCallTriggerEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoOAMarginCallTriggerEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ctidtraderaccountid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::ProtoOAMarginCall& margincall(const ProtoOAMarginCallTriggerEvent* msg);
  static void set_has_margincall(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

const ::ProtoOAMarginCall&
ProtoOAMarginCallTriggerEvent::_Internal::margincall(const ProtoOAMarginCallTriggerEvent* msg) {
  return *msg->margincall_;
}
void ProtoOAMarginCallTriggerEvent::clear_margincall() {
  if (margincall_ != nullptr) margincall_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
ProtoOAMarginCallTriggerEvent::ProtoOAMarginCallTriggerEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoOAMarginCallTriggerEvent)
}
ProtoOAMarginCallTriggerEvent::ProtoOAMarginCallTriggerEvent(const ProtoOAMarginCallTriggerEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_margincall()) {
    margincall_ = new ::ProtoOAMarginCall(*from.margincall_);
  } else {
    margincall_ = nullptr;
  }
  ::memcpy(&ctidtraderaccountid_, &from.ctidtraderaccountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&ctidtraderaccountid_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoOAMarginCallTriggerEvent)
}

void ProtoOAMarginCallTriggerEvent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&margincall_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&ctidtraderaccountid_) -
      reinterpret_cast<char*>(&margincall_)) + sizeof(ctidtraderaccountid_));
  payloadtype_ = 2172;
}

ProtoOAMarginCallTriggerEvent::~ProtoOAMarginCallTriggerEvent() {
  // @@protoc_insertion_point(destructor:ProtoOAMarginCallTriggerEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoOAMarginCallTriggerEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete margincall_;
}

void ProtoOAMarginCallTriggerEvent::ArenaDtor(void* object) {
  ProtoOAMarginCallTriggerEvent* _this = reinterpret_cast< ProtoOAMarginCallTriggerEvent* >(object);
  (void)_this;
}
void ProtoOAMarginCallTriggerEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoOAMarginCallTriggerEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoOAMarginCallTriggerEvent& ProtoOAMarginCallTriggerEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoOAMarginCallTriggerEvent_OpenApiMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoOAMarginCallTriggerEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoOAMarginCallTriggerEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(margincall_ != nullptr);
    margincall_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ctidtraderaccountid_ = PROTOBUF_LONGLONG(0);
    payloadtype_ = 2172;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoOAMarginCallTriggerEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_TRIGGER_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoOAPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoOAPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int64 ctidTraderAccountId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_ctidtraderaccountid(&has_bits);
          ctidtraderaccountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required .ProtoOAMarginCall marginCall = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_margincall(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoOAMarginCallTriggerEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoOAMarginCallTriggerEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_TRIGGER_EVENT];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required int64 ctidTraderAccountId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_ctidtraderaccountid(), target);
  }

  // required .ProtoOAMarginCall marginCall = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::margincall(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoOAMarginCallTriggerEvent)
  return target;
}

size_t ProtoOAMarginCallTriggerEvent::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:ProtoOAMarginCallTriggerEvent)
  size_t total_size = 0;

  if (_internal_has_margincall()) {
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);
  }

  if (_internal_has_ctidtraderaccountid()) {
    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());
  }

  return total_size;
}
size_t ProtoOAMarginCallTriggerEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoOAMarginCallTriggerEvent)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .ProtoOAMarginCall marginCall = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *margincall_);

    // required int64 ctidTraderAccountId = 2;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_ctidtraderaccountid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoOAPayloadType payloadType = 1 [default = PROTO_OA_MARGIN_CALL_TRIGGER_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoOAMarginCallTriggerEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoOAMarginCallTriggerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoOAMarginCallTriggerEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoOAMarginCallTriggerEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoOAMarginCallTriggerEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoOAMarginCallTriggerEvent)
    MergeFrom(*source);
  }
}

void ProtoOAMarginCallTriggerEvent::MergeFrom(const ProtoOAMarginCallTriggerEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoOAMarginCallTriggerEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_margincall()->::ProtoOAMarginCall::MergeFrom(from._internal_margincall());
    }
    if (cached_has_bits & 0x00000002u) {
      ctidtraderaccountid_ = from.ctidtraderaccountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoOAMarginCallTriggerEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoOAMarginCallTriggerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoOAMarginCallTriggerEvent::CopyFrom(const ProtoOAMarginCallTriggerEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoOAMarginCallTriggerEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoOAMarginCallTriggerEvent::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  if (_internal_has_margincall()) {
    if (!margincall_->IsInitialized()) return false;
  }
  return true;
}

void ProtoOAMarginCallTriggerEvent::InternalSwap(ProtoOAMarginCallTriggerEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallTriggerEvent, ctidtraderaccountid_)
      + sizeof(ProtoOAMarginCallTriggerEvent::ctidtraderaccountid_)
      - PROTOBUF_FIELD_OFFSET(ProtoOAMarginCallTriggerEvent, margincall_)>(
          reinterpret_cast<char*>(&margincall_),
          reinterpret_cast<char*>(&other->margincall_));
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoOAMarginCallTriggerEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoOAApplicationAuthReq* Arena::CreateMaybeMessage< ::ProtoOAApplicationAuthReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAApplicationAuthReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAApplicationAuthRes* Arena::CreateMaybeMessage< ::ProtoOAApplicationAuthRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAApplicationAuthRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountAuthReq* Arena::CreateMaybeMessage< ::ProtoOAAccountAuthReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountAuthReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountAuthRes* Arena::CreateMaybeMessage< ::ProtoOAAccountAuthRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountAuthRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAErrorRes* Arena::CreateMaybeMessage< ::ProtoOAErrorRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAErrorRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAClientDisconnectEvent* Arena::CreateMaybeMessage< ::ProtoOAClientDisconnectEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAClientDisconnectEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountsTokenInvalidatedEvent* Arena::CreateMaybeMessage< ::ProtoOAAccountsTokenInvalidatedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountsTokenInvalidatedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAVersionReq* Arena::CreateMaybeMessage< ::ProtoOAVersionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAVersionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAVersionRes* Arena::CreateMaybeMessage< ::ProtoOAVersionRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAVersionRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOANewOrderReq* Arena::CreateMaybeMessage< ::ProtoOANewOrderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOANewOrderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAExecutionEvent* Arena::CreateMaybeMessage< ::ProtoOAExecutionEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAExecutionEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOACancelOrderReq* Arena::CreateMaybeMessage< ::ProtoOACancelOrderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOACancelOrderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAmendOrderReq* Arena::CreateMaybeMessage< ::ProtoOAAmendOrderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAmendOrderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAmendPositionSLTPReq* Arena::CreateMaybeMessage< ::ProtoOAAmendPositionSLTPReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAmendPositionSLTPReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAClosePositionReq* Arena::CreateMaybeMessage< ::ProtoOAClosePositionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAClosePositionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOATrailingSLChangedEvent* Arena::CreateMaybeMessage< ::ProtoOATrailingSLChangedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOATrailingSLChangedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAssetListReq* Arena::CreateMaybeMessage< ::ProtoOAAssetListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAssetListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAssetListRes* Arena::CreateMaybeMessage< ::ProtoOAAssetListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAssetListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolsListReq* Arena::CreateMaybeMessage< ::ProtoOASymbolsListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolsListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolsListRes* Arena::CreateMaybeMessage< ::ProtoOASymbolsListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolsListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolByIdReq* Arena::CreateMaybeMessage< ::ProtoOASymbolByIdReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolByIdReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolByIdRes* Arena::CreateMaybeMessage< ::ProtoOASymbolByIdRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolByIdRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolsForConversionReq* Arena::CreateMaybeMessage< ::ProtoOASymbolsForConversionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolsForConversionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolsForConversionRes* Arena::CreateMaybeMessage< ::ProtoOASymbolsForConversionRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolsForConversionRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolChangedEvent* Arena::CreateMaybeMessage< ::ProtoOASymbolChangedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolChangedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAssetClassListReq* Arena::CreateMaybeMessage< ::ProtoOAAssetClassListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAssetClassListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAssetClassListRes* Arena::CreateMaybeMessage< ::ProtoOAAssetClassListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAssetClassListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOATraderReq* Arena::CreateMaybeMessage< ::ProtoOATraderReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOATraderReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOATraderRes* Arena::CreateMaybeMessage< ::ProtoOATraderRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOATraderRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOATraderUpdatedEvent* Arena::CreateMaybeMessage< ::ProtoOATraderUpdatedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOATraderUpdatedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAReconcileReq* Arena::CreateMaybeMessage< ::ProtoOAReconcileReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAReconcileReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAReconcileRes* Arena::CreateMaybeMessage< ::ProtoOAReconcileRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAReconcileRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAOrderErrorEvent* Arena::CreateMaybeMessage< ::ProtoOAOrderErrorEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAOrderErrorEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOADealListReq* Arena::CreateMaybeMessage< ::ProtoOADealListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOADealListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOADealListRes* Arena::CreateMaybeMessage< ::ProtoOADealListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOADealListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAExpectedMarginReq* Arena::CreateMaybeMessage< ::ProtoOAExpectedMarginReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAExpectedMarginReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAExpectedMarginRes* Arena::CreateMaybeMessage< ::ProtoOAExpectedMarginRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAExpectedMarginRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginChangedEvent* Arena::CreateMaybeMessage< ::ProtoOAMarginChangedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginChangedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOACashFlowHistoryListReq* Arena::CreateMaybeMessage< ::ProtoOACashFlowHistoryListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOACashFlowHistoryListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOACashFlowHistoryListRes* Arena::CreateMaybeMessage< ::ProtoOACashFlowHistoryListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOACashFlowHistoryListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetAccountListByAccessTokenReq* Arena::CreateMaybeMessage< ::ProtoOAGetAccountListByAccessTokenReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetAccountListByAccessTokenReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetAccountListByAccessTokenRes* Arena::CreateMaybeMessage< ::ProtoOAGetAccountListByAccessTokenRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetAccountListByAccessTokenRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOARefreshTokenReq* Arena::CreateMaybeMessage< ::ProtoOARefreshTokenReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOARefreshTokenReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOARefreshTokenRes* Arena::CreateMaybeMessage< ::ProtoOARefreshTokenRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOARefreshTokenRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeSpotsReq* Arena::CreateMaybeMessage< ::ProtoOASubscribeSpotsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeSpotsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeSpotsRes* Arena::CreateMaybeMessage< ::ProtoOASubscribeSpotsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeSpotsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeSpotsReq* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeSpotsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeSpotsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeSpotsRes* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeSpotsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeSpotsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASpotEvent* Arena::CreateMaybeMessage< ::ProtoOASpotEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASpotEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeLiveTrendbarReq* Arena::CreateMaybeMessage< ::ProtoOASubscribeLiveTrendbarReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeLiveTrendbarReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeLiveTrendbarRes* Arena::CreateMaybeMessage< ::ProtoOASubscribeLiveTrendbarRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeLiveTrendbarRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeLiveTrendbarReq* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeLiveTrendbarReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeLiveTrendbarReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeLiveTrendbarRes* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeLiveTrendbarRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeLiveTrendbarRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetTrendbarsReq* Arena::CreateMaybeMessage< ::ProtoOAGetTrendbarsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetTrendbarsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetTrendbarsRes* Arena::CreateMaybeMessage< ::ProtoOAGetTrendbarsRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetTrendbarsRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetTickDataReq* Arena::CreateMaybeMessage< ::ProtoOAGetTickDataReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetTickDataReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetTickDataRes* Arena::CreateMaybeMessage< ::ProtoOAGetTickDataRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetTickDataRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetCtidProfileByTokenReq* Arena::CreateMaybeMessage< ::ProtoOAGetCtidProfileByTokenReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetCtidProfileByTokenReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAGetCtidProfileByTokenRes* Arena::CreateMaybeMessage< ::ProtoOAGetCtidProfileByTokenRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAGetCtidProfileByTokenRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOADepthEvent* Arena::CreateMaybeMessage< ::ProtoOADepthEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOADepthEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeDepthQuotesReq* Arena::CreateMaybeMessage< ::ProtoOASubscribeDepthQuotesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeDepthQuotesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASubscribeDepthQuotesRes* Arena::CreateMaybeMessage< ::ProtoOASubscribeDepthQuotesRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASubscribeDepthQuotesRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeDepthQuotesReq* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeDepthQuotesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeDepthQuotesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAUnsubscribeDepthQuotesRes* Arena::CreateMaybeMessage< ::ProtoOAUnsubscribeDepthQuotesRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAUnsubscribeDepthQuotesRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolCategoryListReq* Arena::CreateMaybeMessage< ::ProtoOASymbolCategoryListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolCategoryListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOASymbolCategoryListRes* Arena::CreateMaybeMessage< ::ProtoOASymbolCategoryListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOASymbolCategoryListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountLogoutReq* Arena::CreateMaybeMessage< ::ProtoOAAccountLogoutReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountLogoutReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountLogoutRes* Arena::CreateMaybeMessage< ::ProtoOAAccountLogoutRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountLogoutRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAAccountDisconnectEvent* Arena::CreateMaybeMessage< ::ProtoOAAccountDisconnectEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAAccountDisconnectEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallListReq* Arena::CreateMaybeMessage< ::ProtoOAMarginCallListReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallListReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallListRes* Arena::CreateMaybeMessage< ::ProtoOAMarginCallListRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallListRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallUpdateReq* Arena::CreateMaybeMessage< ::ProtoOAMarginCallUpdateReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallUpdateReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallUpdateRes* Arena::CreateMaybeMessage< ::ProtoOAMarginCallUpdateRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallUpdateRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallUpdateEvent* Arena::CreateMaybeMessage< ::ProtoOAMarginCallUpdateEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallUpdateEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoOAMarginCallTriggerEvent* Arena::CreateMaybeMessage< ::ProtoOAMarginCallTriggerEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoOAMarginCallTriggerEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
