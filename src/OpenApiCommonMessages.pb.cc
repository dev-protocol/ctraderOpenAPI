// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OpenApiCommonMessages.proto

#include "OpenApiCommonMessages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
class ProtoMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoMessage> _instance;
} _ProtoMessage_default_instance_;
class ProtoErrorResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoErrorRes> _instance;
} _ProtoErrorRes_default_instance_;
class ProtoHeartbeatEventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProtoHeartbeatEvent> _instance;
} _ProtoHeartbeatEvent_default_instance_;
static void InitDefaultsscc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoErrorRes_default_instance_;
    new (ptr) ::ProtoErrorRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoHeartbeatEvent_OpenApiCommonMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoHeartbeatEvent_default_instance_;
    new (ptr) ::ProtoHeartbeatEvent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoHeartbeatEvent_OpenApiCommonMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoHeartbeatEvent_OpenApiCommonMessages_2eproto}, {}};

static void InitDefaultsscc_info_ProtoMessage_OpenApiCommonMessages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ProtoMessage_default_instance_;
    new (ptr) ::ProtoMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProtoMessage_OpenApiCommonMessages_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProtoMessage_OpenApiCommonMessages_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_OpenApiCommonMessages_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_OpenApiCommonMessages_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_OpenApiCommonMessages_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_OpenApiCommonMessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::ProtoMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessage, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessage, payload_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessage, clientmsgid_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, payloadtype_),
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, errorcode_),
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, description_),
  PROTOBUF_FIELD_OFFSET(::ProtoErrorRes, maintenanceendtimestamp_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::ProtoHeartbeatEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ProtoHeartbeatEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoHeartbeatEvent, payloadtype_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::ProtoMessage)},
  { 11, 20, sizeof(::ProtoErrorRes)},
  { 24, 30, sizeof(::ProtoHeartbeatEvent)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoErrorRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProtoHeartbeatEvent_default_instance_),
};

const char descriptor_table_protodef_OpenApiCommonMessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033OpenApiCommonMessages.proto\032 OpenApiCo"
  "mmonModelMessages.proto\"I\n\014ProtoMessage\022"
  "\023\n\013payloadType\030\001 \002(\r\022\017\n\007payload\030\002 \001(\014\022\023\n"
  "\013clientMsgId\030\003 \001(\t\"\213\001\n\rProtoErrorRes\0221\n\013"
  "payloadType\030\001 \001(\0162\021.ProtoPayloadType:\tER"
  "ROR_RES\022\021\n\terrorCode\030\002 \002(\t\022\023\n\013descriptio"
  "n\030\003 \001(\t\022\037\n\027maintenanceEndTimestamp\030\004 \001(\004"
  "\"N\n\023ProtoHeartbeatEvent\0227\n\013payloadType\030\001"
  " \001(\0162\021.ProtoPayloadType:\017HEARTBEAT_EVENT"
  "BB\n\"com.xtrader.protocol.proto.commonsB\027"
  "ContainerCommonMessagesP\001\240\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_OpenApiCommonMessages_2eproto_deps[1] = {
  &::descriptor_table_OpenApiCommonModelMessages_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_OpenApiCommonMessages_2eproto_sccs[3] = {
  &scc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto.base,
  &scc_info_ProtoHeartbeatEvent_OpenApiCommonMessages_2eproto.base,
  &scc_info_ProtoMessage_OpenApiCommonMessages_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_OpenApiCommonMessages_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_OpenApiCommonMessages_2eproto = {
  false, false, descriptor_table_protodef_OpenApiCommonMessages_2eproto, "OpenApiCommonMessages.proto", 428,
  &descriptor_table_OpenApiCommonMessages_2eproto_once, descriptor_table_OpenApiCommonMessages_2eproto_sccs, descriptor_table_OpenApiCommonMessages_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_OpenApiCommonMessages_2eproto::offsets,
  file_level_metadata_OpenApiCommonMessages_2eproto, 3, file_level_enum_descriptors_OpenApiCommonMessages_2eproto, file_level_service_descriptors_OpenApiCommonMessages_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_OpenApiCommonMessages_2eproto(&descriptor_table_OpenApiCommonMessages_2eproto);

// ===================================================================

class ProtoMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoMessage>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_payload(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_clientmsgid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000004) ^ 0x00000004) != 0;
  }
};

ProtoMessage::ProtoMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessage)
}
ProtoMessage::ProtoMessage(const ProtoMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_payload()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArena());
  }
  clientmsgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_clientmsgid()) {
    clientmsgid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientmsgid(), 
      GetArena());
  }
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoMessage)
}

void ProtoMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoMessage_OpenApiCommonMessages_2eproto.base);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payloadtype_ = 0u;
}

ProtoMessage::~ProtoMessage() {
  // @@protoc_insertion_point(destructor:ProtoMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoMessage::ArenaDtor(void* object) {
  ProtoMessage* _this = reinterpret_cast< ProtoMessage* >(object);
  (void)_this;
}
void ProtoMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoMessage& ProtoMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoMessage_OpenApiCommonMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      payload_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      clientmsgid_.ClearNonDefaultToEmpty();
    }
  }
  payloadtype_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required uint32 payloadType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_payloadtype(&has_bits);
          payloadtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string clientMsgId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_clientmsgid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoMessage.clientMsgId");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 payloadType = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_payloadtype(), target);
  }

  // optional bytes payload = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  // optional string clientMsgId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientmsgid().data(), static_cast<int>(this->_internal_clientmsgid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoMessage.clientMsgId");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_clientmsgid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessage)
  return target;
}

size_t ProtoMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessage)
  size_t total_size = 0;

  // required uint32 payloadType = 1;
  if (_internal_has_payloadtype()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_payloadtype());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional bytes payload = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_payload());
    }

    // optional string clientMsgId = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_clientmsgid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessage)
    MergeFrom(*source);
  }
}

void ProtoMessage::MergeFrom(const ProtoMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_payload(from._internal_payload());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_clientmsgid(from._internal_clientmsgid());
    }
    if (cached_has_bits & 0x00000004u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoMessage::CopyFrom(const ProtoMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoMessage::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoMessage::InternalSwap(ProtoMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  payload_.Swap(&other->payload_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  clientmsgid_.Swap(&other->clientmsgid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoErrorRes::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoErrorRes>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_errorcode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_maintenanceendtimestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000001) ^ 0x00000001) != 0;
  }
};

ProtoErrorRes::ProtoErrorRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoErrorRes)
}
ProtoErrorRes::ProtoErrorRes(const ProtoErrorRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_errorcode()) {
    errorcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_errorcode(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  ::memcpy(&maintenanceendtimestamp_, &from.maintenanceendtimestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&payloadtype_) -
    reinterpret_cast<char*>(&maintenanceendtimestamp_)) + sizeof(payloadtype_));
  // @@protoc_insertion_point(copy_constructor:ProtoErrorRes)
}

void ProtoErrorRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto.base);
  errorcode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  maintenanceendtimestamp_ = PROTOBUF_ULONGLONG(0);
  payloadtype_ = 50;
}

ProtoErrorRes::~ProtoErrorRes() {
  // @@protoc_insertion_point(destructor:ProtoErrorRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoErrorRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  errorcode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProtoErrorRes::ArenaDtor(void* object) {
  ProtoErrorRes* _this = reinterpret_cast< ProtoErrorRes* >(object);
  (void)_this;
}
void ProtoErrorRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoErrorRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoErrorRes& ProtoErrorRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoErrorRes_OpenApiCommonMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoErrorRes::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoErrorRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      errorcode_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x0000000cu) {
    maintenanceendtimestamp_ = PROTOBUF_ULONGLONG(0);
    payloadtype_ = 50;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoErrorRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoPayloadType payloadType = 1 [default = ERROR_RES];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required string errorCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_errorcode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoErrorRes.errorCode");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoErrorRes.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 maintenanceEndTimestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_maintenanceendtimestamp(&has_bits);
          maintenanceendtimestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoErrorRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoErrorRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoPayloadType payloadType = 1 [default = ERROR_RES];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  // required string errorCode = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_errorcode().data(), static_cast<int>(this->_internal_errorcode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoErrorRes.errorCode");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_errorcode(), target);
  }

  // optional string description = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "ProtoErrorRes.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // optional uint64 maintenanceEndTimestamp = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_maintenanceendtimestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoErrorRes)
  return target;
}

size_t ProtoErrorRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoErrorRes)
  size_t total_size = 0;

  // required string errorCode = 2;
  if (_internal_has_errorcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_errorcode());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000eu) {
    // optional string description = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional uint64 maintenanceEndTimestamp = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_maintenanceendtimestamp());
    }

    // optional .ProtoPayloadType payloadType = 1 [default = ERROR_RES];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoErrorRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoErrorRes)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoErrorRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoErrorRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoErrorRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoErrorRes)
    MergeFrom(*source);
  }
}

void ProtoErrorRes::MergeFrom(const ProtoErrorRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoErrorRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_errorcode(from._internal_errorcode());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      maintenanceendtimestamp_ = from.maintenanceendtimestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      payloadtype_ = from.payloadtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProtoErrorRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoErrorRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoErrorRes::CopyFrom(const ProtoErrorRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoErrorRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoErrorRes::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void ProtoErrorRes::InternalSwap(ProtoErrorRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  errorcode_.Swap(&other->errorcode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(maintenanceendtimestamp_, other->maintenanceendtimestamp_);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoErrorRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ProtoHeartbeatEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<ProtoHeartbeatEvent>()._has_bits_);
  static void set_has_payloadtype(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ProtoHeartbeatEvent::ProtoHeartbeatEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoHeartbeatEvent)
}
ProtoHeartbeatEvent::ProtoHeartbeatEvent(const ProtoHeartbeatEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payloadtype_ = from.payloadtype_;
  // @@protoc_insertion_point(copy_constructor:ProtoHeartbeatEvent)
}

void ProtoHeartbeatEvent::SharedCtor() {
  payloadtype_ = 51;
}

ProtoHeartbeatEvent::~ProtoHeartbeatEvent() {
  // @@protoc_insertion_point(destructor:ProtoHeartbeatEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProtoHeartbeatEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ProtoHeartbeatEvent::ArenaDtor(void* object) {
  ProtoHeartbeatEvent* _this = reinterpret_cast< ProtoHeartbeatEvent* >(object);
  (void)_this;
}
void ProtoHeartbeatEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProtoHeartbeatEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProtoHeartbeatEvent& ProtoHeartbeatEvent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProtoHeartbeatEvent_OpenApiCommonMessages_2eproto.base);
  return *internal_default_instance();
}


void ProtoHeartbeatEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoHeartbeatEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payloadtype_ = 51;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProtoHeartbeatEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .ProtoPayloadType payloadType = 1 [default = HEARTBEAT_EVENT];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ProtoPayloadType_IsValid(val))) {
            _internal_set_payloadtype(static_cast<::ProtoPayloadType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProtoHeartbeatEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoHeartbeatEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .ProtoPayloadType payloadType = 1 [default = HEARTBEAT_EVENT];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_payloadtype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoHeartbeatEvent)
  return target;
}

size_t ProtoHeartbeatEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoHeartbeatEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .ProtoPayloadType payloadType = 1 [default = HEARTBEAT_EVENT];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_payloadtype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoHeartbeatEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoHeartbeatEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoHeartbeatEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProtoHeartbeatEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoHeartbeatEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoHeartbeatEvent)
    MergeFrom(*source);
  }
}

void ProtoHeartbeatEvent::MergeFrom(const ProtoHeartbeatEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoHeartbeatEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_payloadtype()) {
    _internal_set_payloadtype(from._internal_payloadtype());
  }
}

void ProtoHeartbeatEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoHeartbeatEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoHeartbeatEvent::CopyFrom(const ProtoHeartbeatEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoHeartbeatEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoHeartbeatEvent::IsInitialized() const {
  return true;
}

void ProtoHeartbeatEvent::InternalSwap(ProtoHeartbeatEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(payloadtype_, other->payloadtype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProtoHeartbeatEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMessage* Arena::CreateMaybeMessage< ::ProtoMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoErrorRes* Arena::CreateMaybeMessage< ::ProtoErrorRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoErrorRes >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoHeartbeatEvent* Arena::CreateMaybeMessage< ::ProtoHeartbeatEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoHeartbeatEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
